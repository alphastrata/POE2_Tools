// @generated by build.rs
use super::arithmetic::*;
use serde::{Deserialize, de::{Deserializer, Error}};
use std::collections::HashMap;

#[derive(Debug, Clone)]
pub enum Stat {
    AccuracyRating(Plus),
    AccuracyRatingVsBleedingEnemies(Other),
    AccuracyRatingWhileDualWielding(Plus),
    AdditionalAllAttributes(Other),
    AdditionalCriticalStrikeChancePermyriadWithHeraldSkills(Other),
    AdditionalMaximumAllElementalResistances(Other),
    AdditionalPhysicalDamageReduction(Other),
    AdditiveArmourModifiersApplyToEnergyShieldRechargeRateAt(Other),
    AftershockAreaOfEffect(Plus),
    AggravateBleedingOlderThanMsOnHit(Other),
    AggravateBleedingOnAttackCritChance(Other),
    AggravateBleedingOnExertedAttackHitChance(Other),
    AggravateBleedingWhenInflictedVsEnemiesOnJaggedGroundChance(Other),
    AilmentChance(Plus),
    AilmentEffect(Plus),
    AilmentThreshold(Plus),
    AllAttributes(Plus),
    AllDamageCanChill(Other),
    AllDamageCanShock(Other),
    AllSkillGemLevel(Plus),
    AllSkillGemQuality(Plus),
    AlliesInPresenceAccuracyRating(Other),
    AlliesInPresenceAttackSpeed(Plus),
    AlliesInPresenceLifeRegenerationRatePerMinuteEqualToYourMaximumLife(Other),
    AncestralSlamEveryOtherSlam(Other),
    ArcaneSurgeEffectOnSelf(Plus),
    AreaDamage(Plus),
    AreaOfEffect(Plus),
    AreaSkillKnockbackChance(Other),
    Armour(Plus),
    ArmourAndEvasionOnLowLife(Plus),
    ArmourBreak(Other),
    ArmourBreakAmount(Plus),
    ArmourBreakDamage(Other),
    ArmourBreakDuration(Plus),
    ArmourBreakEqualTo(Other),
    ArmourEvasion(Plus),
    ArrowBaseNumberOfTargetsToPierce(Other),
    ArrowCriticalStrikeChance(Plus),
    ArrowSpeedAdditiveModifiersAlsoApplyToBowDamage(Other),
    AscendancyBeidatsGazeMana(Plus),
    AscendancyBeidatsHandEnergyShield(Plus),
    AscendancyBeidatsWillSpirit(Plus),
    AscendancyChronomancerApexOfTheMomentBaseSlowAuraValue(Other),
    AscendancyEnergyGenerated(Plus),
    AscendancyPathfinderFlaskChargesGained(Plus),
    AscendancyTitanDamageReductionRatingFromBodyArmour(Plus),
    AscendancyWarbringerBlockChance(Plus),
    AtlasKeystoneCorruptionRoulette(Other),
    AtlasKeystoneExtremeArchaeology(Other),
    AtlasKeystonePrefixOrSuffixModEffect(Plus),
    AttackAdditionalCriticalStrikeChancePermyriad(Other),
    AttackAndCastSpeed(Plus),
    AttackAreaDamage(Plus),
    AttackAreaOfEffect(Plus),
    AttackCriticalStrikeChance(Plus),
    AttackCriticalStrikeMultiplier(Plus),
    AttackDamage(Plus),
    AttackDamageVsBleedingEnemies(Plus),
    AttackManaCost(Plus),
    AttackSkillsAdditionalTotemsAllowed(Other),
    AttackSkillsDamage(Plus),
    AttackSpeed(Plus),
    AttackSpeedWhileDualWielding(Plus),
    AttacksChanceToBlindOnHit(Other),
    AuraEffect(Plus),
    AxeAttackSpeed(Plus),
    AxeDamage(Plus),
    BaseAggravateBleedingOnAttackHitChance(Other),
    BaseAllAilmentDurationOnSelf(Plus),
    BaseArmour(Other),
    BaseAttackDamagePenetratesElementalResist(Other),
    BaseBleedDuration(Plus),
    BaseBleedingEffect(Plus),
    BaseBlock(Other),
    BaseBodyArmourPermyriadToGainAsPhysicalThornsDamage(Other),
    BaseCastSpeed(Plus),
    BaseChanceToInflictBleeding(Other),
    BaseChanceToNotConsumeCorpse(Other),
    BaseChanceToPierce(Other),
    BaseChanceToPoisonOnHit(Other),
    BaseChaosDamageResistance(Other),
    BaseColdDamageResistance(Other),
    BaseCooldownSpeed(Plus),
    BaseCost(Plus),
    BaseCriticalStrikeMultiplier(Plus),
    BaseCurseDuration(Plus),
    BaseDamageRemovedFromManaBeforeLife(Other),
    BaseDamagingAilmentEffect(Plus),
    BaseDarkness(Other),
    BaseDarknessRefreshRateMs(Other),
    BaseDebuffSlowMagnitude(Plus),
    BaseDexterity(Other),
    BaseDexterityAndIntelligence(Other),
    BaseElementalStatusAilmentDuration(Plus),
    BaseEnemyCriticalStrikeChance(Plus),
    BaseEvasionRating(Other),
    BaseFireDamageResistance(Other),
    BaseFrenzyChargeDuration(Plus),
    BaseIgniteEffect(Plus),
    BaseIntelligence(Other),
    BaseLifeGainedOnEnemyDeath(Other),
    BaseLifeLeechAmount(Plus),
    BaseLifeLeechDoesNotStopAtFullLife(Other),
    BaseLifeLeechFromAllSpellDamagePermyriad(Other),
    BaseLifeLeechRate(Plus),
    BaseManaCost(Minus),
    BaseManaLeechAmount(Plus),
    BaseManaLeechIsInstant(Other),
    BaseMaximumChaosDamageResistance(Other),
    BaseMaximumColdDamageResistance(Other),
    BaseMaximumEnergyShield(Other),
    BaseMaximumFireDamageResistance(Other),
    BaseMaximumLife(Other),
    BaseMaximumLightningDamageResistance(Other),
    BaseMaximumMana(Other),
    BaseMovementVelocity(Plus),
    BasePenetrateElementalResistances(Other),
    BasePhysicalDamageReductionRating(Other),
    BasePoisonDuration(Plus),
    BasePoisonEffect(Plus),
    BaseProjectileSpeed(Plus),
    BaseReduceEnemyColdResistance(Other),
    BaseReduceEnemyFireResistance(Other),
    BaseReduceEnemyLightningResistance(Other),
    BaseResistAllElements(Other),
    BaseSelfCriticalStrikeMultiplier(Minus),
    BaseSelfFreezeDuration(Minus),
    BaseSelfIgniteDuration(Minus),
    BaseSelfShockDuration(Minus),
    BaseShouldHaveArcaneSurgeFromStat(Other),
    BaseSkillAreaOfEffect(Plus),
    BaseSkillCostLifeInsteadOfMana(Other),
    BaseSlowPotency(Plus),
    BaseSpellCriticalStrikeChanceOverridePermyriad(Other),
    BaseSpellCriticalStrikeMultiplier(Plus),
    BaseStrength(Other),
    BaseStrengthAndDexterity(Other),
    BaseStrengthAndIntelligence(Other),
    BaseStunRecovery(Plus),
    BaseThornsCriticalStrikeChance(Other),
    BaseThornsCriticalStrikeMultiplier(Plus),
    BleedOnCrit(Other),
    BlindEffect(Plus),
    BlindEnemiesWhenTheyStunYou(Other),
    BlockChance(Plus),
    BlockChanceFromEquippedShieldIs(Other),
    BlockRecovery(Plus),
    BodyArmour(Plus),
    BodyArmourEvasionRating(Plus),
    BowAccuracyRating(Plus),
    BowAttackSpeed(Plus),
    BowCriticalStrikeMultiplier(Plus),
    BowDamage(Plus),
    BreachFlameEffectsDoubled(Other),
    BuffTimePassed(Plus),
    BuildupJadeEveryXMs(Other),
    CanApplyAdditionalChill(Other),
    CanApplyAdditionalShock(Other),
    CanBlockAllHitsWhileShieldIsLowered(Other),
    CannotBeBlindedWhileOnFullLife(Other),
    CannotGainSpiritFromEquipment(Other),
    CannotRechargeEnergyShield(Other),
    CastSpeed(Plus),
    CastSpeedForColdSkills(Plus),
    Chance(Other),
    ChanceForSkillsToAvoidCooldown(Other),
    ChanceToDoubleArmourEffectOnHit(Other),
    ChanceToForkExtraProjectile(Other),
    ChanceToGainOnslaughtOnKillWithAxes(Other),
    ChanceToPoisonOnCriticalStrikeWithDagger(Other),
    ChanceToSummonTwoTotems(Other),
    ChaosDamage(Plus),
    ChaosDamageResistanceIsDoubled(Other),
    ChaosSkillGemLevel(Plus),
    ChargesGained(Plus),
    CharmChargesGained(Plus),
    CharmChargesUsed(Plus),
    CharmDuration(Plus),
    CharmEffect(Plus),
    Charms(Other),
    ChillAndFreezeDuration(Plus),
    ChillDuration(Plus),
    ChillEffect(Plus),
    ChillEffectivenessOnSelf(Plus),
    ClawAccuracyRating(Plus),
    ClawAttackSpeed(Plus),
    ClawCriticalStrikeChance(Plus),
    ClawDamage(Plus),
    ColdDamage(Plus),
    ColdExposureEffect(Plus),
    ColdExposureYouInflictLowersColdResistanceByExtra(Other),
    ColdHitAndDotDamage(Other),
    ColdSkillGemLevel(Plus),
    ConvertAllLifeLeechToEnergyShieldLeech(Other),
    CorpsesInYourPresenceExplodeDealing(Other),
    CreateChillingGroundOnFreeze(Other),
    CriticalHitBleedingEffect(Plus),
    CriticalHitDamageBonus(Plus),
    CriticalHitDamagingAilmentEffect(Plus),
    CriticalHitIgniteEffect(Plus),
    CriticalStrikeChance(Plus),
    CriticalStrikeChanceAgainstEnemiesOnFullLife(Plus),
    CriticalStrikeChanceWhileDualWielding(Plus),
    CriticalStrikeMultiplier(Plus),
    CriticalStrikeMultiplierVsEnemiesOnFullLife(Plus),
    CriticalStrikeMultiplierWithDagger(Plus),
    CriticalStrikesIgnorePositiveElementalResistances(Other),
    CrossbowAttack(Other),
    CrossbowAttackSpeed(Plus),
    CrossbowCriticalStrikeChance(Plus),
    CrossbowCriticalStrikeMultiplier(Plus),
    CrossbowDamage(Plus),
    CrushingBlow(Other),
    CullingStrikeThreshold(Plus),
    CullingStrikeVsMarkedEnemy(Other),
    CurseAreaOfEffect(Plus),
    CurseDelay(Plus),
    CurseEffect(Plus),
    CurseEffectOnSelf(Plus),
    CursesNeverExpire(Other),
    DaggerAttackSpeed(Plus),
    DaggerCriticalStrikeChance(Plus),
    DaggerDamage(Plus),
    Damage(Plus),
    DamageRemovedFromYourNearestTotemBeforeLifeOrEs(Other),
    DamageTaken(Plus),
    DamageTakenGoesToMana(Other),
    DamageVsEnemiesOnLowLife(Plus),
    DamageVsShockedEnemies(Plus),
    DamageWhileDualWielding(Plus),
    DamageWithHitsIsLuckyVsEnemiesOnLowLife(Other),
    DamageWithHitsIsLuckyVsHeavyStunnedEnemies(Other),
    DamagingAilmentDuration(Plus),
    DamagingAilmentsDealDamage(Plus),
    DarknessPerLevel(Other),
    DarknessRefreshRate(Plus),
    DazeBuildUp(Plus),
    DazeDuration(Plus),
    DeadeyeAccuracyUnaffectedByRange(Other),
    DeadeyeMovementSpeedPenalty(Plus),
    DeadeyeProjectileDamage(Plus),
    DebuffTimePassed(Plus),
    DecimatingStrike(Other),
    Defences(Plus),
    DefendWith(Other),
    Dexterity(Plus),
    DisplayPassiveAttributeText(Other),
    DistanceScaledAccuracyRatingPenalty(Plus),
    DoubleNumberOfPoisonYouCanInflict(Other),
    DoubleTabletEffectChance(Other),
    DrainFocus(Other),
    DummyStatDisplayNothing(Other),
    ElectrocutedEnemyDamageTaken(Plus),
    ElementalDamage(Plus),
    ElementalDamageCanInflictBleeding(Other),
    ElementalDamageTaken(Other),
    ElementalDamageWithAttackSkills(Plus),
    ElementalStormCooldownRecoverySpeed(Plus),
    ElementalistChillMaximumMagnitudeOverride(Other),
    EmpoweredAttackDamage(Plus),
    EmpoweredAttackHitDamageStunMultiplier(Plus),
    EnduranceChargeDuration(Plus),
    EnemiesAreMaimedForXSecondsAfterBecomingUnpinned(Other),
    EnemiesChaosResistance(Other),
    EnemiesCursedByYouHaveLifeRegenerationRate(Plus),
    EnemiesInPresenceCooldownRecovery(Plus),
    EnemiesNearMarkedEnemyAreBlinded(Other),
    EnemiesYouCurseCannotRechargeEnergyShield(Other),
    EnergyGenerated(Plus),
    EnergyShield(Plus),
    EnergyShieldDelay(Minus),
    EnergyShieldFromFocus(Plus),
    EnergyShieldFromHelmet(Plus),
    EnergyShieldGainedOnBlock(Other),
    EnergyShieldRechargeRate(Plus),
    EnergyShieldRecoveryRate(Plus),
    Evasion(Plus),
    EvasionAndPhysicalDamageReductionRating(Plus),
    EvasionRating(Plus),
    EvasionRatingAlsoReducesPhysicalDamage(Other),
    ExpeditionMonstersLogbookChance(Plus),
    ExposureYouInflictLowersAffectedResistanceByExtra(Other),
    ExtraDamageRollsWithLightningDamageOnNonCriticalHits(Other),
    FasterBleed(Other),
    FasterBurn(Other),
    FinalRepeatOfSpellsAreaOfEffect(Plus),
    FireDamage(Plus),
    FireExposureEffect(Plus),
    FireExposureYouInflictLowersFireResistanceByExtra(Other),
    FlailAttackSpeed(Plus),
    FlailCriticalStrikeChance(Plus),
    FlailCriticalStrikeMultiplier(Plus),
    FlailDamage(Plus),
    FlaskChargesGained(Plus),
    FlaskChargesUsed(Plus),
    FlaskDuration(Plus),
    FlaskEffect(Plus),
    FlaskLifeAndManaRecovery(Plus),
    FlaskLifeAndManaToRecover(Plus),
    FlaskLifeRecoveryRate(Plus),
    FlaskLifeToRecover(Plus),
    FlaskManaChargesUsed(Plus),
    FlaskManaToRecover(Plus),
    Flasks(Other),
    FocusDecay(Other),
    FocusDecayDelayMs(Other),
    FreezeDuration(Plus),
    FreezeThreshold(Plus),
    Gain(Other),
    GainAccuracyRatingEqualToIntelligence(Other),
    GainAccuracyRatingEqualToStrength(Other),
    GainArcaneSurgeOnCrit(Other),
    GainEnduranceChargeOnHeavyStunningRareOrUniqueEnemy(Other),
    GainGuardFlaskChargeWhenHitByEnemyChance(Other),
    GainMaxRageOnRageGainFromHit(Other),
    GainMaximumEnduranceChargesOnEnduranceChargeGained(Other),
    GainMaximumFrenzyChargesOnFrenzyChargeGained(Other),
    GainMaximumPowerChargesOnPowerChargeGained(Other),
    GainTailwindStackOnSkillUse(Other),
    GainUnboundAilmentStacks(Other),
    GainXRageOnHitWithAxes(Other),
    GainXRageOnMeleeHit(Other),
    GainXRageWhenHit(Other),
    GemRequirementsCanBeSatisfiedByHighestAttribute(Other),
    GemlingDoubleBasicAttributeBonuses(Other),
    GemlingSkillCost(Plus),
    GenerateXChargesForCharmsPerMinute(Other),
    GenerateXChargesForLifeFlasksPerMinute(Other),
    GenerateXChargesForManaFlasksPerMinute(Other),
    GlobalChanceToBlindOnHit(Other),
    GlobalDefences(Plus),
    GlobalGemAttributeRequirements(Plus),
    GlobalItemAttributeRequirements(Plus),
    GrenadeFuseDuration(Plus),
    GrenadeSkill(Other),
    GrenadeSkillAreaOfEffect(Plus),
    GrenadeSkillCooldownCount(Plus),
    GrenadeSkillCooldownSpeed(Plus),
    GrenadeSkillDamage(Plus),
    GrenadeSkillNumberOfAdditionalProjectiles(Other),
    GuardFlaskEffect(Plus),
    HeavyStunPoiseDecayRate(Plus),
    HeavyStunsHaveCullingStrike(Other),
    HellhoundTakes(Other),
    HeraldSkillsManaReservation(Plus),
    HinderDuration(Plus),
    HitDamage(Plus),
    HitDamageElectrocuteMultiplier(Plus),
    HitDamageFreezeMultiplier(Plus),
    HitDamagePinMultiplier(Plus),
    HitDamageStunMultiplier(Plus),
    HitFor(Other),
    HitsIgnoreElementalResistancesVsFrozenEnemies(Other),
    IceCrystalMaximumLife(Plus),
    IgniteChance(Plus),
    IgniteDuration(Plus),
    IgniteEffectOnSelf(Plus),
    IgniteShockChillDuration(Plus),
    IgnitesApplyFireResistance(Plus),
    InfernalFlameInsteadOfMana(Other),
    InfernalistBurnLifeAndEs(Other),
    InfernalistCriticalStrikeMultiplier(Plus),
    InflictFireExposureOnHitsThatHeavyStun(Other),
    InflictWitheredForXSecondsOnUnwitheredEnemiesWhenTheyEnterYourPresence(Other),
    Intelligence(Plus),
    JaggedGroundDuration(Plus),
    JaggedGroundEffect(Plus),
    JaggedGroundEnemyDamageTaken(Plus),
    KeystoneAcrobatics(Other),
    KeystoneAncestralBond(Other),
    KeystoneAvatarOfFire(Other),
    KeystoneBloodMagic(Other),
    KeystoneBulwark(Other),
    KeystoneChaosInoculation(Other),
    KeystoneChargeCycle(Other),
    KeystoneConduit(Other),
    KeystoneDanceWithDeath(Other),
    KeystoneEldritchBattery(Other),
    KeystoneElementalEquilibrium(Other),
    KeystoneEternalYouth(Other),
    KeystoneGiantsBlood(Other),
    KeystoneGlancingBlows(Other),
    KeystoneHeartstopper(Other),
    KeystoneHexMaster(Other),
    KeystoneIronReflexes(Other),
    KeystoneManaShield(Other),
    KeystoneOasis(Other),
    KeystonePainAttunement(Other),
    KeystoneUnwaveringStance(Other),
    KeystoneVaalPact(Other),
    KeystoneZealotsOath(Other),
    KnockbackChance(Other),
    KnockbackDistance(Plus),
    KnockbackOnCritWithQuarterstaff(Other),
    Leech(Other),
    LifeFlaskChargesGained(Plus),
    LifeFlaskEffectsAreNotRemovedAtFullLife(Other),
    LifeGainedOnBlock(Other),
    LifeRecovery(Plus),
    LifeRecoveryRate(Plus),
    LifeRegenerateRatePerSecond(Other),
    LifeRegenerationRate(Plus),
    LifeRegenerationRatePerMinute(Other),
    LifeRemnantsGainPerGlobe(Other),
    LifeReservedByStat(Other),
    LightRadius(Plus),
    LightningDamage(Plus),
    LightningExposureEffect(Plus),
    LightningHitAndDotDamage(Other),
    LightningPenetration(Other),
    LightningSkillAdditionalChainChance(Other),
    LinkSkillBuffEffect(Plus),
    LinkSkillCastSpeed(Plus),
    LinkSkillDuration(Plus),
    LinkSkillsCanTargetMinions(Other),
    LinkToXAdditionalRandomAllies(Other),
    Lose(Other),
    LoseAllTailwindWhenHit(Other),
    MaceDamage(Plus),
    MaceHitDamageStunMultiplier(Plus),
    MaceSlamAftershockChance(Other),
    MaceStrikeAftershockChance(Other),
    MaimOnHit(Other),
    ManaCost(Plus),
    ManaFlaskChargesGained(Plus),
    ManaGainedOnBlock(Other),
    ManaLeechAppliesRecoveryToEnergyShieldAlso(Other),
    ManaRecoveryRate(Plus),
    ManaRegenerationRate(Plus),
    MapAfflictionEncounterBossChance(Plus),
    MapAfflictionRewardProgressOnKill(Plus),
    MapAfflictionSecondaryWaveAcceleration(Plus),
    MapBasicCurrencyDropChance(Plus),
    MapBossAreaChanceToBeCorrupted(Other),
    MapBossDamage(Plus),
    MapBossDroppedItemQuantity(Plus),
    MapBossExperience(Plus),
    MapBossItemRarity(Plus),
    MapBossMaximumLife(Plus),
    MapBossingDifficulty(Plus),
    MapBreachChanceToBeGuardedByMagicPack(Other),
    MapBreachChests(Plus),
    MapBreachChestsDropDoubleSplintersChance(Other),
    MapBreachDomainDifficulty(Plus),
    MapBreachHandsInflictWakingNightmare(Other),
    MapBreachMonsterQuantity(Plus),
    MapBreachMonsterSplinterQuantity(Plus),
    MapBreachRaresCatalystFullStackChance(Other),
    MapBreachRaresHaveSoulEater(Other),
    MapBreachTimePassed(Plus),
    MapDeliriumAdditionalRewardTypeChance(Other),
    MapDeliriumBossLife(Plus),
    MapDeliriumBossSplinterAmount(Plus),
    MapDeliriumDaemonDamage(Plus),
    MapDeliriumDifficultyScalingFromMirrorIsDouble(Other),
    MapDeliriumDoodads(Plus),
    MapDroppedMapsRarity(Plus),
    MapDuplicateXRareMonsters(Other),
    MapExpeditionArtifactQuantity(Plus),
    MapExpeditionChestMarkerCount(Plus),
    MapExpeditionChestsDespawnAfterXSeconds(Other),
    MapExpeditionEliteMarkerCount(Plus),
    MapExpeditionFuseBurnTime(Plus),
    MapExpeditionRareMonsters(Plus),
    MapExpeditionRelicModEffect(Plus),
    MapExpeditionVendorRerollCurrencyQuantity(Plus),
    MapExpeditionXExtraRelicPrefixes(Other),
    MapExpeditionXExtraRelicSuffixes(Other),
    MapFinalBossMapKeyOfAtLeastSameTierAsCurrentMapDropChance(Other),
    MapGoldDropChance(Plus),
    MapItemDropQuantity(Plus),
    MapItemDropRarity(Plus),
    MapJewelDropChance(Plus),
    MapKillingRareMonstersPausesDeliriumMirrorTimerForXSeconds(Other),
    MapLogbookDifficulty(Plus),
    MapMagicChestAmount(Plus),
    MapMagicPackSize(Plus),
    MapMapItemDropChance(Plus),
    MapMapsDropWithDistilledEmotionsAppliedChance(Other),
    MapModEffect(Plus),
    MapMonolithChance(Other),
    MapMonsterTre(Plus),
    MapNonUniqueDeliriumMonstersSplinterAmount(Plus),
    MapNumberOfMagicPacks(Plus),
    MapNumberOfRarePacks(Plus),
    MapPackSize(Plus),
    MapPinnacleBossAdditionalUniqueDropChance(Other),
    MapPinnacleBossDifficulty(Plus),
    MapPinnacleBossDropsXCorruptedRareTablets(Other),
    MapPinnacleBossDropsXWaystones(Other),
    MapPinnacleBossItemDroppedRarity(Plus),
    MapPinnacleBossRareSocketCurrencyChance(Other),
    MapPinnacleBossSpecialGemDropChance(Other),
    MapPlayerDamageTaken(Plus),
    MapPlayerShrineBuffEffectOnSelf(Plus),
    MapPlayerShrineEffectDuration(Plus),
    MapRareChestAmount(Plus),
    MapRitualAdditionalDaemon(Other),
    MapRitualAdditionalRewardRerolls(Other),
    MapRitualAdditionalWildwoodPacks(Other),
    MapRitualContainsWildwoodWisp(Other),
    MapRitualDaemonDamage(Plus),
    MapRitualDeferRewardTributeCost(Plus),
    MapRitualDeferredRewardsAreOfferedAgain(Plus),
    MapRitualEncounterCountIsFour(Other),
    MapRitualMagicMonsters(Plus),
    MapRitualMonsterDamage(Plus),
    MapRitualMonsterSpawningSpeed(Plus),
    MapRitualMonsterTankiness(Plus),
    MapRitualNoRevivePenalty(Other),
    MapRitualOmenChance(Plus),
    MapRitualRareMonsters(Plus),
    MapRitualRewardsRerollCost(Plus),
    MapRitualVoodooKingKeyChance(Plus),
    MapSanctumAndUltimatumKeyDropChance(Plus),
    MapShrineChance(Other),
    MapSimulacrumDifficulty(Plus),
    MapSocketCurrencyDropChance(Plus),
    MapStrongboxChance(Other),
    MapStrongboxModEffect(Plus),
    MapTierBonusPermillage(Other),
    MapTowerAugmentQuantity(Plus),
    MapVoodooKingDifficulty(Plus),
    MapsBossDropAdditionalBonusMapChance(Other),
    MapsWithBossesAdditionalEssence(Plus),
    MapsWithBossesAdditionalShrine(Plus),
    MapsWithBossesAdditionalStrongbox(Plus),
    MapsWithBossesAreIrradiated(Other),
    MarkEffect(Plus),
    MarkSkillCastSpeed(Plus),
    MarkSkillDuration(Plus),
    MarkSkillManaCost(Plus),
    MarkedEnemiesCannotDealCriticalStrikes(Other),
    MarkedEnemyAccuracyRating(Plus),
    MarkedEnemyDamageTaken(Plus),
    MasterOfElementsEvasionRating(Plus),
    MasteryChanceToEvadeMeleeAttacks(Plus),
    MaxDemonFormStacks(Other),
    MaxEnduranceCharges(Other),
    MaxFrenzyCharges(Other),
    MaxJadeStacks(Other),
    MaxPowerCharges(Other),
    MaximumDarkness(Plus),
    MaximumEnergyShield(Plus),
    MaximumEnergyShieldFromBodyArmour(Plus),
    MaximumLife(Plus),
    MaximumLifeManaAndEnergyShield(Plus),
    MaximumMana(Plus),
    MaximumRage(Other),
    MeleeAttackSpeed(Plus),
    MeleeCriticalStrikeChance(Plus),
    MeleeDamage(Plus),
    MeleeHitDamageStunMultiplier(Plus),
    MeleeRange(Plus),
    MinionAccuracyRating(Other),
    MinionAdditionalPhysicalDamageReduction(Other),
    MinionAttackAndCastSpeed(Plus),
    MinionChaosResistance(Other),
    MinionColdDamageResistance(Other),
    MinionCooldownRecovery(Plus),
    MinionCriticalStrikeChance(Plus),
    MinionCriticalStrikeMultiplier(Plus),
    MinionDamage(Plus),
    MinionDamageTaken(Other),
    MinionElementalResistance(Other),
    MinionEvasionRating(Plus),
    MinionFireDamageResistance(Other),
    MinionLifeRecoveryRate(Plus),
    MinionLifeRegenerationRatePerMinute(Other),
    MinionLightningDamageResistance(Other),
    MinionMaximumAllElementalResistances(Other),
    MinionMaximumLife(Plus),
    MinionMovementSpeed(Plus),
    MinionReservation(Plus),
    MinionResummonSpeed(Plus),
    MinionSkillAreaOfEffect(Plus),
    MinionsDeal(Other),
    MinionsGainYourDexterity(Other),
    MinionsGetAmuletStatsInsteadOfYou(Other),
    MinionsHave(Other),
    MovementSpeed(Plus),
    NonDamagingAilmentEffect(Plus),
    NonSkillBaseAllDamage(Other),
    NonSkillBaseLightningDamage(Other),
    NonSkillBasePhysicalDamage(Other),
    NonSkillColdDamage(Other),
    NotableKnockbackDistance(Plus),
    NumAdditionalSkillSlots(Other),
    NumCharmSlots(Other),
    NumberOfAdditionalMarksAllowed(Other),
    NumberOfAdditionalPoisonStacks(Other),
    NumberOfAdditionalProjectiles(Other),
    NumberOfInfernalFamiliarsAllowed(Other),
    OfferingAreaOfEffect(Plus),
    OfferingDuration(Plus),
    OfferingLife(Plus),
    OneHandedAttackAilmentChance(Plus),
    OneHandedAttackSpeed(Plus),
    OneHandedMeleeAccuracyRating(Plus),
    OneHandedMeleeAttackSpeed(Plus),
    OneHandedMeleeCriticalStrikeChance(Plus),
    OneHandedMeleeCriticalStrikeMultiplier(Plus),
    PassiveTreeMaceDamage(Plus),
    PathfinderAscendancyPoisonOnEnemiesYouKillSpreadToEnemiesWithinX(Other),
    PathfinderPoisonDuration(Plus),
    PhysicalAttackDamage(Plus),
    PhysicalDamage(Plus),
    PhysicalDamageFromHits(Other),
    PhysicalDamagePreventedRecoupedAsLife(Other),
    PhysicalDamageReductionRating(Plus),
    PhysicalDamageTakenRecoupedAsLife(Other),
    PhysicalHitAndDotDamage(Other),
    PlacingTrapsCooldownRecovery(Plus),
    PoisonDuration(Plus),
    PoisonEffect(Plus),
    PowerChargeDuration(Plus),
    ProjectileAilmentChance(Plus),
    ProjectileDamage(Plus),
    ProjectileHitDamageStunMultiplier(Plus),
    QuarterstaffAccuracyRating(Plus),
    QuarterstaffAttackSpeed(Plus),
    QuarterstaffCriticalStrikeChance(Plus),
    QuarterstaffCriticalStrikeMultiplier(Plus),
    QuarterstaffDamage(Plus),
    QuarterstaffDazeBuildUp(Plus),
    QuarterstaffHitDamageFreezeMultiplier(Plus),
    QuarterstaffHitDamageStunMultiplier(Plus),
    QuarterstaffSkillsThatConsumePowerChargesCountAsConsumingXAdditionalPowerCharges(Other),
    QuiverModEffect(Plus),
    RageDecaySpeed(Plus),
    RageLossDelayMs(Other),
    ReapplyEnemyShockOnConsumingEnemyShockChance(Other),
    Recoup(Other),
    RecoupSpeed(Plus),
    Recover(Other),
    RecoverMaximumLifeOnEnemyKilledChance(Other),
    RecoverXLifeOnBlock(Other),
    ReduceEnemyElementalResistance(Other),
    RefreshIgniteDurationOnCriticalStrikeChance(Other),
    ReloadSpeed(Plus),
    RemoveCurseOnManaFlaskUse(Other),
    ResoluteTechnique(Other),
    RestoreLifeAndManaOnWarcry(Other),
    ShieldArmour(Plus),
    ShieldEvasionRating(Plus),
    ShockChance(Plus),
    ShockDuration(Plus),
    ShockEffect(Plus),
    SkillAreaOfEffect(Plus),
    SkillAreaOfEffectWhenUnarmed(Plus),
    SkillCostBaseLifeEqualToBaseMana(Other),
    SkillEffectDuration(Plus),
    SkillSpeed(Plus),
    SlamAftershockChance(Other),
    SlamSkillAreaOfEffect(Plus),
    SlowsHaveNoPotencyOnYou(Other),
    SmallPassivesEffect(Plus),
    SorceryWard(Plus),
    SpawnDefenderWithTotem(Other),
    SpearAttackSpeed(Plus),
    SpearCriticalStrikeChance(Plus),
    SpearDamage(Plus),
    SpellAreaDamage(Plus),
    SpellAreaOfEffect(Plus),
    SpellCriticalStrikeChance(Plus),
    SpellCriticalStrikeMultiplier(Plus),
    SpellDamage(Plus),
    SpellSkillGemLevel(Plus),
    SpellSkillProjectileSpeed(Plus),
    SpellStaffDamage(Plus),
    Spirit(Plus),
    StaffAttackAreaOfEffect(Plus),
    StormweaverChillEffect(Plus),
    StormweaverShockDuration(Plus),
    Strength(Plus),
    StunThreshold(Plus),
    StunThresholdBasedOn(Other),
    SummonTotemCastSpeed(Plus),
    SupportAnticipationChargeGainFrequency(Plus),
    SupportGemLimit(Plus),
    SwordAttackSpeed(Plus),
    SwordDamage(Plus),
    TabletEffect(Plus),
    ThornsDamage(Plus),
    TitanDamage(Plus),
    TitanExpandedMainInventory(Other),
    TitanMaximumLife(Plus),
    TotemAdditionalPhysicalDamageReduction(Other),
    TotemDamage(Plus),
    TotemDuration(Plus),
    TotemElementalResistance(Other),
    TotemLife(Plus),
    TotemPlacementRange(Plus),
    TotemSkillAttackSpeed(Plus),
    TotemSkillCastSpeed(Plus),
    TotemsAttackSpeed(Plus),
    TotemsRegenerate(Other),
    TotemsSpellsCastSpeed(Plus),
    TrapCriticalStrikeChance(Plus),
    TrapDamage(Plus),
    TrapThrowingSpeed(Plus),
    TriggerElementalStormOnCrit(Other),
    TriggerSkillsRefundHalfEnergySpentChance(Other),
    TriggerWildStrikeOnAttackCrit(Other),
    TriggeredSpellSpellDamage(Plus),
    TwoHandedMeleeAccuracyRating(Plus),
    UnaffectedByChillDuringDodgeRoll(Other),
    UnaffectedByChillWhileManaLeeching(Other),
    UnarmedAttackSkillMeleeDashRange(Plus),
    UnarmedAttackSpeed(Plus),
    WarbringerOverbreakArmour(Other),
    WarcriesBypassCooldown(Other),
    WarcryCooldownSpeed(Plus),
    WarcryDamage(Plus),
    WarcryEmpowersNextXMeleeAttacks(Other),
    WarcrySkillAreaOfEffect(Plus),
    WarcrySpeed(Plus),
    WeaponSwapSpeed(Plus),
    WhileUsingSwordReduceEnemyBlock(Other),
    WitchPassiveMaximumLightningDamage(Plus),
    WitchhunterArmourEvasion(Plus),
    WitchhunterUpToDamage(Plus),
    WitheredEffect(Plus),
    WorldMapUniqueMapsVisibleXUnitsBeyondLightRadius(Other),
    X(Other),
    YouAndAlliesInPresenceAllDamageCanIgniteWhileNotOnLowInfernalFlame(Other),
    YouAndAlliesInPresenceNonSkillBaseAllDamage(Other),
    YouGain(Other),
    Unknown(String, f32),
}

impl Stat {
    pub fn from_key_value(k: &str, v: u16) -> Self {
        match k {
            "accuracy_rating_+%" => Stat::AccuracyRating(Plus(v as f32)),
            "accuracy_rating_vs_bleeding_enemies" => Stat::AccuracyRatingVsBleedingEnemies(Other(v as f32)),
            "accuracy_rating_while_dual_wielding_+%" => Stat::AccuracyRatingWhileDualWielding(Plus(v as f32)),
            "additional_all_attributes" => Stat::AdditionalAllAttributes(Other(v as f32)),
            "additional_critical_strike_chance_permyriad_with_herald_skills" => Stat::AdditionalCriticalStrikeChancePermyriadWithHeraldSkills(Other(v as f32)),
            "additional_maximum_all_elemental_resistances_%" => Stat::AdditionalMaximumAllElementalResistances(Other(v as f32)),
            "additional_physical_damage_reduction_%_per_jade" => Stat::AdditionalPhysicalDamageReduction(Other(v as f32)),
            "additive_armour_modifiers_apply_to_energy_shield_recharge_rate_at_%_value" => Stat::AdditiveArmourModifiersApplyToEnergyShieldRechargeRateAt(Other(v as f32)),
            "aftershock_area_of_effect_+%" => Stat::AftershockAreaOfEffect(Plus(v as f32)),
            "aggravate_bleeding_older_than_ms_on_hit" => Stat::AggravateBleedingOlderThanMsOnHit(Other(v as f32)),
            "aggravate_bleeding_on_attack_crit_chance_%" => Stat::AggravateBleedingOnAttackCritChance(Other(v as f32)),
            "aggravate_bleeding_on_exerted_attack_hit_chance_%" => Stat::AggravateBleedingOnExertedAttackHitChance(Other(v as f32)),
            "aggravate_bleeding_when_inflicted_vs_enemies_on_jagged_ground_chance_%" => Stat::AggravateBleedingWhenInflictedVsEnemiesOnJaggedGroundChance(Other(v as f32)),
            "ailment_chance_+%" => Stat::AilmentChance(Plus(v as f32)),
            "ailment_effect_+%" => Stat::AilmentEffect(Plus(v as f32)),
            "ailment_threshold_+_from_lowest_of_base_boots_evasion_rating_and_armour" => Stat::AilmentThreshold(Plus(v as f32)),
            "all_attributes_+%" => Stat::AllAttributes(Plus(v as f32)),
            "all_damage_can_chill" => Stat::AllDamageCanChill(Other(v as f32)),
            "all_damage_can_shock" => Stat::AllDamageCanShock(Other(v as f32)),
            "all_skill_gem_level_+" => Stat::AllSkillGemLevel(Plus(v as f32)),
            "all_skill_gem_quality_+" => Stat::AllSkillGemQuality(Plus(v as f32)),
            "allies_in_presence_accuracy_rating" => Stat::AlliesInPresenceAccuracyRating(Other(v as f32)),
            "allies_in_presence_attack_speed_+%" => Stat::AlliesInPresenceAttackSpeed(Plus(v as f32)),
            "allies_in_presence_life_regeneration_rate_per_minute_equal_to_your_maximum_life_%" => Stat::AlliesInPresenceLifeRegenerationRatePerMinuteEqualToYourMaximumLife(Other(v as f32)),
            "ancestral_slam_every_other_slam" => Stat::AncestralSlamEveryOtherSlam(Other(v as f32)),
            "arcane_surge_effect_on_self_+%" => Stat::ArcaneSurgeEffectOnSelf(Plus(v as f32)),
            "area_damage_+%" => Stat::AreaDamage(Plus(v as f32)),
            "area_of_effect_+%_if_have_stunned_an_enemy_recently" => Stat::AreaOfEffect(Plus(v as f32)),
            "area_skill_knockback_chance_%" => Stat::AreaSkillKnockbackChance(Other(v as f32)),
            "armour_+%_if_you_havent_been_hit_recently" => Stat::Armour(Plus(v as f32)),
            "armour_and_evasion_on_low_life_+%" => Stat::ArmourAndEvasionOnLowLife(Plus(v as f32)),
            "armour_break_%_of_armour_on_heavy_stunning" => Stat::ArmourBreak(Other(v as f32)),
            "armour_break_amount_+%" => Stat::ArmourBreakAmount(Plus(v as f32)),
            "armour_break_damage_%_dealt_as_armour_break" => Stat::ArmourBreakDamage(Other(v as f32)),
            "armour_break_duration_+%" => Stat::ArmourBreakDuration(Plus(v as f32)),
            "armour_break_equal_to_%_physical_damage_dealt_on_critical_strike_with_spells" => Stat::ArmourBreakEqualTo(Other(v as f32)),
            "armour_evasion_+%_while_leeching" => Stat::ArmourEvasion(Plus(v as f32)),
            "arrow_base_number_of_targets_to_pierce" => Stat::ArrowBaseNumberOfTargetsToPierce(Other(v as f32)),
            "arrow_critical_strike_chance_+%_max_as_distance_travelled_increases" => Stat::ArrowCriticalStrikeChance(Plus(v as f32)),
            "arrow_speed_additive_modifiers_also_apply_to_bow_damage" => Stat::ArrowSpeedAdditiveModifiersAlsoApplyToBowDamage(Other(v as f32)),
            "ascendancy_beidats_gaze_mana_+_per_X_maximum_life" => Stat::AscendancyBeidatsGazeMana(Plus(v as f32)),
            "ascendancy_beidats_hand_energy_shield_+_per_X_maximum_life" => Stat::AscendancyBeidatsHandEnergyShield(Plus(v as f32)),
            "ascendancy_beidats_will_spirit_+_per_X_maximum_life" => Stat::AscendancyBeidatsWillSpirit(Plus(v as f32)),
            "ascendancy_chronomancer_apex_of_the_moment_base_slow_aura_value" => Stat::AscendancyChronomancerApexOfTheMomentBaseSlowAuraValue(Other(v as f32)),
            "ascendancy_energy_generated_+%_final" => Stat::AscendancyEnergyGenerated(Plus(v as f32)),
            "ascendancy_pathfinder_flask_charges_gained_+%_final" => Stat::AscendancyPathfinderFlaskChargesGained(Plus(v as f32)),
            "ascendancy_titan_damage_reduction_rating_from_body_armour_+%_final" => Stat::AscendancyTitanDamageReductionRatingFromBodyArmour(Plus(v as f32)),
            "ascendancy_warbringer_block_chance_+%_final" => Stat::AscendancyWarbringerBlockChance(Plus(v as f32)),
            "atlas_keystone_corruption_roulette" => Stat::AtlasKeystoneCorruptionRoulette(Other(v as f32)),
            "atlas_keystone_extreme_archaeology" => Stat::AtlasKeystoneExtremeArchaeology(Other(v as f32)),
            "atlas_keystone_prefix_or_suffix_mod_effect_+%_final" => Stat::AtlasKeystonePrefixOrSuffixModEffect(Plus(v as f32)),
            "attack_additional_critical_strike_chance_permyriad" => Stat::AttackAdditionalCriticalStrikeChancePermyriad(Other(v as f32)),
            "attack_and_cast_speed_+%_with_elemental_skills" => Stat::AttackAndCastSpeed(Plus(v as f32)),
            "attack_area_damage_+%" => Stat::AttackAreaDamage(Plus(v as f32)),
            "attack_area_of_effect_+%" => Stat::AttackAreaOfEffect(Plus(v as f32)),
            "attack_critical_strike_chance_+%" => Stat::AttackCriticalStrikeChance(Plus(v as f32)),
            "attack_critical_strike_multiplier_+" => Stat::AttackCriticalStrikeMultiplier(Plus(v as f32)),
            "attack_damage_+%" => Stat::AttackDamage(Plus(v as f32)),
            "attack_damage_vs_bleeding_enemies_+%" => Stat::AttackDamageVsBleedingEnemies(Plus(v as f32)),
            "attack_mana_cost_+%" => Stat::AttackManaCost(Plus(v as f32)),
            "attack_skills_additional_totems_allowed" => Stat::AttackSkillsAdditionalTotemsAllowed(Other(v as f32)),
            "attack_skills_damage_+%_while_holding_shield" => Stat::AttackSkillsDamage(Plus(v as f32)),
            "attack_speed_+%" => Stat::AttackSpeed(Plus(v as f32)),
            "attack_speed_while_dual_wielding_+%" => Stat::AttackSpeedWhileDualWielding(Plus(v as f32)),
            "attacks_chance_to_blind_on_hit_%" => Stat::AttacksChanceToBlindOnHit(Other(v as f32)),
            "aura_effect_+%" => Stat::AuraEffect(Plus(v as f32)),
            "axe_attack_speed_+%" => Stat::AxeAttackSpeed(Plus(v as f32)),
            "axe_damage_+%" => Stat::AxeDamage(Plus(v as f32)),
            "base_aggravate_bleeding_on_attack_hit_chance_%" => Stat::BaseAggravateBleedingOnAttackHitChance(Other(v as f32)),
            "base_all_ailment_duration_on_self_+%" => Stat::BaseAllAilmentDurationOnSelf(Plus(v as f32)),
            "base_armour_%_applies_to_fire_damage" => Stat::BaseArmour(Other(v as f32)),
            "base_attack_damage_penetrates_elemental_resist_%" => Stat::BaseAttackDamagePenetratesElementalResist(Other(v as f32)),
            "base_bleed_duration_+%" => Stat::BaseBleedDuration(Plus(v as f32)),
            "base_bleeding_effect_+%" => Stat::BaseBleedingEffect(Plus(v as f32)),
            "base_block_%_damage_taken" => Stat::BaseBlock(Other(v as f32)),
            "base_body_armour_permyriad_to_gain_as_physical_thorns_damage" => Stat::BaseBodyArmourPermyriadToGainAsPhysicalThornsDamage(Other(v as f32)),
            "base_cast_speed_+%" => Stat::BaseCastSpeed(Plus(v as f32)),
            "base_chance_to_inflict_bleeding_%" => Stat::BaseChanceToInflictBleeding(Other(v as f32)),
            "base_chance_to_not_consume_corpse_%" => Stat::BaseChanceToNotConsumeCorpse(Other(v as f32)),
            "base_chance_to_pierce_%" => Stat::BaseChanceToPierce(Other(v as f32)),
            "base_chance_to_poison_on_hit_%" => Stat::BaseChanceToPoisonOnHit(Other(v as f32)),
            "base_chaos_damage_resistance_%" => Stat::BaseChaosDamageResistance(Other(v as f32)),
            "base_cold_damage_resistance_%" => Stat::BaseColdDamageResistance(Other(v as f32)),
            "base_cooldown_speed_+%" => Stat::BaseCooldownSpeed(Plus(v as f32)),
            "base_cost_+%" => Stat::BaseCost(Plus(v as f32)),
            "base_critical_strike_multiplier_+" => Stat::BaseCriticalStrikeMultiplier(Plus(v as f32)),
            "base_curse_duration_+%" => Stat::BaseCurseDuration(Plus(v as f32)),
            "base_damage_removed_from_mana_before_life_%" => Stat::BaseDamageRemovedFromManaBeforeLife(Other(v as f32)),
            "base_damaging_ailment_effect_+%" => Stat::BaseDamagingAilmentEffect(Plus(v as f32)),
            "base_darkness" => Stat::BaseDarkness(Other(v as f32)),
            "base_darkness_refresh_rate_ms" => Stat::BaseDarknessRefreshRateMs(Other(v as f32)),
            "base_debuff_slow_magnitude_+%" => Stat::BaseDebuffSlowMagnitude(Plus(v as f32)),
            "base_dexterity" => Stat::BaseDexterity(Other(v as f32)),
            "base_dexterity_and_intelligence" => Stat::BaseDexterityAndIntelligence(Other(v as f32)),
            "base_elemental_status_ailment_duration_+%" => Stat::BaseElementalStatusAilmentDuration(Plus(v as f32)),
            "base_enemy_critical_strike_chance_+%_against_self" => Stat::BaseEnemyCriticalStrikeChance(Plus(v as f32)),
            "base_evasion_rating" => Stat::BaseEvasionRating(Other(v as f32)),
            "base_fire_damage_resistance_%" => Stat::BaseFireDamageResistance(Other(v as f32)),
            "base_frenzy_charge_duration_+%" => Stat::BaseFrenzyChargeDuration(Plus(v as f32)),
            "base_ignite_effect_+%" => Stat::BaseIgniteEffect(Plus(v as f32)),
            "base_intelligence" => Stat::BaseIntelligence(Other(v as f32)),
            "base_life_gained_on_enemy_death" => Stat::BaseLifeGainedOnEnemyDeath(Other(v as f32)),
            "base_life_leech_amount_+%" => Stat::BaseLifeLeechAmount(Plus(v as f32)),
            "base_life_leech_does_not_stop_at_full_life" => Stat::BaseLifeLeechDoesNotStopAtFullLife(Other(v as f32)),
            "base_life_leech_from_all_spell_damage_permyriad" => Stat::BaseLifeLeechFromAllSpellDamagePermyriad(Other(v as f32)),
            "base_life_leech_rate_+%" => Stat::BaseLifeLeechRate(Plus(v as f32)),
            "base_mana_cost_-%" => Stat::BaseManaCost(Minus(v as f32)),
            "base_mana_leech_amount_+%" => Stat::BaseManaLeechAmount(Plus(v as f32)),
            "base_mana_leech_is_instant" => Stat::BaseManaLeechIsInstant(Other(v as f32)),
            "base_maximum_chaos_damage_resistance_%" => Stat::BaseMaximumChaosDamageResistance(Other(v as f32)),
            "base_maximum_cold_damage_resistance_%" => Stat::BaseMaximumColdDamageResistance(Other(v as f32)),
            "base_maximum_energy_shield" => Stat::BaseMaximumEnergyShield(Other(v as f32)),
            "base_maximum_fire_damage_resistance_%" => Stat::BaseMaximumFireDamageResistance(Other(v as f32)),
            "base_maximum_life" => Stat::BaseMaximumLife(Other(v as f32)),
            "base_maximum_lightning_damage_resistance_%" => Stat::BaseMaximumLightningDamageResistance(Other(v as f32)),
            "base_maximum_mana" => Stat::BaseMaximumMana(Other(v as f32)),
            "base_movement_velocity_+%" => Stat::BaseMovementVelocity(Plus(v as f32)),
            "base_penetrate_elemental_resistances_%" => Stat::BasePenetrateElementalResistances(Other(v as f32)),
            "base_physical_damage_reduction_rating" => Stat::BasePhysicalDamageReductionRating(Other(v as f32)),
            "base_poison_duration_+%" => Stat::BasePoisonDuration(Plus(v as f32)),
            "base_poison_effect_+%" => Stat::BasePoisonEffect(Plus(v as f32)),
            "base_projectile_speed_+%" => Stat::BaseProjectileSpeed(Plus(v as f32)),
            "base_reduce_enemy_cold_resistance_%" => Stat::BaseReduceEnemyColdResistance(Other(v as f32)),
            "base_reduce_enemy_fire_resistance_%" => Stat::BaseReduceEnemyFireResistance(Other(v as f32)),
            "base_reduce_enemy_lightning_resistance_%" => Stat::BaseReduceEnemyLightningResistance(Other(v as f32)),
            "base_resist_all_elements_%" => Stat::BaseResistAllElements(Other(v as f32)),
            "base_self_critical_strike_multiplier_-%" => Stat::BaseSelfCriticalStrikeMultiplier(Minus(v as f32)),
            "base_self_freeze_duration_-%" => Stat::BaseSelfFreezeDuration(Minus(v as f32)),
            "base_self_ignite_duration_-%" => Stat::BaseSelfIgniteDuration(Minus(v as f32)),
            "base_self_shock_duration_-%" => Stat::BaseSelfShockDuration(Minus(v as f32)),
            "base_should_have_arcane_surge_from_stat" => Stat::BaseShouldHaveArcaneSurgeFromStat(Other(v as f32)),
            "base_skill_area_of_effect_+%" => Stat::BaseSkillAreaOfEffect(Plus(v as f32)),
            "base_skill_cost_life_instead_of_mana_%" => Stat::BaseSkillCostLifeInsteadOfMana(Other(v as f32)),
            "base_slow_potency_+%" => Stat::BaseSlowPotency(Plus(v as f32)),
            "base_spell_critical_strike_chance_override_permyriad" => Stat::BaseSpellCriticalStrikeChanceOverridePermyriad(Other(v as f32)),
            "base_spell_critical_strike_multiplier_+" => Stat::BaseSpellCriticalStrikeMultiplier(Plus(v as f32)),
            "base_strength" => Stat::BaseStrength(Other(v as f32)),
            "base_strength_and_dexterity" => Stat::BaseStrengthAndDexterity(Other(v as f32)),
            "base_strength_and_intelligence" => Stat::BaseStrengthAndIntelligence(Other(v as f32)),
            "base_stun_recovery_+%" => Stat::BaseStunRecovery(Plus(v as f32)),
            "base_thorns_critical_strike_chance" => Stat::BaseThornsCriticalStrikeChance(Other(v as f32)),
            "base_thorns_critical_strike_multiplier_+" => Stat::BaseThornsCriticalStrikeMultiplier(Plus(v as f32)),
            "bleed_on_crit_%" => Stat::BleedOnCrit(Other(v as f32)),
            "blind_effect_+%" => Stat::BlindEffect(Plus(v as f32)),
            "blind_enemies_when_they_stun_you" => Stat::BlindEnemiesWhenTheyStunYou(Other(v as f32)),
            "block_chance_+%" => Stat::BlockChance(Plus(v as f32)),
            "block_chance_from_equipped_shield_is_%" => Stat::BlockChanceFromEquippedShieldIs(Other(v as f32)),
            "block_recovery_+%" => Stat::BlockRecovery(Plus(v as f32)),
            "body_armour_+%" => Stat::BodyArmour(Plus(v as f32)),
            "body_armour_evasion_rating_+%" => Stat::BodyArmourEvasionRating(Plus(v as f32)),
            "bow_accuracy_rating_+%" => Stat::BowAccuracyRating(Plus(v as f32)),
            "bow_attack_speed_+%" => Stat::BowAttackSpeed(Plus(v as f32)),
            "bow_critical_strike_multiplier_+" => Stat::BowCriticalStrikeMultiplier(Plus(v as f32)),
            "bow_damage_+%" => Stat::BowDamage(Plus(v as f32)),
            "breach_flame_effects_doubled" => Stat::BreachFlameEffectsDoubled(Other(v as f32)),
            "buff_time_passed_+%_only_buff_category" => Stat::BuffTimePassed(Plus(v as f32)),
            "buildup_jade_every_x_ms" => Stat::BuildupJadeEveryXMs(Other(v as f32)),
            "can_apply_additional_chill" => Stat::CanApplyAdditionalChill(Other(v as f32)),
            "can_apply_additional_shock" => Stat::CanApplyAdditionalShock(Other(v as f32)),
            "can_block_all_hits_while_shield_is_lowered" => Stat::CanBlockAllHitsWhileShieldIsLowered(Other(v as f32)),
            "cannot_be_blinded_while_on_full_life" => Stat::CannotBeBlindedWhileOnFullLife(Other(v as f32)),
            "cannot_gain_spirit_from_equipment" => Stat::CannotGainSpiritFromEquipment(Other(v as f32)),
            "cannot_recharge_energy_shield" => Stat::CannotRechargeEnergyShield(Other(v as f32)),
            "cast_speed_+%_when_on_full_life" => Stat::CastSpeed(Plus(v as f32)),
            "cast_speed_for_cold_skills_+%" => Stat::CastSpeedForColdSkills(Plus(v as f32)),
            "chance_%_to_create_shocking_ground_on_shock" => Stat::Chance(Other(v as f32)),
            "chance_for_skills_to_avoid_cooldown_%" => Stat::ChanceForSkillsToAvoidCooldown(Other(v as f32)),
            "chance_to_double_armour_effect_on_hit_%" => Stat::ChanceToDoubleArmourEffectOnHit(Other(v as f32)),
            "chance_to_fork_extra_projectile_%" => Stat::ChanceToForkExtraProjectile(Other(v as f32)),
            "chance_to_gain_onslaught_on_kill_with_axes_%" => Stat::ChanceToGainOnslaughtOnKillWithAxes(Other(v as f32)),
            "chance_to_poison_on_critical_strike_with_dagger_%" => Stat::ChanceToPoisonOnCriticalStrikeWithDagger(Other(v as f32)),
            "chance_to_summon_two_totems_%" => Stat::ChanceToSummonTwoTotems(Other(v as f32)),
            "chaos_damage_+%" => Stat::ChaosDamage(Plus(v as f32)),
            "chaos_damage_resistance_is_doubled" => Stat::ChaosDamageResistanceIsDoubled(Other(v as f32)),
            "chaos_skill_gem_level_+" => Stat::ChaosSkillGemLevel(Plus(v as f32)),
            "charges_gained_+%" => Stat::ChargesGained(Plus(v as f32)),
            "charm_charges_gained_+%" => Stat::CharmChargesGained(Plus(v as f32)),
            "charm_charges_used_+%" => Stat::CharmChargesUsed(Plus(v as f32)),
            "charm_duration_+%" => Stat::CharmDuration(Plus(v as f32)),
            "charm_effect_+%" => Stat::CharmEffect(Plus(v as f32)),
            "charms_%_chance_on_use_to_use_another_charm_without_consuming_charges" => Stat::Charms(Other(v as f32)),
            "chill_and_freeze_duration_+%" => Stat::ChillAndFreezeDuration(Plus(v as f32)),
            "chill_duration_+%" => Stat::ChillDuration(Plus(v as f32)),
            "chill_effect_+%" => Stat::ChillEffect(Plus(v as f32)),
            "chill_effectiveness_on_self_+%" => Stat::ChillEffectivenessOnSelf(Plus(v as f32)),
            "claw_accuracy_rating_+%" => Stat::ClawAccuracyRating(Plus(v as f32)),
            "claw_attack_speed_+%" => Stat::ClawAttackSpeed(Plus(v as f32)),
            "claw_critical_strike_chance_+%" => Stat::ClawCriticalStrikeChance(Plus(v as f32)),
            "claw_damage_+%" => Stat::ClawDamage(Plus(v as f32)),
            "cold_damage_+%" => Stat::ColdDamage(Plus(v as f32)),
            "cold_exposure_effect_+%" => Stat::ColdExposureEffect(Plus(v as f32)),
            "cold_exposure_you_inflict_lowers_cold_resistance_by_extra_%" => Stat::ColdExposureYouInflictLowersColdResistanceByExtra(Other(v as f32)),
            "cold_hit_and_dot_damage_%_taken_as_fire" => Stat::ColdHitAndDotDamage(Other(v as f32)),
            "cold_skill_gem_level_+" => Stat::ColdSkillGemLevel(Plus(v as f32)),
            "convert_all_life_leech_to_energy_shield_leech" => Stat::ConvertAllLifeLeechToEnergyShieldLeech(Other(v as f32)),
            "corpses_in_your_presence_explode_dealing_%_maximum_life_physical_damage_on_warcry" => Stat::CorpsesInYourPresenceExplodeDealing(Other(v as f32)),
            "create_chilling_ground_on_freeze" => Stat::CreateChillingGroundOnFreeze(Other(v as f32)),
            "critical_hit_bleeding_effect_+%" => Stat::CriticalHitBleedingEffect(Plus(v as f32)),
            "critical_hit_damage_bonus_+%_if_consumed_power_charge_recently" => Stat::CriticalHitDamageBonus(Plus(v as f32)),
            "critical_hit_damaging_ailment_effect_+%" => Stat::CriticalHitDamagingAilmentEffect(Plus(v as f32)),
            "critical_hit_ignite_effect_+%" => Stat::CriticalHitIgniteEffect(Plus(v as f32)),
            "critical_strike_chance_+%" => Stat::CriticalStrikeChance(Plus(v as f32)),
            "critical_strike_chance_against_enemies_on_full_life_+%" => Stat::CriticalStrikeChanceAgainstEnemiesOnFullLife(Plus(v as f32)),
            "critical_strike_chance_while_dual_wielding_+%" => Stat::CriticalStrikeChanceWhileDualWielding(Plus(v as f32)),
            "critical_strike_multiplier_+_if_have_not_dealt_critical_strike_recently" => Stat::CriticalStrikeMultiplier(Plus(v as f32)),
            "critical_strike_multiplier_vs_enemies_on_full_life_+" => Stat::CriticalStrikeMultiplierVsEnemiesOnFullLife(Plus(v as f32)),
            "critical_strike_multiplier_with_dagger_+" => Stat::CriticalStrikeMultiplierWithDagger(Plus(v as f32)),
            "critical_strikes_ignore_positive_elemental_resistances" => Stat::CriticalStrikesIgnorePositiveElementalResistances(Other(v as f32)),
            "crossbow_attack_%_chance_to_not_consume_ammo" => Stat::CrossbowAttack(Other(v as f32)),
            "crossbow_attack_speed_+%" => Stat::CrossbowAttackSpeed(Plus(v as f32)),
            "crossbow_critical_strike_chance_+%" => Stat::CrossbowCriticalStrikeChance(Plus(v as f32)),
            "crossbow_critical_strike_multiplier_+" => Stat::CrossbowCriticalStrikeMultiplier(Plus(v as f32)),
            "crossbow_damage_+%" => Stat::CrossbowDamage(Plus(v as f32)),
            "crushing_blow" => Stat::CrushingBlow(Other(v as f32)),
            "culling_strike_threshold_+%" => Stat::CullingStrikeThreshold(Plus(v as f32)),
            "culling_strike_vs_marked_enemy" => Stat::CullingStrikeVsMarkedEnemy(Other(v as f32)),
            "curse_area_of_effect_+%" => Stat::CurseAreaOfEffect(Plus(v as f32)),
            "curse_delay_+%" => Stat::CurseDelay(Plus(v as f32)),
            "curse_effect_+%" => Stat::CurseEffect(Plus(v as f32)),
            "curse_effect_on_self_+%" => Stat::CurseEffectOnSelf(Plus(v as f32)),
            "curses_never_expire" => Stat::CursesNeverExpire(Other(v as f32)),
            "dagger_attack_speed_+%" => Stat::DaggerAttackSpeed(Plus(v as f32)),
            "dagger_critical_strike_chance_+%" => Stat::DaggerCriticalStrikeChance(Plus(v as f32)),
            "dagger_damage_+%" => Stat::DaggerDamage(Plus(v as f32)),
            "damage_+%_against_enemies_with_fully_broken_armour" => Stat::Damage(Plus(v as f32)),
            "damage_removed_from_your_nearest_totem_before_life_or_es_%" => Stat::DamageRemovedFromYourNearestTotemBeforeLifeOrEs(Other(v as f32)),
            "damage_taken_+%_final_per_tailwind" => Stat::DamageTaken(Plus(v as f32)),
            "damage_taken_goes_to_mana_%" => Stat::DamageTakenGoesToMana(Other(v as f32)),
            "damage_vs_enemies_on_low_life_+%" => Stat::DamageVsEnemiesOnLowLife(Plus(v as f32)),
            "damage_vs_shocked_enemies_+%" => Stat::DamageVsShockedEnemies(Plus(v as f32)),
            "damage_while_dual_wielding_+%" => Stat::DamageWhileDualWielding(Plus(v as f32)),
            "damage_with_hits_is_lucky_vs_enemies_on_low_life" => Stat::DamageWithHitsIsLuckyVsEnemiesOnLowLife(Other(v as f32)),
            "damage_with_hits_is_lucky_vs_heavy_stunned_enemies" => Stat::DamageWithHitsIsLuckyVsHeavyStunnedEnemies(Other(v as f32)),
            "damaging_ailment_duration_+%" => Stat::DamagingAilmentDuration(Plus(v as f32)),
            "damaging_ailments_deal_damage_+%_faster" => Stat::DamagingAilmentsDealDamage(Plus(v as f32)),
            "darkness_per_level" => Stat::DarknessPerLevel(Other(v as f32)),
            "darkness_refresh_rate_+%" => Stat::DarknessRefreshRate(Plus(v as f32)),
            "daze_build_up_+%" => Stat::DazeBuildUp(Plus(v as f32)),
            "daze_duration_+%" => Stat::DazeDuration(Plus(v as f32)),
            "deadeye_accuracy_unaffected_by_range" => Stat::DeadeyeAccuracyUnaffectedByRange(Other(v as f32)),
            "deadeye_movement_speed_penalty_+%_final_while_performing_action" => Stat::DeadeyeMovementSpeedPenalty(Plus(v as f32)),
            "deadeye_projectile_damage_+%_final_max_as_distance_travelled_increases" => Stat::DeadeyeProjectileDamage(Plus(v as f32)),
            "debuff_time_passed_+%" => Stat::DebuffTimePassed(Plus(v as f32)),
            "decimating_strike" => Stat::DecimatingStrike(Other(v as f32)),
            "defences_+%_while_wielding_staff" => Stat::Defences(Plus(v as f32)),
            "defend_with_%_armour_against_ranged_attacks" => Stat::DefendWith(Other(v as f32)),
            "dexterity_+%" => Stat::Dexterity(Plus(v as f32)),
            "display_passive_attribute_text" => Stat::DisplayPassiveAttributeText(Other(v as f32)),
            "distance_scaled_accuracy_rating_penalty_+%" => Stat::DistanceScaledAccuracyRatingPenalty(Plus(v as f32)),
            "double_number_of_poison_you_can_inflict" => Stat::DoubleNumberOfPoisonYouCanInflict(Other(v as f32)),
            "double_tablet_effect_chance_%_when_opening_a_map" => Stat::DoubleTabletEffectChance(Other(v as f32)),
            "drain_focus_%_of_damage_dealt_on_hit" => Stat::DrainFocus(Other(v as f32)),
            "dummy_stat_display_nothing" => Stat::DummyStatDisplayNothing(Other(v as f32)),
            "electrocuted_enemy_damage_taken_+%" => Stat::ElectrocutedEnemyDamageTaken(Plus(v as f32)),
            "elemental_damage_+%" => Stat::ElementalDamage(Plus(v as f32)),
            "elemental_damage_can_inflict_bleeding" => Stat::ElementalDamageCanInflictBleeding(Other(v as f32)),
            "elemental_damage_taken_%_recouped_as_life" => Stat::ElementalDamageTaken(Other(v as f32)),
            "elemental_damage_with_attack_skills_+%" => Stat::ElementalDamageWithAttackSkills(Plus(v as f32)),
            "elemental_storm_cooldown_recovery_speed_+%_final" => Stat::ElementalStormCooldownRecoverySpeed(Plus(v as f32)),
            "elementalist_chill_maximum_magnitude_override" => Stat::ElementalistChillMaximumMagnitudeOverride(Other(v as f32)),
            "empowered_attack_damage_+%" => Stat::EmpoweredAttackDamage(Plus(v as f32)),
            "empowered_attack_hit_damage_stun_multiplier_+%" => Stat::EmpoweredAttackHitDamageStunMultiplier(Plus(v as f32)),
            "endurance_charge_duration_+%" => Stat::EnduranceChargeDuration(Plus(v as f32)),
            "enemies_are_maimed_for_x_seconds_after_becoming_unpinned" => Stat::EnemiesAreMaimedForXSecondsAfterBecomingUnpinned(Other(v as f32)),
            "enemies_chaos_resistance_%_while_cursed" => Stat::EnemiesChaosResistance(Other(v as f32)),
            "enemies_cursed_by_you_have_life_regeneration_rate_+%" => Stat::EnemiesCursedByYouHaveLifeRegenerationRate(Plus(v as f32)),
            "enemies_in_presence_cooldown_recovery_+%" => Stat::EnemiesInPresenceCooldownRecovery(Plus(v as f32)),
            "enemies_near_marked_enemy_are_blinded" => Stat::EnemiesNearMarkedEnemyAreBlinded(Other(v as f32)),
            "enemies_you_curse_cannot_recharge_energy_shield" => Stat::EnemiesYouCurseCannotRechargeEnergyShield(Other(v as f32)),
            "energy_generated_+%" => Stat::EnergyGenerated(Plus(v as f32)),
            "energy_shield_+%_if_consumed_power_charge_recently" => Stat::EnergyShield(Plus(v as f32)),
            "energy_shield_delay_-%" => Stat::EnergyShieldDelay(Minus(v as f32)),
            "energy_shield_from_focus_+%" => Stat::EnergyShieldFromFocus(Plus(v as f32)),
            "energy_shield_from_helmet_+%" => Stat::EnergyShieldFromHelmet(Plus(v as f32)),
            "energy_shield_gained_on_block" => Stat::EnergyShieldGainedOnBlock(Other(v as f32)),
            "energy_shield_recharge_rate_+%" => Stat::EnergyShieldRechargeRate(Plus(v as f32)),
            "energy_shield_recovery_rate_+%_if_not_hit_recently" => Stat::EnergyShieldRecoveryRate(Plus(v as f32)),
            "evasion_+%_if_hit_recently" => Stat::Evasion(Plus(v as f32)),
            "evasion_and_physical_damage_reduction_rating_+%" => Stat::EvasionAndPhysicalDamageReductionRating(Plus(v as f32)),
            "evasion_rating_+%" => Stat::EvasionRating(Plus(v as f32)),
            "evasion_rating_also_reduces_physical_damage" => Stat::EvasionRatingAlsoReducesPhysicalDamage(Other(v as f32)),
            "expedition_monsters_logbook_chance_+%" => Stat::ExpeditionMonstersLogbookChance(Plus(v as f32)),
            "exposure_you_inflict_lowers_affected_resistance_by_extra_%" => Stat::ExposureYouInflictLowersAffectedResistanceByExtra(Other(v as f32)),
            "extra_damage_rolls_with_lightning_damage_on_non_critical_hits" => Stat::ExtraDamageRollsWithLightningDamageOnNonCriticalHits(Other(v as f32)),
            "faster_bleed_%" => Stat::FasterBleed(Other(v as f32)),
            "faster_burn_%" => Stat::FasterBurn(Other(v as f32)),
            "final_repeat_of_spells_area_of_effect_+%" => Stat::FinalRepeatOfSpellsAreaOfEffect(Plus(v as f32)),
            "fire_damage_+%" => Stat::FireDamage(Plus(v as f32)),
            "fire_exposure_effect_+%" => Stat::FireExposureEffect(Plus(v as f32)),
            "fire_exposure_you_inflict_lowers_fire_resistance_by_extra_%" => Stat::FireExposureYouInflictLowersFireResistanceByExtra(Other(v as f32)),
            "flail_attack_speed_+%" => Stat::FlailAttackSpeed(Plus(v as f32)),
            "flail_critical_strike_chance_+%" => Stat::FlailCriticalStrikeChance(Plus(v as f32)),
            "flail_critical_strike_multiplier_+" => Stat::FlailCriticalStrikeMultiplier(Plus(v as f32)),
            "flail_damage_+%" => Stat::FlailDamage(Plus(v as f32)),
            "flask_charges_gained_+%" => Stat::FlaskChargesGained(Plus(v as f32)),
            "flask_charges_used_+%" => Stat::FlaskChargesUsed(Plus(v as f32)),
            "flask_duration_+%" => Stat::FlaskDuration(Plus(v as f32)),
            "flask_effect_+%" => Stat::FlaskEffect(Plus(v as f32)),
            "flask_life_and_mana_recovery_+%_while_using_charm" => Stat::FlaskLifeAndManaRecovery(Plus(v as f32)),
            "flask_life_and_mana_to_recover_+%" => Stat::FlaskLifeAndManaToRecover(Plus(v as f32)),
            "flask_life_recovery_rate_+%" => Stat::FlaskLifeRecoveryRate(Plus(v as f32)),
            "flask_life_to_recover_+%" => Stat::FlaskLifeToRecover(Plus(v as f32)),
            "flask_mana_charges_used_+%" => Stat::FlaskManaChargesUsed(Plus(v as f32)),
            "flask_mana_to_recover_+%" => Stat::FlaskManaToRecover(Plus(v as f32)),
            "flasks_%_chance_to_not_consume_charges" => Stat::Flasks(Other(v as f32)),
            "focus_decay_%_per_minute" => Stat::FocusDecay(Other(v as f32)),
            "focus_decay_delay_ms" => Stat::FocusDecayDelayMs(Other(v as f32)),
            "freeze_duration_+%" => Stat::FreezeDuration(Plus(v as f32)),
            "freeze_threshold_+%" => Stat::FreezeThreshold(Plus(v as f32)),
            "gain_%_damage_as_chaos_from_unreserved_darkness" => Stat::Gain(Other(v as f32)),
            "gain_accuracy_rating_equal_to_intelligence" => Stat::GainAccuracyRatingEqualToIntelligence(Other(v as f32)),
            "gain_accuracy_rating_equal_to_strength" => Stat::GainAccuracyRatingEqualToStrength(Other(v as f32)),
            "gain_arcane_surge_on_crit_%_chance" => Stat::GainArcaneSurgeOnCrit(Other(v as f32)),
            "gain_endurance_charge_on_heavy_stunning_rare_or_unique_enemy" => Stat::GainEnduranceChargeOnHeavyStunningRareOrUniqueEnemy(Other(v as f32)),
            "gain_guard_flask_charge_when_hit_by_enemy_chance_%" => Stat::GainGuardFlaskChargeWhenHitByEnemyChance(Other(v as f32)),
            "gain_max_rage_on_rage_gain_from_hit_%_chance" => Stat::GainMaxRageOnRageGainFromHit(Other(v as f32)),
            "gain_maximum_endurance_charges_on_endurance_charge_gained_%_chance" => Stat::GainMaximumEnduranceChargesOnEnduranceChargeGained(Other(v as f32)),
            "gain_maximum_frenzy_charges_on_frenzy_charge_gained_%_chance" => Stat::GainMaximumFrenzyChargesOnFrenzyChargeGained(Other(v as f32)),
            "gain_maximum_power_charges_on_power_charge_gained_%_chance" => Stat::GainMaximumPowerChargesOnPowerChargeGained(Other(v as f32)),
            "gain_tailwind_stack_on_skill_use" => Stat::GainTailwindStackOnSkillUse(Other(v as f32)),
            "gain_unbound_ailment_stacks" => Stat::GainUnboundAilmentStacks(Other(v as f32)),
            "gain_x_rage_on_hit_with_axes" => Stat::GainXRageOnHitWithAxes(Other(v as f32)),
            "gain_x_rage_on_melee_hit" => Stat::GainXRageOnMeleeHit(Other(v as f32)),
            "gain_x_rage_when_hit" => Stat::GainXRageWhenHit(Other(v as f32)),
            "gem_requirements_can_be_satisfied_by_highest_attribute" => Stat::GemRequirementsCanBeSatisfiedByHighestAttribute(Other(v as f32)),
            "gemling_double_basic_attribute_bonuses" => Stat::GemlingDoubleBasicAttributeBonuses(Other(v as f32)),
            "gemling_skill_cost_+%_final" => Stat::GemlingSkillCost(Plus(v as f32)),
            "generate_x_charges_for_charms_per_minute" => Stat::GenerateXChargesForCharmsPerMinute(Other(v as f32)),
            "generate_x_charges_for_life_flasks_per_minute" => Stat::GenerateXChargesForLifeFlasksPerMinute(Other(v as f32)),
            "generate_x_charges_for_mana_flasks_per_minute" => Stat::GenerateXChargesForManaFlasksPerMinute(Other(v as f32)),
            "global_chance_to_blind_on_hit_%" => Stat::GlobalChanceToBlindOnHit(Other(v as f32)),
            "global_defences_+%" => Stat::GlobalDefences(Plus(v as f32)),
            "global_gem_attribute_requirements_+%_final_from_gemling" => Stat::GlobalGemAttributeRequirements(Plus(v as f32)),
            "global_item_attribute_requirements_+%" => Stat::GlobalItemAttributeRequirements(Plus(v as f32)),
            "grenade_fuse_duration_+%" => Stat::GrenadeFuseDuration(Plus(v as f32)),
            "grenade_skill_%_chance_to_explode_twice" => Stat::GrenadeSkill(Other(v as f32)),
            "grenade_skill_area_of_effect_+%" => Stat::GrenadeSkillAreaOfEffect(Plus(v as f32)),
            "grenade_skill_cooldown_count_+" => Stat::GrenadeSkillCooldownCount(Plus(v as f32)),
            "grenade_skill_cooldown_speed_+%" => Stat::GrenadeSkillCooldownSpeed(Plus(v as f32)),
            "grenade_skill_damage_+%" => Stat::GrenadeSkillDamage(Plus(v as f32)),
            "grenade_skill_number_of_additional_projectiles" => Stat::GrenadeSkillNumberOfAdditionalProjectiles(Other(v as f32)),
            "guard_flask_effect_+%" => Stat::GuardFlaskEffect(Plus(v as f32)),
            "heavy_stun_poise_decay_rate_+%" => Stat::HeavyStunPoiseDecayRate(Plus(v as f32)),
            "heavy_stuns_have_culling_strike" => Stat::HeavyStunsHaveCullingStrike(Other(v as f32)),
            "hellhound_takes_%_damage_before_you" => Stat::HellhoundTakes(Other(v as f32)),
            "herald_skills_mana_reservation_+%" => Stat::HeraldSkillsManaReservation(Plus(v as f32)),
            "hinder_duration_+%" => Stat::HinderDuration(Plus(v as f32)),
            "hit_damage_+%_vs_enemies_affected_by_ailments" => Stat::HitDamage(Plus(v as f32)),
            "hit_damage_electrocute_multiplier_+%" => Stat::HitDamageElectrocuteMultiplier(Plus(v as f32)),
            "hit_damage_freeze_multiplier_+%" => Stat::HitDamageFreezeMultiplier(Plus(v as f32)),
            "hit_damage_pin_multiplier_+%" => Stat::HitDamagePinMultiplier(Plus(v as f32)),
            "hit_damage_stun_multiplier_+%" => Stat::HitDamageStunMultiplier(Plus(v as f32)),
            "hit_for_%_max_life_es_on_max_infernal_flame" => Stat::HitFor(Other(v as f32)),
            "hits_ignore_elemental_resistances_vs_frozen_enemies" => Stat::HitsIgnoreElementalResistancesVsFrozenEnemies(Other(v as f32)),
            "ice_crystal_maximum_life_+%" => Stat::IceCrystalMaximumLife(Plus(v as f32)),
            "ignite_chance_+%" => Stat::IgniteChance(Plus(v as f32)),
            "ignite_duration_+%" => Stat::IgniteDuration(Plus(v as f32)),
            "ignite_effect_on_self_+%" => Stat::IgniteEffectOnSelf(Plus(v as f32)),
            "ignite_shock_chill_duration_+%" => Stat::IgniteShockChillDuration(Plus(v as f32)),
            "ignites_apply_fire_resistance_+" => Stat::IgnitesApplyFireResistance(Plus(v as f32)),
            "infernal_flame_instead_of_mana" => Stat::InfernalFlameInsteadOfMana(Other(v as f32)),
            "infernalist_burn_life_and_es_%_per_second_if_crit_recently" => Stat::InfernalistBurnLifeAndEs(Other(v as f32)),
            "infernalist_critical_strike_multiplier_+%_final" => Stat::InfernalistCriticalStrikeMultiplier(Plus(v as f32)),
            "inflict_fire_exposure_on_hits_that_heavy_stun" => Stat::InflictFireExposureOnHitsThatHeavyStun(Other(v as f32)),
            "inflict_withered_for_x_seconds_on_unwithered_enemies_when_they_enter_your_presence" => Stat::InflictWitheredForXSecondsOnUnwitheredEnemiesWhenTheyEnterYourPresence(Other(v as f32)),
            "intelligence_+%" => Stat::Intelligence(Plus(v as f32)),
            "jagged_ground_duration_+%" => Stat::JaggedGroundDuration(Plus(v as f32)),
            "jagged_ground_effect_+%" => Stat::JaggedGroundEffect(Plus(v as f32)),
            "jagged_ground_enemy_damage_taken_+%" => Stat::JaggedGroundEnemyDamageTaken(Plus(v as f32)),
            "keystone_acrobatics" => Stat::KeystoneAcrobatics(Other(v as f32)),
            "keystone_ancestral_bond" => Stat::KeystoneAncestralBond(Other(v as f32)),
            "keystone_avatar_of_fire" => Stat::KeystoneAvatarOfFire(Other(v as f32)),
            "keystone_blood_magic" => Stat::KeystoneBloodMagic(Other(v as f32)),
            "keystone_bulwark" => Stat::KeystoneBulwark(Other(v as f32)),
            "keystone_chaos_inoculation" => Stat::KeystoneChaosInoculation(Other(v as f32)),
            "keystone_charge_cycle" => Stat::KeystoneChargeCycle(Other(v as f32)),
            "keystone_conduit" => Stat::KeystoneConduit(Other(v as f32)),
            "keystone_dance_with_death" => Stat::KeystoneDanceWithDeath(Other(v as f32)),
            "keystone_eldritch_battery" => Stat::KeystoneEldritchBattery(Other(v as f32)),
            "keystone_elemental_equilibrium" => Stat::KeystoneElementalEquilibrium(Other(v as f32)),
            "keystone_eternal_youth" => Stat::KeystoneEternalYouth(Other(v as f32)),
            "keystone_giants_blood" => Stat::KeystoneGiantsBlood(Other(v as f32)),
            "keystone_glancing_blows" => Stat::KeystoneGlancingBlows(Other(v as f32)),
            "keystone_heartstopper" => Stat::KeystoneHeartstopper(Other(v as f32)),
            "keystone_hex_master" => Stat::KeystoneHexMaster(Other(v as f32)),
            "keystone_iron_reflexes" => Stat::KeystoneIronReflexes(Other(v as f32)),
            "keystone_mana_shield" => Stat::KeystoneManaShield(Other(v as f32)),
            "keystone_oasis" => Stat::KeystoneOasis(Other(v as f32)),
            "keystone_pain_attunement" => Stat::KeystonePainAttunement(Other(v as f32)),
            "keystone_unwavering_stance" => Stat::KeystoneUnwaveringStance(Other(v as f32)),
            "keystone_vaal_pact" => Stat::KeystoneVaalPact(Other(v as f32)),
            "keystone_zealots_oath" => Stat::KeystoneZealotsOath(Other(v as f32)),
            "knockback_chance_%_at_close_range" => Stat::KnockbackChance(Other(v as f32)),
            "knockback_distance_+%" => Stat::KnockbackDistance(Plus(v as f32)),
            "knockback_on_crit_with_quarterstaff" => Stat::KnockbackOnCritWithQuarterstaff(Other(v as f32)),
            "leech_%_is_instant" => Stat::Leech(Other(v as f32)),
            "life_flask_charges_gained_+%" => Stat::LifeFlaskChargesGained(Plus(v as f32)),
            "life_flask_effects_are_not_removed_at_full_life" => Stat::LifeFlaskEffectsAreNotRemovedAtFullLife(Other(v as f32)),
            "life_gained_on_block" => Stat::LifeGainedOnBlock(Other(v as f32)),
            "life_recovery_+%_from_flasks_while_on_low_life" => Stat::LifeRecovery(Plus(v as f32)),
            "life_recovery_rate_+%" => Stat::LifeRecoveryRate(Plus(v as f32)),
            "life_regenerate_rate_per_second_%_while_totem_active" => Stat::LifeRegenerateRatePerSecond(Other(v as f32)),
            "life_regeneration_rate_+%_while_using_life_flask" => Stat::LifeRegenerationRate(Plus(v as f32)),
            "life_regeneration_rate_per_minute_%" => Stat::LifeRegenerationRatePerMinute(Other(v as f32)),
            "life_remnants_gain_per_globe" => Stat::LifeRemnantsGainPerGlobe(Other(v as f32)),
            "life_reserved_by_stat_%" => Stat::LifeReservedByStat(Other(v as f32)),
            "light_radius_+%" => Stat::LightRadius(Plus(v as f32)),
            "lightning_damage_+%_while_affected_by_herald_of_thunder" => Stat::LightningDamage(Plus(v as f32)),
            "lightning_exposure_effect_+%" => Stat::LightningExposureEffect(Plus(v as f32)),
            "lightning_hit_and_dot_damage_%_taken_as_fire" => Stat::LightningHitAndDotDamage(Other(v as f32)),
            "lightning_penetration_%_while_on_low_mana" => Stat::LightningPenetration(Other(v as f32)),
            "lightning_skill_additional_chain_chance_%" => Stat::LightningSkillAdditionalChainChance(Other(v as f32)),
            "link_skill_buff_effect_+%" => Stat::LinkSkillBuffEffect(Plus(v as f32)),
            "link_skill_cast_speed_+%" => Stat::LinkSkillCastSpeed(Plus(v as f32)),
            "link_skill_duration_+%" => Stat::LinkSkillDuration(Plus(v as f32)),
            "link_skills_can_target_minions" => Stat::LinkSkillsCanTargetMinions(Other(v as f32)),
            "link_to_X_additional_random_allies" => Stat::LinkToXAdditionalRandomAllies(Other(v as f32)),
            "lose_%_of_infernal_flame_on_reaching_max" => Stat::Lose(Other(v as f32)),
            "lose_all_tailwind_when_hit" => Stat::LoseAllTailwindWhenHit(Other(v as f32)),
            "mace_damage_+%" => Stat::MaceDamage(Plus(v as f32)),
            "mace_hit_damage_stun_multiplier_+%" => Stat::MaceHitDamageStunMultiplier(Plus(v as f32)),
            "mace_slam_aftershock_chance_%" => Stat::MaceSlamAftershockChance(Other(v as f32)),
            "mace_strike_aftershock_chance_%" => Stat::MaceStrikeAftershockChance(Other(v as f32)),
            "maim_on_hit_%" => Stat::MaimOnHit(Other(v as f32)),
            "mana_cost_+%_while_not_low_mana" => Stat::ManaCost(Plus(v as f32)),
            "mana_flask_charges_gained_+%" => Stat::ManaFlaskChargesGained(Plus(v as f32)),
            "mana_gained_on_block" => Stat::ManaGainedOnBlock(Other(v as f32)),
            "mana_leech_applies_recovery_to_energy_shield_also" => Stat::ManaLeechAppliesRecoveryToEnergyShieldAlso(Other(v as f32)),
            "mana_recovery_rate_+%_while_affected_by_a_mana_flask" => Stat::ManaRecoveryRate(Plus(v as f32)),
            "mana_regeneration_rate_+%" => Stat::ManaRegenerationRate(Plus(v as f32)),
            "map_affliction_encounter_boss_chance_+%" => Stat::MapAfflictionEncounterBossChance(Plus(v as f32)),
            "map_affliction_reward_progress_on_kill_+%" => Stat::MapAfflictionRewardProgressOnKill(Plus(v as f32)),
            "map_affliction_secondary_wave_acceleration_+%" => Stat::MapAfflictionSecondaryWaveAcceleration(Plus(v as f32)),
            "map_basic_currency_drop_chance_+%_in_swamp_and_water_biome" => Stat::MapBasicCurrencyDropChance(Plus(v as f32)),
            "map_boss_area_chance_to_be_corrupted_%" => Stat::MapBossAreaChanceToBeCorrupted(Other(v as f32)),
            "map_boss_damage_+%" => Stat::MapBossDamage(Plus(v as f32)),
            "map_boss_dropped_item_quantity_+%" => Stat::MapBossDroppedItemQuantity(Plus(v as f32)),
            "map_boss_experience_+%_final" => Stat::MapBossExperience(Plus(v as f32)),
            "map_boss_item_rarity_+%" => Stat::MapBossItemRarity(Plus(v as f32)),
            "map_boss_maximum_life_+%" => Stat::MapBossMaximumLife(Plus(v as f32)),
            "map_bossing_difficulty_+" => Stat::MapBossingDifficulty(Plus(v as f32)),
            "map_breach_chance_to_be_guarded_by_magic_pack_%" => Stat::MapBreachChanceToBeGuardedByMagicPack(Other(v as f32)),
            "map_breach_chests_+%_final" => Stat::MapBreachChests(Plus(v as f32)),
            "map_breach_chests_drop_double_splinters_chance_%" => Stat::MapBreachChestsDropDoubleSplintersChance(Other(v as f32)),
            "map_breach_domain_difficulty_+" => Stat::MapBreachDomainDifficulty(Plus(v as f32)),
            "map_breach_hands_inflict_waking_nightmare" => Stat::MapBreachHandsInflictWakingNightmare(Other(v as f32)),
            "map_breach_monster_quantity_+%" => Stat::MapBreachMonsterQuantity(Plus(v as f32)),
            "map_breach_monster_splinter_quantity_+%" => Stat::MapBreachMonsterSplinterQuantity(Plus(v as f32)),
            "map_breach_rares_catalyst_full_stack_chance_%" => Stat::MapBreachRaresCatalystFullStackChance(Other(v as f32)),
            "map_breach_rares_have_soul_eater" => Stat::MapBreachRaresHaveSoulEater(Other(v as f32)),
            "map_breach_time_passed_+%" => Stat::MapBreachTimePassed(Plus(v as f32)),
            "map_delirium_additional_reward_type_chance_%" => Stat::MapDeliriumAdditionalRewardTypeChance(Other(v as f32)),
            "map_delirium_boss_life_+%" => Stat::MapDeliriumBossLife(Plus(v as f32)),
            "map_delirium_boss_splinter_amount_+%" => Stat::MapDeliriumBossSplinterAmount(Plus(v as f32)),
            "map_delirium_daemon_damage_+%" => Stat::MapDeliriumDaemonDamage(Plus(v as f32)),
            "map_delirium_difficulty_scaling_from_mirror_is_double" => Stat::MapDeliriumDifficultyScalingFromMirrorIsDouble(Other(v as f32)),
            "map_delirium_doodads_+%_final" => Stat::MapDeliriumDoodads(Plus(v as f32)),
            "map_dropped_maps_rarity_+%" => Stat::MapDroppedMapsRarity(Plus(v as f32)),
            "map_duplicate_x_rare_monsters" => Stat::MapDuplicateXRareMonsters(Other(v as f32)),
            "map_expedition_artifact_quantity_+%" => Stat::MapExpeditionArtifactQuantity(Plus(v as f32)),
            "map_expedition_chest_marker_count_+" => Stat::MapExpeditionChestMarkerCount(Plus(v as f32)),
            "map_expedition_chests_despawn_after_X_seconds" => Stat::MapExpeditionChestsDespawnAfterXSeconds(Other(v as f32)),
            "map_expedition_elite_marker_count_+%" => Stat::MapExpeditionEliteMarkerCount(Plus(v as f32)),
            "map_expedition_fuse_burn_time_+%" => Stat::MapExpeditionFuseBurnTime(Plus(v as f32)),
            "map_expedition_rare_monsters_+%" => Stat::MapExpeditionRareMonsters(Plus(v as f32)),
            "map_expedition_relic_mod_effect_+%" => Stat::MapExpeditionRelicModEffect(Plus(v as f32)),
            "map_expedition_vendor_reroll_currency_quantity_+%" => Stat::MapExpeditionVendorRerollCurrencyQuantity(Plus(v as f32)),
            "map_expedition_x_extra_relic_prefixes" => Stat::MapExpeditionXExtraRelicPrefixes(Other(v as f32)),
            "map_expedition_x_extra_relic_suffixes" => Stat::MapExpeditionXExtraRelicSuffixes(Other(v as f32)),
            "map_final_boss_map_key_of_at_least_same_tier_as_current_map_drop_chance_%" => Stat::MapFinalBossMapKeyOfAtLeastSameTierAsCurrentMapDropChance(Other(v as f32)),
            "map_gold_drop_chance_+%_in_mountain_biome" => Stat::MapGoldDropChance(Plus(v as f32)),
            "map_item_drop_quantity_+%" => Stat::MapItemDropQuantity(Plus(v as f32)),
            "map_item_drop_rarity_+%" => Stat::MapItemDropRarity(Plus(v as f32)),
            "map_jewel_drop_chance_+%_in_forest_biome" => Stat::MapJewelDropChance(Plus(v as f32)),
            "map_killing_rare_monsters_pauses_delirium_mirror_timer_for_x_seconds" => Stat::MapKillingRareMonstersPausesDeliriumMirrorTimerForXSeconds(Other(v as f32)),
            "map_logbook_difficulty_+" => Stat::MapLogbookDifficulty(Plus(v as f32)),
            "map_magic_chest_amount_+%" => Stat::MapMagicChestAmount(Plus(v as f32)),
            "map_magic_pack_size_+%" => Stat::MapMagicPackSize(Plus(v as f32)),
            "map_map_item_drop_chance_+%" => Stat::MapMapItemDropChance(Plus(v as f32)),
            "map_maps_drop_with_distilled_emotions_applied_chance_%" => Stat::MapMapsDropWithDistilledEmotionsAppliedChance(Other(v as f32)),
            "map_mod_effect_+%_per_mod" => Stat::MapModEffect(Plus(v as f32)),
            "map_monolith_chance_%" => Stat::MapMonolithChance(Other(v as f32)),
            "map_monster_tre_+%" => Stat::MapMonsterTre(Plus(v as f32)),
            "map_non_unique_delirium_monsters_splinter_amount_+%" => Stat::MapNonUniqueDeliriumMonstersSplinterAmount(Plus(v as f32)),
            "map_number_of_magic_packs_+%" => Stat::MapNumberOfMagicPacks(Plus(v as f32)),
            "map_number_of_rare_packs_+%" => Stat::MapNumberOfRarePacks(Plus(v as f32)),
            "map_pack_size_+%" => Stat::MapPackSize(Plus(v as f32)),
            "map_pinnacle_boss_additional_unique_drop_chance_%" => Stat::MapPinnacleBossAdditionalUniqueDropChance(Other(v as f32)),
            "map_pinnacle_boss_difficulty_+" => Stat::MapPinnacleBossDifficulty(Plus(v as f32)),
            "map_pinnacle_boss_drops_X_corrupted_rare_tablets" => Stat::MapPinnacleBossDropsXCorruptedRareTablets(Other(v as f32)),
            "map_pinnacle_boss_drops_X_waystones" => Stat::MapPinnacleBossDropsXWaystones(Other(v as f32)),
            "map_pinnacle_boss_item_dropped_rarity_+%_final" => Stat::MapPinnacleBossItemDroppedRarity(Plus(v as f32)),
            "map_pinnacle_boss_rare_socket_currency_chance_%" => Stat::MapPinnacleBossRareSocketCurrencyChance(Other(v as f32)),
            "map_pinnacle_boss_special_gem_drop_chance_%" => Stat::MapPinnacleBossSpecialGemDropChance(Other(v as f32)),
            "map_player_damage_taken_+%_vs_breach_monsters" => Stat::MapPlayerDamageTaken(Plus(v as f32)),
            "map_player_shrine_buff_effect_on_self_+%" => Stat::MapPlayerShrineBuffEffectOnSelf(Plus(v as f32)),
            "map_player_shrine_effect_duration_+%" => Stat::MapPlayerShrineEffectDuration(Plus(v as f32)),
            "map_rare_chest_amount_+%" => Stat::MapRareChestAmount(Plus(v as f32)),
            "map_ritual_additional_daemon" => Stat::MapRitualAdditionalDaemon(Other(v as f32)),
            "map_ritual_additional_reward_rerolls" => Stat::MapRitualAdditionalRewardRerolls(Other(v as f32)),
            "map_ritual_additional_wildwood_packs" => Stat::MapRitualAdditionalWildwoodPacks(Other(v as f32)),
            "map_ritual_contains_wildwood_wisp" => Stat::MapRitualContainsWildwoodWisp(Other(v as f32)),
            "map_ritual_daemon_damage_+%" => Stat::MapRitualDaemonDamage(Plus(v as f32)),
            "map_ritual_defer_reward_tribute_cost_+%" => Stat::MapRitualDeferRewardTributeCost(Plus(v as f32)),
            "map_ritual_deferred_rewards_are_offered_again_+%_sooner" => Stat::MapRitualDeferredRewardsAreOfferedAgain(Plus(v as f32)),
            "map_ritual_encounter_count_is_four" => Stat::MapRitualEncounterCountIsFour(Other(v as f32)),
            "map_ritual_magic_monsters_+%" => Stat::MapRitualMagicMonsters(Plus(v as f32)),
            "map_ritual_monster_damage_+%_for_each_time_revived" => Stat::MapRitualMonsterDamage(Plus(v as f32)),
            "map_ritual_monster_spawning_speed_+%" => Stat::MapRitualMonsterSpawningSpeed(Plus(v as f32)),
            "map_ritual_monster_tankiness_+%_for_each_time_revived" => Stat::MapRitualMonsterTankiness(Plus(v as f32)),
            "map_ritual_no_revive_penalty" => Stat::MapRitualNoRevivePenalty(Other(v as f32)),
            "map_ritual_omen_chance_+%" => Stat::MapRitualOmenChance(Plus(v as f32)),
            "map_ritual_rare_monsters_+%" => Stat::MapRitualRareMonsters(Plus(v as f32)),
            "map_ritual_rewards_reroll_cost_+%_final" => Stat::MapRitualRewardsRerollCost(Plus(v as f32)),
            "map_ritual_voodoo_king_key_chance_+%" => Stat::MapRitualVoodooKingKeyChance(Plus(v as f32)),
            "map_sanctum_and_ultimatum_key_drop_chance_+%_in_desert_biome" => Stat::MapSanctumAndUltimatumKeyDropChance(Plus(v as f32)),
            "map_shrine_chance_%" => Stat::MapShrineChance(Other(v as f32)),
            "map_simulacrum_difficulty_+" => Stat::MapSimulacrumDifficulty(Plus(v as f32)),
            "map_socket_currency_drop_chance_+%_in_grass_biome" => Stat::MapSocketCurrencyDropChance(Plus(v as f32)),
            "map_strongbox_chance_%" => Stat::MapStrongboxChance(Other(v as f32)),
            "map_strongbox_mod_effect_+%" => Stat::MapStrongboxModEffect(Plus(v as f32)),
            "map_tier_bonus_permillage" => Stat::MapTierBonusPermillage(Other(v as f32)),
            "map_tower_augment_quantity_+%" => Stat::MapTowerAugmentQuantity(Plus(v as f32)),
            "map_voodoo_king_difficulty_+" => Stat::MapVoodooKingDifficulty(Plus(v as f32)),
            "maps_boss_drop_additional_bonus_map_chance_%" => Stat::MapsBossDropAdditionalBonusMapChance(Other(v as f32)),
            "maps_with_bosses_additional_essence_+" => Stat::MapsWithBossesAdditionalEssence(Plus(v as f32)),
            "maps_with_bosses_additional_shrine_+" => Stat::MapsWithBossesAdditionalShrine(Plus(v as f32)),
            "maps_with_bosses_additional_strongbox_+" => Stat::MapsWithBossesAdditionalStrongbox(Plus(v as f32)),
            "maps_with_bosses_are_irradiated" => Stat::MapsWithBossesAreIrradiated(Other(v as f32)),
            "mark_effect_+%" => Stat::MarkEffect(Plus(v as f32)),
            "mark_skill_cast_speed_+%" => Stat::MarkSkillCastSpeed(Plus(v as f32)),
            "mark_skill_duration_+%" => Stat::MarkSkillDuration(Plus(v as f32)),
            "mark_skill_mana_cost_+%" => Stat::MarkSkillManaCost(Plus(v as f32)),
            "marked_enemies_cannot_deal_critical_strikes" => Stat::MarkedEnemiesCannotDealCriticalStrikes(Other(v as f32)),
            "marked_enemy_accuracy_rating_+%" => Stat::MarkedEnemyAccuracyRating(Plus(v as f32)),
            "marked_enemy_damage_taken_+%" => Stat::MarkedEnemyDamageTaken(Plus(v as f32)),
            "master_of_elements_evasion_rating_+%_final" => Stat::MasterOfElementsEvasionRating(Plus(v as f32)),
            "mastery_chance_to_evade_melee_attacks_+%_final" => Stat::MasteryChanceToEvadeMeleeAttacks(Plus(v as f32)),
            "max_demon_form_stacks" => Stat::MaxDemonFormStacks(Other(v as f32)),
            "max_endurance_charges" => Stat::MaxEnduranceCharges(Other(v as f32)),
            "max_frenzy_charges" => Stat::MaxFrenzyCharges(Other(v as f32)),
            "max_jade_stacks" => Stat::MaxJadeStacks(Other(v as f32)),
            "max_power_charges" => Stat::MaxPowerCharges(Other(v as f32)),
            "maximum_darkness_+%" => Stat::MaximumDarkness(Plus(v as f32)),
            "maximum_energy_shield_+%" => Stat::MaximumEnergyShield(Plus(v as f32)),
            "maximum_energy_shield_from_body_armour_+%" => Stat::MaximumEnergyShieldFromBodyArmour(Plus(v as f32)),
            "maximum_life_+%" => Stat::MaximumLife(Plus(v as f32)),
            "maximum_life_mana_and_energy_shield_+%" => Stat::MaximumLifeManaAndEnergyShield(Plus(v as f32)),
            "maximum_mana_+%" => Stat::MaximumMana(Plus(v as f32)),
            "maximum_rage" => Stat::MaximumRage(Other(v as f32)),
            "melee_attack_speed_+%" => Stat::MeleeAttackSpeed(Plus(v as f32)),
            "melee_critical_strike_chance_+%" => Stat::MeleeCriticalStrikeChance(Plus(v as f32)),
            "melee_damage_+%" => Stat::MeleeDamage(Plus(v as f32)),
            "melee_hit_damage_stun_multiplier_+%" => Stat::MeleeHitDamageStunMultiplier(Plus(v as f32)),
            "melee_range_+" => Stat::MeleeRange(Plus(v as f32)),
            "minion_accuracy_rating" => Stat::MinionAccuracyRating(Other(v as f32)),
            "minion_additional_physical_damage_reduction_%" => Stat::MinionAdditionalPhysicalDamageReduction(Other(v as f32)),
            "minion_attack_and_cast_speed_+%" => Stat::MinionAttackAndCastSpeed(Plus(v as f32)),
            "minion_chaos_resistance_%" => Stat::MinionChaosResistance(Other(v as f32)),
            "minion_cold_damage_resistance_%" => Stat::MinionColdDamageResistance(Other(v as f32)),
            "minion_cooldown_recovery_+%" => Stat::MinionCooldownRecovery(Plus(v as f32)),
            "minion_critical_strike_chance_+%" => Stat::MinionCriticalStrikeChance(Plus(v as f32)),
            "minion_critical_strike_multiplier_+" => Stat::MinionCriticalStrikeMultiplier(Plus(v as f32)),
            "minion_damage_+%_while_you_have_at_least_two_different_active_offerings" => Stat::MinionDamage(Plus(v as f32)),
            "minion_damage_taken_%_recouped_as_their_life" => Stat::MinionDamageTaken(Other(v as f32)),
            "minion_elemental_resistance_%" => Stat::MinionElementalResistance(Other(v as f32)),
            "minion_evasion_rating_+%" => Stat::MinionEvasionRating(Plus(v as f32)),
            "minion_fire_damage_resistance_%" => Stat::MinionFireDamageResistance(Other(v as f32)),
            "minion_life_recovery_rate_+%" => Stat::MinionLifeRecoveryRate(Plus(v as f32)),
            "minion_life_regeneration_rate_per_minute_%" => Stat::MinionLifeRegenerationRatePerMinute(Other(v as f32)),
            "minion_lightning_damage_resistance_%" => Stat::MinionLightningDamageResistance(Other(v as f32)),
            "minion_maximum_all_elemental_resistances_%" => Stat::MinionMaximumAllElementalResistances(Other(v as f32)),
            "minion_maximum_life_+%" => Stat::MinionMaximumLife(Plus(v as f32)),
            "minion_movement_speed_+%" => Stat::MinionMovementSpeed(Plus(v as f32)),
            "minion_reservation_+%" => Stat::MinionReservation(Plus(v as f32)),
            "minion_resummon_speed_+%" => Stat::MinionResummonSpeed(Plus(v as f32)),
            "minion_skill_area_of_effect_+%" => Stat::MinionSkillAreaOfEffect(Plus(v as f32)),
            "minions_deal_%_of_physical_damage_as_additional_chaos_damage" => Stat::MinionsDeal(Other(v as f32)),
            "minions_gain_your_dexterity" => Stat::MinionsGainYourDexterity(Other(v as f32)),
            "minions_get_amulet_stats_instead_of_you" => Stat::MinionsGetAmuletStatsInsteadOfYou(Other(v as f32)),
            "minions_have_%_chance_to_inflict_wither_on_hit" => Stat::MinionsHave(Other(v as f32)),
            "movement_speed_+%_while_using_charm" => Stat::MovementSpeed(Plus(v as f32)),
            "non_damaging_ailment_effect_+%_with_critical_strikes" => Stat::NonDamagingAilmentEffect(Plus(v as f32)),
            "non_skill_base_all_damage_%_to_gain_as_lightning" => Stat::NonSkillBaseAllDamage(Other(v as f32)),
            "non_skill_base_lightning_damage_%_to_gain_as_cold" => Stat::NonSkillBaseLightningDamage(Other(v as f32)),
            "non_skill_base_physical_damage_%_to_gain_as_fire" => Stat::NonSkillBasePhysicalDamage(Other(v as f32)),
            "non_skill_cold_damage_%_to_gain_as_fire_vs_frozen_enemies" => Stat::NonSkillColdDamage(Other(v as f32)),
            "notable_knockback_distance_+%_final_for_blocked_hits" => Stat::NotableKnockbackDistance(Plus(v as f32)),
            "num_additional_skill_slots" => Stat::NumAdditionalSkillSlots(Other(v as f32)),
            "num_charm_slots" => Stat::NumCharmSlots(Other(v as f32)),
            "number_of_additional_marks_allowed" => Stat::NumberOfAdditionalMarksAllowed(Other(v as f32)),
            "number_of_additional_poison_stacks" => Stat::NumberOfAdditionalPoisonStacks(Other(v as f32)),
            "number_of_additional_projectiles" => Stat::NumberOfAdditionalProjectiles(Other(v as f32)),
            "number_of_infernal_familiars_allowed" => Stat::NumberOfInfernalFamiliarsAllowed(Other(v as f32)),
            "offering_area_of_effect_+%" => Stat::OfferingAreaOfEffect(Plus(v as f32)),
            "offering_duration_+%" => Stat::OfferingDuration(Plus(v as f32)),
            "offering_life_+%" => Stat::OfferingLife(Plus(v as f32)),
            "one_handed_attack_ailment_chance_+%" => Stat::OneHandedAttackAilmentChance(Plus(v as f32)),
            "one_handed_attack_speed_+%" => Stat::OneHandedAttackSpeed(Plus(v as f32)),
            "one_handed_melee_accuracy_rating_+%" => Stat::OneHandedMeleeAccuracyRating(Plus(v as f32)),
            "one_handed_melee_attack_speed_+%" => Stat::OneHandedMeleeAttackSpeed(Plus(v as f32)),
            "one_handed_melee_critical_strike_chance_+%" => Stat::OneHandedMeleeCriticalStrikeChance(Plus(v as f32)),
            "one_handed_melee_critical_strike_multiplier_+" => Stat::OneHandedMeleeCriticalStrikeMultiplier(Plus(v as f32)),
            "passive_tree_mace_damage_+%_final_vs_heavy_stunned_enemies" => Stat::PassiveTreeMaceDamage(Plus(v as f32)),
            "pathfinder_ascendancy_poison_on_enemies_you_kill_spread_to_enemies_within_x" => Stat::PathfinderAscendancyPoisonOnEnemiesYouKillSpreadToEnemiesWithinX(Other(v as f32)),
            "pathfinder_poison_duration_+%_final" => Stat::PathfinderPoisonDuration(Plus(v as f32)),
            "physical_attack_damage_+%" => Stat::PhysicalAttackDamage(Plus(v as f32)),
            "physical_damage_+%" => Stat::PhysicalDamage(Plus(v as f32)),
            "physical_damage_from_hits_%_taken_as_random_element" => Stat::PhysicalDamageFromHits(Other(v as f32)),
            "physical_damage_prevented_recouped_as_life_%" => Stat::PhysicalDamagePreventedRecoupedAsLife(Other(v as f32)),
            "physical_damage_reduction_rating_+%" => Stat::PhysicalDamageReductionRating(Plus(v as f32)),
            "physical_damage_taken_recouped_as_life_%" => Stat::PhysicalDamageTakenRecoupedAsLife(Other(v as f32)),
            "physical_hit_and_dot_damage_%_taken_as_chaos" => Stat::PhysicalHitAndDotDamage(Other(v as f32)),
            "placing_traps_cooldown_recovery_+%" => Stat::PlacingTrapsCooldownRecovery(Plus(v as f32)),
            "poison_duration_+%_per_poison_applied_recently" => Stat::PoisonDuration(Plus(v as f32)),
            "poison_effect_+%_vs_non_poisoned_enemies" => Stat::PoisonEffect(Plus(v as f32)),
            "power_charge_duration_+%" => Stat::PowerChargeDuration(Plus(v as f32)),
            "projectile_ailment_chance_+%" => Stat::ProjectileAilmentChance(Plus(v as f32)),
            "projectile_damage_+%" => Stat::ProjectileDamage(Plus(v as f32)),
            "projectile_hit_damage_stun_multiplier_+%" => Stat::ProjectileHitDamageStunMultiplier(Plus(v as f32)),
            "quarterstaff_accuracy_rating_+%" => Stat::QuarterstaffAccuracyRating(Plus(v as f32)),
            "quarterstaff_attack_speed_+%" => Stat::QuarterstaffAttackSpeed(Plus(v as f32)),
            "quarterstaff_critical_strike_chance_+%" => Stat::QuarterstaffCriticalStrikeChance(Plus(v as f32)),
            "quarterstaff_critical_strike_multiplier_+" => Stat::QuarterstaffCriticalStrikeMultiplier(Plus(v as f32)),
            "quarterstaff_damage_+%" => Stat::QuarterstaffDamage(Plus(v as f32)),
            "quarterstaff_daze_build_up_+%" => Stat::QuarterstaffDazeBuildUp(Plus(v as f32)),
            "quarterstaff_hit_damage_freeze_multiplier_+%" => Stat::QuarterstaffHitDamageFreezeMultiplier(Plus(v as f32)),
            "quarterstaff_hit_damage_stun_multiplier_+%" => Stat::QuarterstaffHitDamageStunMultiplier(Plus(v as f32)),
            "quarterstaff_skills_that_consume_power_charges_count_as_consuming_x_additional_power_charges" => Stat::QuarterstaffSkillsThatConsumePowerChargesCountAsConsumingXAdditionalPowerCharges(Other(v as f32)),
            "quiver_mod_effect_+%" => Stat::QuiverModEffect(Plus(v as f32)),
            "rage_decay_speed_+%" => Stat::RageDecaySpeed(Plus(v as f32)),
            "rage_loss_delay_ms" => Stat::RageLossDelayMs(Other(v as f32)),
            "reapply_enemy_shock_on_consuming_enemy_shock_chance_%" => Stat::ReapplyEnemyShockOnConsumingEnemyShockChance(Other(v as f32)),
            "recoup_%_elemental_damage_as_energy_shield" => Stat::Recoup(Other(v as f32)),
            "recoup_speed_+%" => Stat::RecoupSpeed(Plus(v as f32)),
            "recover_%_maximum_mana_on_charm_use" => Stat::Recover(Other(v as f32)),
            "recover_maximum_life_on_enemy_killed_chance_%" => Stat::RecoverMaximumLifeOnEnemyKilledChance(Other(v as f32)),
            "recover_X_life_on_block" => Stat::RecoverXLifeOnBlock(Other(v as f32)),
            "reduce_enemy_elemental_resistance_%" => Stat::ReduceEnemyElementalResistance(Other(v as f32)),
            "refresh_ignite_duration_on_critical_strike_chance_%" => Stat::RefreshIgniteDurationOnCriticalStrikeChance(Other(v as f32)),
            "reload_speed_+%" => Stat::ReloadSpeed(Plus(v as f32)),
            "remove_curse_on_mana_flask_use" => Stat::RemoveCurseOnManaFlaskUse(Other(v as f32)),
            "resolute_technique" => Stat::ResoluteTechnique(Other(v as f32)),
            "restore_life_and_mana_on_warcry_%" => Stat::RestoreLifeAndManaOnWarcry(Other(v as f32)),
            "shield_armour_+%" => Stat::ShieldArmour(Plus(v as f32)),
            "shield_evasion_rating_+%" => Stat::ShieldEvasionRating(Plus(v as f32)),
            "shock_chance_+%" => Stat::ShockChance(Plus(v as f32)),
            "shock_duration_+%" => Stat::ShockDuration(Plus(v as f32)),
            "shock_effect_+%" => Stat::ShockEffect(Plus(v as f32)),
            "skill_area_of_effect_+%_if_enemy_killed_recently" => Stat::SkillAreaOfEffect(Plus(v as f32)),
            "skill_area_of_effect_when_unarmed_+%" => Stat::SkillAreaOfEffectWhenUnarmed(Plus(v as f32)),
            "skill_cost_base_life_equal_to_base_mana" => Stat::SkillCostBaseLifeEqualToBaseMana(Other(v as f32)),
            "skill_effect_duration_+%" => Stat::SkillEffectDuration(Plus(v as f32)),
            "skill_speed_+%" => Stat::SkillSpeed(Plus(v as f32)),
            "slam_aftershock_chance_%" => Stat::SlamAftershockChance(Other(v as f32)),
            "slam_skill_area_of_effect_+%" => Stat::SlamSkillAreaOfEffect(Plus(v as f32)),
            "slows_have_no_potency_on_you" => Stat::SlowsHaveNoPotencyOnYou(Other(v as f32)),
            "small_passives_effect_+%" => Stat::SmallPassivesEffect(Plus(v as f32)),
            "sorcery_ward_+%_strength" => Stat::SorceryWard(Plus(v as f32)),
            "spawn_defender_with_totem" => Stat::SpawnDefenderWithTotem(Other(v as f32)),
            "spear_attack_speed_+%" => Stat::SpearAttackSpeed(Plus(v as f32)),
            "spear_critical_strike_chance_+%" => Stat::SpearCriticalStrikeChance(Plus(v as f32)),
            "spear_damage_+%" => Stat::SpearDamage(Plus(v as f32)),
            "spell_area_damage_+%" => Stat::SpellAreaDamage(Plus(v as f32)),
            "spell_area_of_effect_+%" => Stat::SpellAreaOfEffect(Plus(v as f32)),
            "spell_critical_strike_chance_+%" => Stat::SpellCriticalStrikeChance(Plus(v as f32)),
            "spell_critical_strike_multiplier_+_while_wielding_staff" => Stat::SpellCriticalStrikeMultiplier(Plus(v as f32)),
            "spell_damage_+%" => Stat::SpellDamage(Plus(v as f32)),
            "spell_skill_gem_level_+" => Stat::SpellSkillGemLevel(Plus(v as f32)),
            "spell_skill_projectile_speed_+%" => Stat::SpellSkillProjectileSpeed(Plus(v as f32)),
            "spell_staff_damage_+%" => Stat::SpellStaffDamage(Plus(v as f32)),
            "spirit_+%" => Stat::Spirit(Plus(v as f32)),
            "staff_attack_area_of_effect_+%" => Stat::StaffAttackAreaOfEffect(Plus(v as f32)),
            "stormweaver_chill_effect_+%_final" => Stat::StormweaverChillEffect(Plus(v as f32)),
            "stormweaver_shock_duration_+%_final" => Stat::StormweaverShockDuration(Plus(v as f32)),
            "strength_+%" => Stat::Strength(Plus(v as f32)),
            "stun_threshold_+_from_%_base_armour_from_equipment" => Stat::StunThreshold(Plus(v as f32)),
            "stun_threshold_based_on_%_energy_shield_instead_of_life" => Stat::StunThresholdBasedOn(Other(v as f32)),
            "summon_totem_cast_speed_+%" => Stat::SummonTotemCastSpeed(Plus(v as f32)),
            "support_anticipation_charge_gain_frequency_+%" => Stat::SupportAnticipationChargeGainFrequency(Plus(v as f32)),
            "support_gem_limit_+" => Stat::SupportGemLimit(Plus(v as f32)),
            "sword_attack_speed_+%" => Stat::SwordAttackSpeed(Plus(v as f32)),
            "sword_damage_+%" => Stat::SwordDamage(Plus(v as f32)),
            "tablet_effect_+%_when_opening_a_map" => Stat::TabletEffect(Plus(v as f32)),
            "thorns_damage_+%_if_blocked_recently" => Stat::ThornsDamage(Plus(v as f32)),
            "titan_damage_+%_final_against_heavy_stunned_enemies" => Stat::TitanDamage(Plus(v as f32)),
            "titan_expanded_main_inventory" => Stat::TitanExpandedMainInventory(Other(v as f32)),
            "titan_maximum_life_+%_final" => Stat::TitanMaximumLife(Plus(v as f32)),
            "totem_additional_physical_damage_reduction_%" => Stat::TotemAdditionalPhysicalDamageReduction(Other(v as f32)),
            "totem_damage_+%" => Stat::TotemDamage(Plus(v as f32)),
            "totem_duration_+%" => Stat::TotemDuration(Plus(v as f32)),
            "totem_elemental_resistance_%" => Stat::TotemElementalResistance(Other(v as f32)),
            "totem_life_+%" => Stat::TotemLife(Plus(v as f32)),
            "totem_placement_range_+%" => Stat::TotemPlacementRange(Plus(v as f32)),
            "totem_skill_attack_speed_+%" => Stat::TotemSkillAttackSpeed(Plus(v as f32)),
            "totem_skill_cast_speed_+%" => Stat::TotemSkillCastSpeed(Plus(v as f32)),
            "totems_attack_speed_+%_per_active_totem" => Stat::TotemsAttackSpeed(Plus(v as f32)),
            "totems_regenerate_%_life_per_minute" => Stat::TotemsRegenerate(Other(v as f32)),
            "totems_spells_cast_speed_+%_per_active_totem" => Stat::TotemsSpellsCastSpeed(Plus(v as f32)),
            "trap_critical_strike_chance_+%" => Stat::TrapCriticalStrikeChance(Plus(v as f32)),
            "trap_damage_+%" => Stat::TrapDamage(Plus(v as f32)),
            "trap_throwing_speed_+%" => Stat::TrapThrowingSpeed(Plus(v as f32)),
            "trigger_elemental_storm_on_crit" => Stat::TriggerElementalStormOnCrit(Other(v as f32)),
            "trigger_skills_refund_half_energy_spent_chance_%" => Stat::TriggerSkillsRefundHalfEnergySpentChance(Other(v as f32)),
            "trigger_wild_strike_on_attack_crit" => Stat::TriggerWildStrikeOnAttackCrit(Other(v as f32)),
            "triggered_spell_spell_damage_+%" => Stat::TriggeredSpellSpellDamage(Plus(v as f32)),
            "two_handed_melee_accuracy_rating_+%" => Stat::TwoHandedMeleeAccuracyRating(Plus(v as f32)),
            "unaffected_by_chill_during_dodge_roll" => Stat::UnaffectedByChillDuringDodgeRoll(Other(v as f32)),
            "unaffected_by_chill_while_mana_leeching" => Stat::UnaffectedByChillWhileManaLeeching(Other(v as f32)),
            "unarmed_attack_skill_melee_dash_range_+%" => Stat::UnarmedAttackSkillMeleeDashRange(Plus(v as f32)),
            "unarmed_attack_speed_+%" => Stat::UnarmedAttackSpeed(Plus(v as f32)),
            "warbringer_overbreak_armour" => Stat::WarbringerOverbreakArmour(Other(v as f32)),
            "warcries_bypass_cooldown" => Stat::WarcriesBypassCooldown(Other(v as f32)),
            "warcry_cooldown_speed_+%" => Stat::WarcryCooldownSpeed(Plus(v as f32)),
            "warcry_damage_+%" => Stat::WarcryDamage(Plus(v as f32)),
            "warcry_empowers_next_x_melee_attacks" => Stat::WarcryEmpowersNextXMeleeAttacks(Other(v as f32)),
            "warcry_skill_area_of_effect_+%" => Stat::WarcrySkillAreaOfEffect(Plus(v as f32)),
            "warcry_speed_+%" => Stat::WarcrySpeed(Plus(v as f32)),
            "weapon_swap_speed_+%" => Stat::WeaponSwapSpeed(Plus(v as f32)),
            "while_using_sword_reduce_enemy_block_%" => Stat::WhileUsingSwordReduceEnemyBlock(Other(v as f32)),
            "witch_passive_maximum_lightning_damage_+%_final" => Stat::WitchPassiveMaximumLightningDamage(Plus(v as f32)),
            "witchhunter_armour_evasion_+%_final" => Stat::WitchhunterArmourEvasion(Plus(v as f32)),
            "witchhunter_up_to_damage_+%_final_against_targets_with_missing_focus" => Stat::WitchhunterUpToDamage(Plus(v as f32)),
            "withered_effect_+%" => Stat::WitheredEffect(Plus(v as f32)),
            "world_map_unique_maps_visible_X_units_beyond_light_radius" => Stat::WorldMapUniqueMapsVisibleXUnitsBeyondLightRadius(Other(v as f32)),
            "x%_faster_start_of_sorcery_ward_recovery" => Stat::X(Other(v as f32)),
            "you_and_allies_in_presence_all_damage_can_ignite_while_not_on_low_infernal_flame" => Stat::YouAndAlliesInPresenceAllDamageCanIgniteWhileNotOnLowInfernalFlame(Other(v as f32)),
            "you_and_allies_in_presence_non_skill_base_all_damage_%_to_gain_as_fire_while_on_high_infernal_flame" => Stat::YouAndAlliesInPresenceNonSkillBaseAllDamage(Other(v as f32)),
            "you_gain_%_life_when_one_of_your_minions_is_revived" => Stat::YouGain(Other(v as f32)),
            _ => Stat::Unknown(k.to_string(), v as f32),
        }
    }

    pub fn as_str(&self) -> &str {
        match self {
            Stat::AccuracyRating(_) => "accuracy_rating_+%",
            Stat::AccuracyRatingVsBleedingEnemies(_) => "accuracy_rating_vs_bleeding_enemies",
            Stat::AccuracyRatingWhileDualWielding(_) => "accuracy_rating_while_dual_wielding_+%",
            Stat::AdditionalAllAttributes(_) => "additional_all_attributes",
            Stat::AdditionalCriticalStrikeChancePermyriadWithHeraldSkills(_) => "additional_critical_strike_chance_permyriad_with_herald_skills",
            Stat::AdditionalMaximumAllElementalResistances(_) => "additional_maximum_all_elemental_resistances_%",
            Stat::AdditionalPhysicalDamageReduction(_) => "additional_physical_damage_reduction_%_per_jade",
            Stat::AdditiveArmourModifiersApplyToEnergyShieldRechargeRateAt(_) => "additive_armour_modifiers_apply_to_energy_shield_recharge_rate_at_%_value",
            Stat::AftershockAreaOfEffect(_) => "aftershock_area_of_effect_+%",
            Stat::AggravateBleedingOlderThanMsOnHit(_) => "aggravate_bleeding_older_than_ms_on_hit",
            Stat::AggravateBleedingOnAttackCritChance(_) => "aggravate_bleeding_on_attack_crit_chance_%",
            Stat::AggravateBleedingOnExertedAttackHitChance(_) => "aggravate_bleeding_on_exerted_attack_hit_chance_%",
            Stat::AggravateBleedingWhenInflictedVsEnemiesOnJaggedGroundChance(_) => "aggravate_bleeding_when_inflicted_vs_enemies_on_jagged_ground_chance_%",
            Stat::AilmentChance(_) => "ailment_chance_+%",
            Stat::AilmentEffect(_) => "ailment_effect_+%",
            Stat::AilmentThreshold(_) => "ailment_threshold_+_from_lowest_of_base_boots_evasion_rating_and_armour",
            Stat::AllAttributes(_) => "all_attributes_+%",
            Stat::AllDamageCanChill(_) => "all_damage_can_chill",
            Stat::AllDamageCanShock(_) => "all_damage_can_shock",
            Stat::AllSkillGemLevel(_) => "all_skill_gem_level_+",
            Stat::AllSkillGemQuality(_) => "all_skill_gem_quality_+",
            Stat::AlliesInPresenceAccuracyRating(_) => "allies_in_presence_accuracy_rating",
            Stat::AlliesInPresenceAttackSpeed(_) => "allies_in_presence_attack_speed_+%",
            Stat::AlliesInPresenceLifeRegenerationRatePerMinuteEqualToYourMaximumLife(_) => "allies_in_presence_life_regeneration_rate_per_minute_equal_to_your_maximum_life_%",
            Stat::AncestralSlamEveryOtherSlam(_) => "ancestral_slam_every_other_slam",
            Stat::ArcaneSurgeEffectOnSelf(_) => "arcane_surge_effect_on_self_+%",
            Stat::AreaDamage(_) => "area_damage_+%",
            Stat::AreaOfEffect(_) => "area_of_effect_+%_if_have_stunned_an_enemy_recently",
            Stat::AreaSkillKnockbackChance(_) => "area_skill_knockback_chance_%",
            Stat::Armour(_) => "armour_+%_if_you_havent_been_hit_recently",
            Stat::ArmourAndEvasionOnLowLife(_) => "armour_and_evasion_on_low_life_+%",
            Stat::ArmourBreak(_) => "armour_break_%_of_armour_on_heavy_stunning",
            Stat::ArmourBreakAmount(_) => "armour_break_amount_+%",
            Stat::ArmourBreakDamage(_) => "armour_break_damage_%_dealt_as_armour_break",
            Stat::ArmourBreakDuration(_) => "armour_break_duration_+%",
            Stat::ArmourBreakEqualTo(_) => "armour_break_equal_to_%_physical_damage_dealt_on_critical_strike_with_spells",
            Stat::ArmourEvasion(_) => "armour_evasion_+%_while_leeching",
            Stat::ArrowBaseNumberOfTargetsToPierce(_) => "arrow_base_number_of_targets_to_pierce",
            Stat::ArrowCriticalStrikeChance(_) => "arrow_critical_strike_chance_+%_max_as_distance_travelled_increases",
            Stat::ArrowSpeedAdditiveModifiersAlsoApplyToBowDamage(_) => "arrow_speed_additive_modifiers_also_apply_to_bow_damage",
            Stat::AscendancyBeidatsGazeMana(_) => "ascendancy_beidats_gaze_mana_+_per_X_maximum_life",
            Stat::AscendancyBeidatsHandEnergyShield(_) => "ascendancy_beidats_hand_energy_shield_+_per_X_maximum_life",
            Stat::AscendancyBeidatsWillSpirit(_) => "ascendancy_beidats_will_spirit_+_per_X_maximum_life",
            Stat::AscendancyChronomancerApexOfTheMomentBaseSlowAuraValue(_) => "ascendancy_chronomancer_apex_of_the_moment_base_slow_aura_value",
            Stat::AscendancyEnergyGenerated(_) => "ascendancy_energy_generated_+%_final",
            Stat::AscendancyPathfinderFlaskChargesGained(_) => "ascendancy_pathfinder_flask_charges_gained_+%_final",
            Stat::AscendancyTitanDamageReductionRatingFromBodyArmour(_) => "ascendancy_titan_damage_reduction_rating_from_body_armour_+%_final",
            Stat::AscendancyWarbringerBlockChance(_) => "ascendancy_warbringer_block_chance_+%_final",
            Stat::AtlasKeystoneCorruptionRoulette(_) => "atlas_keystone_corruption_roulette",
            Stat::AtlasKeystoneExtremeArchaeology(_) => "atlas_keystone_extreme_archaeology",
            Stat::AtlasKeystonePrefixOrSuffixModEffect(_) => "atlas_keystone_prefix_or_suffix_mod_effect_+%_final",
            Stat::AttackAdditionalCriticalStrikeChancePermyriad(_) => "attack_additional_critical_strike_chance_permyriad",
            Stat::AttackAndCastSpeed(_) => "attack_and_cast_speed_+%_with_elemental_skills",
            Stat::AttackAreaDamage(_) => "attack_area_damage_+%",
            Stat::AttackAreaOfEffect(_) => "attack_area_of_effect_+%",
            Stat::AttackCriticalStrikeChance(_) => "attack_critical_strike_chance_+%",
            Stat::AttackCriticalStrikeMultiplier(_) => "attack_critical_strike_multiplier_+",
            Stat::AttackDamage(_) => "attack_damage_+%",
            Stat::AttackDamageVsBleedingEnemies(_) => "attack_damage_vs_bleeding_enemies_+%",
            Stat::AttackManaCost(_) => "attack_mana_cost_+%",
            Stat::AttackSkillsAdditionalTotemsAllowed(_) => "attack_skills_additional_totems_allowed",
            Stat::AttackSkillsDamage(_) => "attack_skills_damage_+%_while_holding_shield",
            Stat::AttackSpeed(_) => "attack_speed_+%",
            Stat::AttackSpeedWhileDualWielding(_) => "attack_speed_while_dual_wielding_+%",
            Stat::AttacksChanceToBlindOnHit(_) => "attacks_chance_to_blind_on_hit_%",
            Stat::AuraEffect(_) => "aura_effect_+%",
            Stat::AxeAttackSpeed(_) => "axe_attack_speed_+%",
            Stat::AxeDamage(_) => "axe_damage_+%",
            Stat::BaseAggravateBleedingOnAttackHitChance(_) => "base_aggravate_bleeding_on_attack_hit_chance_%",
            Stat::BaseAllAilmentDurationOnSelf(_) => "base_all_ailment_duration_on_self_+%",
            Stat::BaseArmour(_) => "base_armour_%_applies_to_fire_damage",
            Stat::BaseAttackDamagePenetratesElementalResist(_) => "base_attack_damage_penetrates_elemental_resist_%",
            Stat::BaseBleedDuration(_) => "base_bleed_duration_+%",
            Stat::BaseBleedingEffect(_) => "base_bleeding_effect_+%",
            Stat::BaseBlock(_) => "base_block_%_damage_taken",
            Stat::BaseBodyArmourPermyriadToGainAsPhysicalThornsDamage(_) => "base_body_armour_permyriad_to_gain_as_physical_thorns_damage",
            Stat::BaseCastSpeed(_) => "base_cast_speed_+%",
            Stat::BaseChanceToInflictBleeding(_) => "base_chance_to_inflict_bleeding_%",
            Stat::BaseChanceToNotConsumeCorpse(_) => "base_chance_to_not_consume_corpse_%",
            Stat::BaseChanceToPierce(_) => "base_chance_to_pierce_%",
            Stat::BaseChanceToPoisonOnHit(_) => "base_chance_to_poison_on_hit_%",
            Stat::BaseChaosDamageResistance(_) => "base_chaos_damage_resistance_%",
            Stat::BaseColdDamageResistance(_) => "base_cold_damage_resistance_%",
            Stat::BaseCooldownSpeed(_) => "base_cooldown_speed_+%",
            Stat::BaseCost(_) => "base_cost_+%",
            Stat::BaseCriticalStrikeMultiplier(_) => "base_critical_strike_multiplier_+",
            Stat::BaseCurseDuration(_) => "base_curse_duration_+%",
            Stat::BaseDamageRemovedFromManaBeforeLife(_) => "base_damage_removed_from_mana_before_life_%",
            Stat::BaseDamagingAilmentEffect(_) => "base_damaging_ailment_effect_+%",
            Stat::BaseDarkness(_) => "base_darkness",
            Stat::BaseDarknessRefreshRateMs(_) => "base_darkness_refresh_rate_ms",
            Stat::BaseDebuffSlowMagnitude(_) => "base_debuff_slow_magnitude_+%",
            Stat::BaseDexterity(_) => "base_dexterity",
            Stat::BaseDexterityAndIntelligence(_) => "base_dexterity_and_intelligence",
            Stat::BaseElementalStatusAilmentDuration(_) => "base_elemental_status_ailment_duration_+%",
            Stat::BaseEnemyCriticalStrikeChance(_) => "base_enemy_critical_strike_chance_+%_against_self",
            Stat::BaseEvasionRating(_) => "base_evasion_rating",
            Stat::BaseFireDamageResistance(_) => "base_fire_damage_resistance_%",
            Stat::BaseFrenzyChargeDuration(_) => "base_frenzy_charge_duration_+%",
            Stat::BaseIgniteEffect(_) => "base_ignite_effect_+%",
            Stat::BaseIntelligence(_) => "base_intelligence",
            Stat::BaseLifeGainedOnEnemyDeath(_) => "base_life_gained_on_enemy_death",
            Stat::BaseLifeLeechAmount(_) => "base_life_leech_amount_+%",
            Stat::BaseLifeLeechDoesNotStopAtFullLife(_) => "base_life_leech_does_not_stop_at_full_life",
            Stat::BaseLifeLeechFromAllSpellDamagePermyriad(_) => "base_life_leech_from_all_spell_damage_permyriad",
            Stat::BaseLifeLeechRate(_) => "base_life_leech_rate_+%",
            Stat::BaseManaCost(_) => "base_mana_cost_-%",
            Stat::BaseManaLeechAmount(_) => "base_mana_leech_amount_+%",
            Stat::BaseManaLeechIsInstant(_) => "base_mana_leech_is_instant",
            Stat::BaseMaximumChaosDamageResistance(_) => "base_maximum_chaos_damage_resistance_%",
            Stat::BaseMaximumColdDamageResistance(_) => "base_maximum_cold_damage_resistance_%",
            Stat::BaseMaximumEnergyShield(_) => "base_maximum_energy_shield",
            Stat::BaseMaximumFireDamageResistance(_) => "base_maximum_fire_damage_resistance_%",
            Stat::BaseMaximumLife(_) => "base_maximum_life",
            Stat::BaseMaximumLightningDamageResistance(_) => "base_maximum_lightning_damage_resistance_%",
            Stat::BaseMaximumMana(_) => "base_maximum_mana",
            Stat::BaseMovementVelocity(_) => "base_movement_velocity_+%",
            Stat::BasePenetrateElementalResistances(_) => "base_penetrate_elemental_resistances_%",
            Stat::BasePhysicalDamageReductionRating(_) => "base_physical_damage_reduction_rating",
            Stat::BasePoisonDuration(_) => "base_poison_duration_+%",
            Stat::BasePoisonEffect(_) => "base_poison_effect_+%",
            Stat::BaseProjectileSpeed(_) => "base_projectile_speed_+%",
            Stat::BaseReduceEnemyColdResistance(_) => "base_reduce_enemy_cold_resistance_%",
            Stat::BaseReduceEnemyFireResistance(_) => "base_reduce_enemy_fire_resistance_%",
            Stat::BaseReduceEnemyLightningResistance(_) => "base_reduce_enemy_lightning_resistance_%",
            Stat::BaseResistAllElements(_) => "base_resist_all_elements_%",
            Stat::BaseSelfCriticalStrikeMultiplier(_) => "base_self_critical_strike_multiplier_-%",
            Stat::BaseSelfFreezeDuration(_) => "base_self_freeze_duration_-%",
            Stat::BaseSelfIgniteDuration(_) => "base_self_ignite_duration_-%",
            Stat::BaseSelfShockDuration(_) => "base_self_shock_duration_-%",
            Stat::BaseShouldHaveArcaneSurgeFromStat(_) => "base_should_have_arcane_surge_from_stat",
            Stat::BaseSkillAreaOfEffect(_) => "base_skill_area_of_effect_+%",
            Stat::BaseSkillCostLifeInsteadOfMana(_) => "base_skill_cost_life_instead_of_mana_%",
            Stat::BaseSlowPotency(_) => "base_slow_potency_+%",
            Stat::BaseSpellCriticalStrikeChanceOverridePermyriad(_) => "base_spell_critical_strike_chance_override_permyriad",
            Stat::BaseSpellCriticalStrikeMultiplier(_) => "base_spell_critical_strike_multiplier_+",
            Stat::BaseStrength(_) => "base_strength",
            Stat::BaseStrengthAndDexterity(_) => "base_strength_and_dexterity",
            Stat::BaseStrengthAndIntelligence(_) => "base_strength_and_intelligence",
            Stat::BaseStunRecovery(_) => "base_stun_recovery_+%",
            Stat::BaseThornsCriticalStrikeChance(_) => "base_thorns_critical_strike_chance",
            Stat::BaseThornsCriticalStrikeMultiplier(_) => "base_thorns_critical_strike_multiplier_+",
            Stat::BleedOnCrit(_) => "bleed_on_crit_%",
            Stat::BlindEffect(_) => "blind_effect_+%",
            Stat::BlindEnemiesWhenTheyStunYou(_) => "blind_enemies_when_they_stun_you",
            Stat::BlockChance(_) => "block_chance_+%",
            Stat::BlockChanceFromEquippedShieldIs(_) => "block_chance_from_equipped_shield_is_%",
            Stat::BlockRecovery(_) => "block_recovery_+%",
            Stat::BodyArmour(_) => "body_armour_+%",
            Stat::BodyArmourEvasionRating(_) => "body_armour_evasion_rating_+%",
            Stat::BowAccuracyRating(_) => "bow_accuracy_rating_+%",
            Stat::BowAttackSpeed(_) => "bow_attack_speed_+%",
            Stat::BowCriticalStrikeMultiplier(_) => "bow_critical_strike_multiplier_+",
            Stat::BowDamage(_) => "bow_damage_+%",
            Stat::BreachFlameEffectsDoubled(_) => "breach_flame_effects_doubled",
            Stat::BuffTimePassed(_) => "buff_time_passed_+%_only_buff_category",
            Stat::BuildupJadeEveryXMs(_) => "buildup_jade_every_x_ms",
            Stat::CanApplyAdditionalChill(_) => "can_apply_additional_chill",
            Stat::CanApplyAdditionalShock(_) => "can_apply_additional_shock",
            Stat::CanBlockAllHitsWhileShieldIsLowered(_) => "can_block_all_hits_while_shield_is_lowered",
            Stat::CannotBeBlindedWhileOnFullLife(_) => "cannot_be_blinded_while_on_full_life",
            Stat::CannotGainSpiritFromEquipment(_) => "cannot_gain_spirit_from_equipment",
            Stat::CannotRechargeEnergyShield(_) => "cannot_recharge_energy_shield",
            Stat::CastSpeed(_) => "cast_speed_+%_when_on_full_life",
            Stat::CastSpeedForColdSkills(_) => "cast_speed_for_cold_skills_+%",
            Stat::Chance(_) => "chance_%_to_create_shocking_ground_on_shock",
            Stat::ChanceForSkillsToAvoidCooldown(_) => "chance_for_skills_to_avoid_cooldown_%",
            Stat::ChanceToDoubleArmourEffectOnHit(_) => "chance_to_double_armour_effect_on_hit_%",
            Stat::ChanceToForkExtraProjectile(_) => "chance_to_fork_extra_projectile_%",
            Stat::ChanceToGainOnslaughtOnKillWithAxes(_) => "chance_to_gain_onslaught_on_kill_with_axes_%",
            Stat::ChanceToPoisonOnCriticalStrikeWithDagger(_) => "chance_to_poison_on_critical_strike_with_dagger_%",
            Stat::ChanceToSummonTwoTotems(_) => "chance_to_summon_two_totems_%",
            Stat::ChaosDamage(_) => "chaos_damage_+%",
            Stat::ChaosDamageResistanceIsDoubled(_) => "chaos_damage_resistance_is_doubled",
            Stat::ChaosSkillGemLevel(_) => "chaos_skill_gem_level_+",
            Stat::ChargesGained(_) => "charges_gained_+%",
            Stat::CharmChargesGained(_) => "charm_charges_gained_+%",
            Stat::CharmChargesUsed(_) => "charm_charges_used_+%",
            Stat::CharmDuration(_) => "charm_duration_+%",
            Stat::CharmEffect(_) => "charm_effect_+%",
            Stat::Charms(_) => "charms_%_chance_on_use_to_use_another_charm_without_consuming_charges",
            Stat::ChillAndFreezeDuration(_) => "chill_and_freeze_duration_+%",
            Stat::ChillDuration(_) => "chill_duration_+%",
            Stat::ChillEffect(_) => "chill_effect_+%",
            Stat::ChillEffectivenessOnSelf(_) => "chill_effectiveness_on_self_+%",
            Stat::ClawAccuracyRating(_) => "claw_accuracy_rating_+%",
            Stat::ClawAttackSpeed(_) => "claw_attack_speed_+%",
            Stat::ClawCriticalStrikeChance(_) => "claw_critical_strike_chance_+%",
            Stat::ClawDamage(_) => "claw_damage_+%",
            Stat::ColdDamage(_) => "cold_damage_+%",
            Stat::ColdExposureEffect(_) => "cold_exposure_effect_+%",
            Stat::ColdExposureYouInflictLowersColdResistanceByExtra(_) => "cold_exposure_you_inflict_lowers_cold_resistance_by_extra_%",
            Stat::ColdHitAndDotDamage(_) => "cold_hit_and_dot_damage_%_taken_as_fire",
            Stat::ColdSkillGemLevel(_) => "cold_skill_gem_level_+",
            Stat::ConvertAllLifeLeechToEnergyShieldLeech(_) => "convert_all_life_leech_to_energy_shield_leech",
            Stat::CorpsesInYourPresenceExplodeDealing(_) => "corpses_in_your_presence_explode_dealing_%_maximum_life_physical_damage_on_warcry",
            Stat::CreateChillingGroundOnFreeze(_) => "create_chilling_ground_on_freeze",
            Stat::CriticalHitBleedingEffect(_) => "critical_hit_bleeding_effect_+%",
            Stat::CriticalHitDamageBonus(_) => "critical_hit_damage_bonus_+%_if_consumed_power_charge_recently",
            Stat::CriticalHitDamagingAilmentEffect(_) => "critical_hit_damaging_ailment_effect_+%",
            Stat::CriticalHitIgniteEffect(_) => "critical_hit_ignite_effect_+%",
            Stat::CriticalStrikeChance(_) => "critical_strike_chance_+%",
            Stat::CriticalStrikeChanceAgainstEnemiesOnFullLife(_) => "critical_strike_chance_against_enemies_on_full_life_+%",
            Stat::CriticalStrikeChanceWhileDualWielding(_) => "critical_strike_chance_while_dual_wielding_+%",
            Stat::CriticalStrikeMultiplier(_) => "critical_strike_multiplier_+_if_have_not_dealt_critical_strike_recently",
            Stat::CriticalStrikeMultiplierVsEnemiesOnFullLife(_) => "critical_strike_multiplier_vs_enemies_on_full_life_+",
            Stat::CriticalStrikeMultiplierWithDagger(_) => "critical_strike_multiplier_with_dagger_+",
            Stat::CriticalStrikesIgnorePositiveElementalResistances(_) => "critical_strikes_ignore_positive_elemental_resistances",
            Stat::CrossbowAttack(_) => "crossbow_attack_%_chance_to_not_consume_ammo",
            Stat::CrossbowAttackSpeed(_) => "crossbow_attack_speed_+%",
            Stat::CrossbowCriticalStrikeChance(_) => "crossbow_critical_strike_chance_+%",
            Stat::CrossbowCriticalStrikeMultiplier(_) => "crossbow_critical_strike_multiplier_+",
            Stat::CrossbowDamage(_) => "crossbow_damage_+%",
            Stat::CrushingBlow(_) => "crushing_blow",
            Stat::CullingStrikeThreshold(_) => "culling_strike_threshold_+%",
            Stat::CullingStrikeVsMarkedEnemy(_) => "culling_strike_vs_marked_enemy",
            Stat::CurseAreaOfEffect(_) => "curse_area_of_effect_+%",
            Stat::CurseDelay(_) => "curse_delay_+%",
            Stat::CurseEffect(_) => "curse_effect_+%",
            Stat::CurseEffectOnSelf(_) => "curse_effect_on_self_+%",
            Stat::CursesNeverExpire(_) => "curses_never_expire",
            Stat::DaggerAttackSpeed(_) => "dagger_attack_speed_+%",
            Stat::DaggerCriticalStrikeChance(_) => "dagger_critical_strike_chance_+%",
            Stat::DaggerDamage(_) => "dagger_damage_+%",
            Stat::Damage(_) => "damage_+%_against_enemies_with_fully_broken_armour",
            Stat::DamageRemovedFromYourNearestTotemBeforeLifeOrEs(_) => "damage_removed_from_your_nearest_totem_before_life_or_es_%",
            Stat::DamageTaken(_) => "damage_taken_+%_final_per_tailwind",
            Stat::DamageTakenGoesToMana(_) => "damage_taken_goes_to_mana_%",
            Stat::DamageVsEnemiesOnLowLife(_) => "damage_vs_enemies_on_low_life_+%",
            Stat::DamageVsShockedEnemies(_) => "damage_vs_shocked_enemies_+%",
            Stat::DamageWhileDualWielding(_) => "damage_while_dual_wielding_+%",
            Stat::DamageWithHitsIsLuckyVsEnemiesOnLowLife(_) => "damage_with_hits_is_lucky_vs_enemies_on_low_life",
            Stat::DamageWithHitsIsLuckyVsHeavyStunnedEnemies(_) => "damage_with_hits_is_lucky_vs_heavy_stunned_enemies",
            Stat::DamagingAilmentDuration(_) => "damaging_ailment_duration_+%",
            Stat::DamagingAilmentsDealDamage(_) => "damaging_ailments_deal_damage_+%_faster",
            Stat::DarknessPerLevel(_) => "darkness_per_level",
            Stat::DarknessRefreshRate(_) => "darkness_refresh_rate_+%",
            Stat::DazeBuildUp(_) => "daze_build_up_+%",
            Stat::DazeDuration(_) => "daze_duration_+%",
            Stat::DeadeyeAccuracyUnaffectedByRange(_) => "deadeye_accuracy_unaffected_by_range",
            Stat::DeadeyeMovementSpeedPenalty(_) => "deadeye_movement_speed_penalty_+%_final_while_performing_action",
            Stat::DeadeyeProjectileDamage(_) => "deadeye_projectile_damage_+%_final_max_as_distance_travelled_increases",
            Stat::DebuffTimePassed(_) => "debuff_time_passed_+%",
            Stat::DecimatingStrike(_) => "decimating_strike",
            Stat::Defences(_) => "defences_+%_while_wielding_staff",
            Stat::DefendWith(_) => "defend_with_%_armour_against_ranged_attacks",
            Stat::Dexterity(_) => "dexterity_+%",
            Stat::DisplayPassiveAttributeText(_) => "display_passive_attribute_text",
            Stat::DistanceScaledAccuracyRatingPenalty(_) => "distance_scaled_accuracy_rating_penalty_+%",
            Stat::DoubleNumberOfPoisonYouCanInflict(_) => "double_number_of_poison_you_can_inflict",
            Stat::DoubleTabletEffectChance(_) => "double_tablet_effect_chance_%_when_opening_a_map",
            Stat::DrainFocus(_) => "drain_focus_%_of_damage_dealt_on_hit",
            Stat::DummyStatDisplayNothing(_) => "dummy_stat_display_nothing",
            Stat::ElectrocutedEnemyDamageTaken(_) => "electrocuted_enemy_damage_taken_+%",
            Stat::ElementalDamage(_) => "elemental_damage_+%",
            Stat::ElementalDamageCanInflictBleeding(_) => "elemental_damage_can_inflict_bleeding",
            Stat::ElementalDamageTaken(_) => "elemental_damage_taken_%_recouped_as_life",
            Stat::ElementalDamageWithAttackSkills(_) => "elemental_damage_with_attack_skills_+%",
            Stat::ElementalStormCooldownRecoverySpeed(_) => "elemental_storm_cooldown_recovery_speed_+%_final",
            Stat::ElementalistChillMaximumMagnitudeOverride(_) => "elementalist_chill_maximum_magnitude_override",
            Stat::EmpoweredAttackDamage(_) => "empowered_attack_damage_+%",
            Stat::EmpoweredAttackHitDamageStunMultiplier(_) => "empowered_attack_hit_damage_stun_multiplier_+%",
            Stat::EnduranceChargeDuration(_) => "endurance_charge_duration_+%",
            Stat::EnemiesAreMaimedForXSecondsAfterBecomingUnpinned(_) => "enemies_are_maimed_for_x_seconds_after_becoming_unpinned",
            Stat::EnemiesChaosResistance(_) => "enemies_chaos_resistance_%_while_cursed",
            Stat::EnemiesCursedByYouHaveLifeRegenerationRate(_) => "enemies_cursed_by_you_have_life_regeneration_rate_+%",
            Stat::EnemiesInPresenceCooldownRecovery(_) => "enemies_in_presence_cooldown_recovery_+%",
            Stat::EnemiesNearMarkedEnemyAreBlinded(_) => "enemies_near_marked_enemy_are_blinded",
            Stat::EnemiesYouCurseCannotRechargeEnergyShield(_) => "enemies_you_curse_cannot_recharge_energy_shield",
            Stat::EnergyGenerated(_) => "energy_generated_+%",
            Stat::EnergyShield(_) => "energy_shield_+%_if_consumed_power_charge_recently",
            Stat::EnergyShieldDelay(_) => "energy_shield_delay_-%",
            Stat::EnergyShieldFromFocus(_) => "energy_shield_from_focus_+%",
            Stat::EnergyShieldFromHelmet(_) => "energy_shield_from_helmet_+%",
            Stat::EnergyShieldGainedOnBlock(_) => "energy_shield_gained_on_block",
            Stat::EnergyShieldRechargeRate(_) => "energy_shield_recharge_rate_+%",
            Stat::EnergyShieldRecoveryRate(_) => "energy_shield_recovery_rate_+%_if_not_hit_recently",
            Stat::Evasion(_) => "evasion_+%_if_hit_recently",
            Stat::EvasionAndPhysicalDamageReductionRating(_) => "evasion_and_physical_damage_reduction_rating_+%",
            Stat::EvasionRating(_) => "evasion_rating_+%",
            Stat::EvasionRatingAlsoReducesPhysicalDamage(_) => "evasion_rating_also_reduces_physical_damage",
            Stat::ExpeditionMonstersLogbookChance(_) => "expedition_monsters_logbook_chance_+%",
            Stat::ExposureYouInflictLowersAffectedResistanceByExtra(_) => "exposure_you_inflict_lowers_affected_resistance_by_extra_%",
            Stat::ExtraDamageRollsWithLightningDamageOnNonCriticalHits(_) => "extra_damage_rolls_with_lightning_damage_on_non_critical_hits",
            Stat::FasterBleed(_) => "faster_bleed_%",
            Stat::FasterBurn(_) => "faster_burn_%",
            Stat::FinalRepeatOfSpellsAreaOfEffect(_) => "final_repeat_of_spells_area_of_effect_+%",
            Stat::FireDamage(_) => "fire_damage_+%",
            Stat::FireExposureEffect(_) => "fire_exposure_effect_+%",
            Stat::FireExposureYouInflictLowersFireResistanceByExtra(_) => "fire_exposure_you_inflict_lowers_fire_resistance_by_extra_%",
            Stat::FlailAttackSpeed(_) => "flail_attack_speed_+%",
            Stat::FlailCriticalStrikeChance(_) => "flail_critical_strike_chance_+%",
            Stat::FlailCriticalStrikeMultiplier(_) => "flail_critical_strike_multiplier_+",
            Stat::FlailDamage(_) => "flail_damage_+%",
            Stat::FlaskChargesGained(_) => "flask_charges_gained_+%",
            Stat::FlaskChargesUsed(_) => "flask_charges_used_+%",
            Stat::FlaskDuration(_) => "flask_duration_+%",
            Stat::FlaskEffect(_) => "flask_effect_+%",
            Stat::FlaskLifeAndManaRecovery(_) => "flask_life_and_mana_recovery_+%_while_using_charm",
            Stat::FlaskLifeAndManaToRecover(_) => "flask_life_and_mana_to_recover_+%",
            Stat::FlaskLifeRecoveryRate(_) => "flask_life_recovery_rate_+%",
            Stat::FlaskLifeToRecover(_) => "flask_life_to_recover_+%",
            Stat::FlaskManaChargesUsed(_) => "flask_mana_charges_used_+%",
            Stat::FlaskManaToRecover(_) => "flask_mana_to_recover_+%",
            Stat::Flasks(_) => "flasks_%_chance_to_not_consume_charges",
            Stat::FocusDecay(_) => "focus_decay_%_per_minute",
            Stat::FocusDecayDelayMs(_) => "focus_decay_delay_ms",
            Stat::FreezeDuration(_) => "freeze_duration_+%",
            Stat::FreezeThreshold(_) => "freeze_threshold_+%",
            Stat::Gain(_) => "gain_%_damage_as_chaos_from_unreserved_darkness",
            Stat::GainAccuracyRatingEqualToIntelligence(_) => "gain_accuracy_rating_equal_to_intelligence",
            Stat::GainAccuracyRatingEqualToStrength(_) => "gain_accuracy_rating_equal_to_strength",
            Stat::GainArcaneSurgeOnCrit(_) => "gain_arcane_surge_on_crit_%_chance",
            Stat::GainEnduranceChargeOnHeavyStunningRareOrUniqueEnemy(_) => "gain_endurance_charge_on_heavy_stunning_rare_or_unique_enemy",
            Stat::GainGuardFlaskChargeWhenHitByEnemyChance(_) => "gain_guard_flask_charge_when_hit_by_enemy_chance_%",
            Stat::GainMaxRageOnRageGainFromHit(_) => "gain_max_rage_on_rage_gain_from_hit_%_chance",
            Stat::GainMaximumEnduranceChargesOnEnduranceChargeGained(_) => "gain_maximum_endurance_charges_on_endurance_charge_gained_%_chance",
            Stat::GainMaximumFrenzyChargesOnFrenzyChargeGained(_) => "gain_maximum_frenzy_charges_on_frenzy_charge_gained_%_chance",
            Stat::GainMaximumPowerChargesOnPowerChargeGained(_) => "gain_maximum_power_charges_on_power_charge_gained_%_chance",
            Stat::GainTailwindStackOnSkillUse(_) => "gain_tailwind_stack_on_skill_use",
            Stat::GainUnboundAilmentStacks(_) => "gain_unbound_ailment_stacks",
            Stat::GainXRageOnHitWithAxes(_) => "gain_x_rage_on_hit_with_axes",
            Stat::GainXRageOnMeleeHit(_) => "gain_x_rage_on_melee_hit",
            Stat::GainXRageWhenHit(_) => "gain_x_rage_when_hit",
            Stat::GemRequirementsCanBeSatisfiedByHighestAttribute(_) => "gem_requirements_can_be_satisfied_by_highest_attribute",
            Stat::GemlingDoubleBasicAttributeBonuses(_) => "gemling_double_basic_attribute_bonuses",
            Stat::GemlingSkillCost(_) => "gemling_skill_cost_+%_final",
            Stat::GenerateXChargesForCharmsPerMinute(_) => "generate_x_charges_for_charms_per_minute",
            Stat::GenerateXChargesForLifeFlasksPerMinute(_) => "generate_x_charges_for_life_flasks_per_minute",
            Stat::GenerateXChargesForManaFlasksPerMinute(_) => "generate_x_charges_for_mana_flasks_per_minute",
            Stat::GlobalChanceToBlindOnHit(_) => "global_chance_to_blind_on_hit_%",
            Stat::GlobalDefences(_) => "global_defences_+%",
            Stat::GlobalGemAttributeRequirements(_) => "global_gem_attribute_requirements_+%_final_from_gemling",
            Stat::GlobalItemAttributeRequirements(_) => "global_item_attribute_requirements_+%",
            Stat::GrenadeFuseDuration(_) => "grenade_fuse_duration_+%",
            Stat::GrenadeSkill(_) => "grenade_skill_%_chance_to_explode_twice",
            Stat::GrenadeSkillAreaOfEffect(_) => "grenade_skill_area_of_effect_+%",
            Stat::GrenadeSkillCooldownCount(_) => "grenade_skill_cooldown_count_+",
            Stat::GrenadeSkillCooldownSpeed(_) => "grenade_skill_cooldown_speed_+%",
            Stat::GrenadeSkillDamage(_) => "grenade_skill_damage_+%",
            Stat::GrenadeSkillNumberOfAdditionalProjectiles(_) => "grenade_skill_number_of_additional_projectiles",
            Stat::GuardFlaskEffect(_) => "guard_flask_effect_+%",
            Stat::HeavyStunPoiseDecayRate(_) => "heavy_stun_poise_decay_rate_+%",
            Stat::HeavyStunsHaveCullingStrike(_) => "heavy_stuns_have_culling_strike",
            Stat::HellhoundTakes(_) => "hellhound_takes_%_damage_before_you",
            Stat::HeraldSkillsManaReservation(_) => "herald_skills_mana_reservation_+%",
            Stat::HinderDuration(_) => "hinder_duration_+%",
            Stat::HitDamage(_) => "hit_damage_+%_vs_enemies_affected_by_ailments",
            Stat::HitDamageElectrocuteMultiplier(_) => "hit_damage_electrocute_multiplier_+%",
            Stat::HitDamageFreezeMultiplier(_) => "hit_damage_freeze_multiplier_+%",
            Stat::HitDamagePinMultiplier(_) => "hit_damage_pin_multiplier_+%",
            Stat::HitDamageStunMultiplier(_) => "hit_damage_stun_multiplier_+%",
            Stat::HitFor(_) => "hit_for_%_max_life_es_on_max_infernal_flame",
            Stat::HitsIgnoreElementalResistancesVsFrozenEnemies(_) => "hits_ignore_elemental_resistances_vs_frozen_enemies",
            Stat::IceCrystalMaximumLife(_) => "ice_crystal_maximum_life_+%",
            Stat::IgniteChance(_) => "ignite_chance_+%",
            Stat::IgniteDuration(_) => "ignite_duration_+%",
            Stat::IgniteEffectOnSelf(_) => "ignite_effect_on_self_+%",
            Stat::IgniteShockChillDuration(_) => "ignite_shock_chill_duration_+%",
            Stat::IgnitesApplyFireResistance(_) => "ignites_apply_fire_resistance_+",
            Stat::InfernalFlameInsteadOfMana(_) => "infernal_flame_instead_of_mana",
            Stat::InfernalistBurnLifeAndEs(_) => "infernalist_burn_life_and_es_%_per_second_if_crit_recently",
            Stat::InfernalistCriticalStrikeMultiplier(_) => "infernalist_critical_strike_multiplier_+%_final",
            Stat::InflictFireExposureOnHitsThatHeavyStun(_) => "inflict_fire_exposure_on_hits_that_heavy_stun",
            Stat::InflictWitheredForXSecondsOnUnwitheredEnemiesWhenTheyEnterYourPresence(_) => "inflict_withered_for_x_seconds_on_unwithered_enemies_when_they_enter_your_presence",
            Stat::Intelligence(_) => "intelligence_+%",
            Stat::JaggedGroundDuration(_) => "jagged_ground_duration_+%",
            Stat::JaggedGroundEffect(_) => "jagged_ground_effect_+%",
            Stat::JaggedGroundEnemyDamageTaken(_) => "jagged_ground_enemy_damage_taken_+%",
            Stat::KeystoneAcrobatics(_) => "keystone_acrobatics",
            Stat::KeystoneAncestralBond(_) => "keystone_ancestral_bond",
            Stat::KeystoneAvatarOfFire(_) => "keystone_avatar_of_fire",
            Stat::KeystoneBloodMagic(_) => "keystone_blood_magic",
            Stat::KeystoneBulwark(_) => "keystone_bulwark",
            Stat::KeystoneChaosInoculation(_) => "keystone_chaos_inoculation",
            Stat::KeystoneChargeCycle(_) => "keystone_charge_cycle",
            Stat::KeystoneConduit(_) => "keystone_conduit",
            Stat::KeystoneDanceWithDeath(_) => "keystone_dance_with_death",
            Stat::KeystoneEldritchBattery(_) => "keystone_eldritch_battery",
            Stat::KeystoneElementalEquilibrium(_) => "keystone_elemental_equilibrium",
            Stat::KeystoneEternalYouth(_) => "keystone_eternal_youth",
            Stat::KeystoneGiantsBlood(_) => "keystone_giants_blood",
            Stat::KeystoneGlancingBlows(_) => "keystone_glancing_blows",
            Stat::KeystoneHeartstopper(_) => "keystone_heartstopper",
            Stat::KeystoneHexMaster(_) => "keystone_hex_master",
            Stat::KeystoneIronReflexes(_) => "keystone_iron_reflexes",
            Stat::KeystoneManaShield(_) => "keystone_mana_shield",
            Stat::KeystoneOasis(_) => "keystone_oasis",
            Stat::KeystonePainAttunement(_) => "keystone_pain_attunement",
            Stat::KeystoneUnwaveringStance(_) => "keystone_unwavering_stance",
            Stat::KeystoneVaalPact(_) => "keystone_vaal_pact",
            Stat::KeystoneZealotsOath(_) => "keystone_zealots_oath",
            Stat::KnockbackChance(_) => "knockback_chance_%_at_close_range",
            Stat::KnockbackDistance(_) => "knockback_distance_+%",
            Stat::KnockbackOnCritWithQuarterstaff(_) => "knockback_on_crit_with_quarterstaff",
            Stat::Leech(_) => "leech_%_is_instant",
            Stat::LifeFlaskChargesGained(_) => "life_flask_charges_gained_+%",
            Stat::LifeFlaskEffectsAreNotRemovedAtFullLife(_) => "life_flask_effects_are_not_removed_at_full_life",
            Stat::LifeGainedOnBlock(_) => "life_gained_on_block",
            Stat::LifeRecovery(_) => "life_recovery_+%_from_flasks_while_on_low_life",
            Stat::LifeRecoveryRate(_) => "life_recovery_rate_+%",
            Stat::LifeRegenerateRatePerSecond(_) => "life_regenerate_rate_per_second_%_while_totem_active",
            Stat::LifeRegenerationRate(_) => "life_regeneration_rate_+%_while_using_life_flask",
            Stat::LifeRegenerationRatePerMinute(_) => "life_regeneration_rate_per_minute_%",
            Stat::LifeRemnantsGainPerGlobe(_) => "life_remnants_gain_per_globe",
            Stat::LifeReservedByStat(_) => "life_reserved_by_stat_%",
            Stat::LightRadius(_) => "light_radius_+%",
            Stat::LightningDamage(_) => "lightning_damage_+%_while_affected_by_herald_of_thunder",
            Stat::LightningExposureEffect(_) => "lightning_exposure_effect_+%",
            Stat::LightningHitAndDotDamage(_) => "lightning_hit_and_dot_damage_%_taken_as_fire",
            Stat::LightningPenetration(_) => "lightning_penetration_%_while_on_low_mana",
            Stat::LightningSkillAdditionalChainChance(_) => "lightning_skill_additional_chain_chance_%",
            Stat::LinkSkillBuffEffect(_) => "link_skill_buff_effect_+%",
            Stat::LinkSkillCastSpeed(_) => "link_skill_cast_speed_+%",
            Stat::LinkSkillDuration(_) => "link_skill_duration_+%",
            Stat::LinkSkillsCanTargetMinions(_) => "link_skills_can_target_minions",
            Stat::LinkToXAdditionalRandomAllies(_) => "link_to_X_additional_random_allies",
            Stat::Lose(_) => "lose_%_of_infernal_flame_on_reaching_max",
            Stat::LoseAllTailwindWhenHit(_) => "lose_all_tailwind_when_hit",
            Stat::MaceDamage(_) => "mace_damage_+%",
            Stat::MaceHitDamageStunMultiplier(_) => "mace_hit_damage_stun_multiplier_+%",
            Stat::MaceSlamAftershockChance(_) => "mace_slam_aftershock_chance_%",
            Stat::MaceStrikeAftershockChance(_) => "mace_strike_aftershock_chance_%",
            Stat::MaimOnHit(_) => "maim_on_hit_%",
            Stat::ManaCost(_) => "mana_cost_+%_while_not_low_mana",
            Stat::ManaFlaskChargesGained(_) => "mana_flask_charges_gained_+%",
            Stat::ManaGainedOnBlock(_) => "mana_gained_on_block",
            Stat::ManaLeechAppliesRecoveryToEnergyShieldAlso(_) => "mana_leech_applies_recovery_to_energy_shield_also",
            Stat::ManaRecoveryRate(_) => "mana_recovery_rate_+%_while_affected_by_a_mana_flask",
            Stat::ManaRegenerationRate(_) => "mana_regeneration_rate_+%",
            Stat::MapAfflictionEncounterBossChance(_) => "map_affliction_encounter_boss_chance_+%",
            Stat::MapAfflictionRewardProgressOnKill(_) => "map_affliction_reward_progress_on_kill_+%",
            Stat::MapAfflictionSecondaryWaveAcceleration(_) => "map_affliction_secondary_wave_acceleration_+%",
            Stat::MapBasicCurrencyDropChance(_) => "map_basic_currency_drop_chance_+%_in_swamp_and_water_biome",
            Stat::MapBossAreaChanceToBeCorrupted(_) => "map_boss_area_chance_to_be_corrupted_%",
            Stat::MapBossDamage(_) => "map_boss_damage_+%",
            Stat::MapBossDroppedItemQuantity(_) => "map_boss_dropped_item_quantity_+%",
            Stat::MapBossExperience(_) => "map_boss_experience_+%_final",
            Stat::MapBossItemRarity(_) => "map_boss_item_rarity_+%",
            Stat::MapBossMaximumLife(_) => "map_boss_maximum_life_+%",
            Stat::MapBossingDifficulty(_) => "map_bossing_difficulty_+",
            Stat::MapBreachChanceToBeGuardedByMagicPack(_) => "map_breach_chance_to_be_guarded_by_magic_pack_%",
            Stat::MapBreachChests(_) => "map_breach_chests_+%_final",
            Stat::MapBreachChestsDropDoubleSplintersChance(_) => "map_breach_chests_drop_double_splinters_chance_%",
            Stat::MapBreachDomainDifficulty(_) => "map_breach_domain_difficulty_+",
            Stat::MapBreachHandsInflictWakingNightmare(_) => "map_breach_hands_inflict_waking_nightmare",
            Stat::MapBreachMonsterQuantity(_) => "map_breach_monster_quantity_+%",
            Stat::MapBreachMonsterSplinterQuantity(_) => "map_breach_monster_splinter_quantity_+%",
            Stat::MapBreachRaresCatalystFullStackChance(_) => "map_breach_rares_catalyst_full_stack_chance_%",
            Stat::MapBreachRaresHaveSoulEater(_) => "map_breach_rares_have_soul_eater",
            Stat::MapBreachTimePassed(_) => "map_breach_time_passed_+%",
            Stat::MapDeliriumAdditionalRewardTypeChance(_) => "map_delirium_additional_reward_type_chance_%",
            Stat::MapDeliriumBossLife(_) => "map_delirium_boss_life_+%",
            Stat::MapDeliriumBossSplinterAmount(_) => "map_delirium_boss_splinter_amount_+%",
            Stat::MapDeliriumDaemonDamage(_) => "map_delirium_daemon_damage_+%",
            Stat::MapDeliriumDifficultyScalingFromMirrorIsDouble(_) => "map_delirium_difficulty_scaling_from_mirror_is_double",
            Stat::MapDeliriumDoodads(_) => "map_delirium_doodads_+%_final",
            Stat::MapDroppedMapsRarity(_) => "map_dropped_maps_rarity_+%",
            Stat::MapDuplicateXRareMonsters(_) => "map_duplicate_x_rare_monsters",
            Stat::MapExpeditionArtifactQuantity(_) => "map_expedition_artifact_quantity_+%",
            Stat::MapExpeditionChestMarkerCount(_) => "map_expedition_chest_marker_count_+",
            Stat::MapExpeditionChestsDespawnAfterXSeconds(_) => "map_expedition_chests_despawn_after_X_seconds",
            Stat::MapExpeditionEliteMarkerCount(_) => "map_expedition_elite_marker_count_+%",
            Stat::MapExpeditionFuseBurnTime(_) => "map_expedition_fuse_burn_time_+%",
            Stat::MapExpeditionRareMonsters(_) => "map_expedition_rare_monsters_+%",
            Stat::MapExpeditionRelicModEffect(_) => "map_expedition_relic_mod_effect_+%",
            Stat::MapExpeditionVendorRerollCurrencyQuantity(_) => "map_expedition_vendor_reroll_currency_quantity_+%",
            Stat::MapExpeditionXExtraRelicPrefixes(_) => "map_expedition_x_extra_relic_prefixes",
            Stat::MapExpeditionXExtraRelicSuffixes(_) => "map_expedition_x_extra_relic_suffixes",
            Stat::MapFinalBossMapKeyOfAtLeastSameTierAsCurrentMapDropChance(_) => "map_final_boss_map_key_of_at_least_same_tier_as_current_map_drop_chance_%",
            Stat::MapGoldDropChance(_) => "map_gold_drop_chance_+%_in_mountain_biome",
            Stat::MapItemDropQuantity(_) => "map_item_drop_quantity_+%",
            Stat::MapItemDropRarity(_) => "map_item_drop_rarity_+%",
            Stat::MapJewelDropChance(_) => "map_jewel_drop_chance_+%_in_forest_biome",
            Stat::MapKillingRareMonstersPausesDeliriumMirrorTimerForXSeconds(_) => "map_killing_rare_monsters_pauses_delirium_mirror_timer_for_x_seconds",
            Stat::MapLogbookDifficulty(_) => "map_logbook_difficulty_+",
            Stat::MapMagicChestAmount(_) => "map_magic_chest_amount_+%",
            Stat::MapMagicPackSize(_) => "map_magic_pack_size_+%",
            Stat::MapMapItemDropChance(_) => "map_map_item_drop_chance_+%",
            Stat::MapMapsDropWithDistilledEmotionsAppliedChance(_) => "map_maps_drop_with_distilled_emotions_applied_chance_%",
            Stat::MapModEffect(_) => "map_mod_effect_+%_per_mod",
            Stat::MapMonolithChance(_) => "map_monolith_chance_%",
            Stat::MapMonsterTre(_) => "map_monster_tre_+%",
            Stat::MapNonUniqueDeliriumMonstersSplinterAmount(_) => "map_non_unique_delirium_monsters_splinter_amount_+%",
            Stat::MapNumberOfMagicPacks(_) => "map_number_of_magic_packs_+%",
            Stat::MapNumberOfRarePacks(_) => "map_number_of_rare_packs_+%",
            Stat::MapPackSize(_) => "map_pack_size_+%",
            Stat::MapPinnacleBossAdditionalUniqueDropChance(_) => "map_pinnacle_boss_additional_unique_drop_chance_%",
            Stat::MapPinnacleBossDifficulty(_) => "map_pinnacle_boss_difficulty_+",
            Stat::MapPinnacleBossDropsXCorruptedRareTablets(_) => "map_pinnacle_boss_drops_X_corrupted_rare_tablets",
            Stat::MapPinnacleBossDropsXWaystones(_) => "map_pinnacle_boss_drops_X_waystones",
            Stat::MapPinnacleBossItemDroppedRarity(_) => "map_pinnacle_boss_item_dropped_rarity_+%_final",
            Stat::MapPinnacleBossRareSocketCurrencyChance(_) => "map_pinnacle_boss_rare_socket_currency_chance_%",
            Stat::MapPinnacleBossSpecialGemDropChance(_) => "map_pinnacle_boss_special_gem_drop_chance_%",
            Stat::MapPlayerDamageTaken(_) => "map_player_damage_taken_+%_vs_breach_monsters",
            Stat::MapPlayerShrineBuffEffectOnSelf(_) => "map_player_shrine_buff_effect_on_self_+%",
            Stat::MapPlayerShrineEffectDuration(_) => "map_player_shrine_effect_duration_+%",
            Stat::MapRareChestAmount(_) => "map_rare_chest_amount_+%",
            Stat::MapRitualAdditionalDaemon(_) => "map_ritual_additional_daemon",
            Stat::MapRitualAdditionalRewardRerolls(_) => "map_ritual_additional_reward_rerolls",
            Stat::MapRitualAdditionalWildwoodPacks(_) => "map_ritual_additional_wildwood_packs",
            Stat::MapRitualContainsWildwoodWisp(_) => "map_ritual_contains_wildwood_wisp",
            Stat::MapRitualDaemonDamage(_) => "map_ritual_daemon_damage_+%",
            Stat::MapRitualDeferRewardTributeCost(_) => "map_ritual_defer_reward_tribute_cost_+%",
            Stat::MapRitualDeferredRewardsAreOfferedAgain(_) => "map_ritual_deferred_rewards_are_offered_again_+%_sooner",
            Stat::MapRitualEncounterCountIsFour(_) => "map_ritual_encounter_count_is_four",
            Stat::MapRitualMagicMonsters(_) => "map_ritual_magic_monsters_+%",
            Stat::MapRitualMonsterDamage(_) => "map_ritual_monster_damage_+%_for_each_time_revived",
            Stat::MapRitualMonsterSpawningSpeed(_) => "map_ritual_monster_spawning_speed_+%",
            Stat::MapRitualMonsterTankiness(_) => "map_ritual_monster_tankiness_+%_for_each_time_revived",
            Stat::MapRitualNoRevivePenalty(_) => "map_ritual_no_revive_penalty",
            Stat::MapRitualOmenChance(_) => "map_ritual_omen_chance_+%",
            Stat::MapRitualRareMonsters(_) => "map_ritual_rare_monsters_+%",
            Stat::MapRitualRewardsRerollCost(_) => "map_ritual_rewards_reroll_cost_+%_final",
            Stat::MapRitualVoodooKingKeyChance(_) => "map_ritual_voodoo_king_key_chance_+%",
            Stat::MapSanctumAndUltimatumKeyDropChance(_) => "map_sanctum_and_ultimatum_key_drop_chance_+%_in_desert_biome",
            Stat::MapShrineChance(_) => "map_shrine_chance_%",
            Stat::MapSimulacrumDifficulty(_) => "map_simulacrum_difficulty_+",
            Stat::MapSocketCurrencyDropChance(_) => "map_socket_currency_drop_chance_+%_in_grass_biome",
            Stat::MapStrongboxChance(_) => "map_strongbox_chance_%",
            Stat::MapStrongboxModEffect(_) => "map_strongbox_mod_effect_+%",
            Stat::MapTierBonusPermillage(_) => "map_tier_bonus_permillage",
            Stat::MapTowerAugmentQuantity(_) => "map_tower_augment_quantity_+%",
            Stat::MapVoodooKingDifficulty(_) => "map_voodoo_king_difficulty_+",
            Stat::MapsBossDropAdditionalBonusMapChance(_) => "maps_boss_drop_additional_bonus_map_chance_%",
            Stat::MapsWithBossesAdditionalEssence(_) => "maps_with_bosses_additional_essence_+",
            Stat::MapsWithBossesAdditionalShrine(_) => "maps_with_bosses_additional_shrine_+",
            Stat::MapsWithBossesAdditionalStrongbox(_) => "maps_with_bosses_additional_strongbox_+",
            Stat::MapsWithBossesAreIrradiated(_) => "maps_with_bosses_are_irradiated",
            Stat::MarkEffect(_) => "mark_effect_+%",
            Stat::MarkSkillCastSpeed(_) => "mark_skill_cast_speed_+%",
            Stat::MarkSkillDuration(_) => "mark_skill_duration_+%",
            Stat::MarkSkillManaCost(_) => "mark_skill_mana_cost_+%",
            Stat::MarkedEnemiesCannotDealCriticalStrikes(_) => "marked_enemies_cannot_deal_critical_strikes",
            Stat::MarkedEnemyAccuracyRating(_) => "marked_enemy_accuracy_rating_+%",
            Stat::MarkedEnemyDamageTaken(_) => "marked_enemy_damage_taken_+%",
            Stat::MasterOfElementsEvasionRating(_) => "master_of_elements_evasion_rating_+%_final",
            Stat::MasteryChanceToEvadeMeleeAttacks(_) => "mastery_chance_to_evade_melee_attacks_+%_final",
            Stat::MaxDemonFormStacks(_) => "max_demon_form_stacks",
            Stat::MaxEnduranceCharges(_) => "max_endurance_charges",
            Stat::MaxFrenzyCharges(_) => "max_frenzy_charges",
            Stat::MaxJadeStacks(_) => "max_jade_stacks",
            Stat::MaxPowerCharges(_) => "max_power_charges",
            Stat::MaximumDarkness(_) => "maximum_darkness_+%",
            Stat::MaximumEnergyShield(_) => "maximum_energy_shield_+%",
            Stat::MaximumEnergyShieldFromBodyArmour(_) => "maximum_energy_shield_from_body_armour_+%",
            Stat::MaximumLife(_) => "maximum_life_+%",
            Stat::MaximumLifeManaAndEnergyShield(_) => "maximum_life_mana_and_energy_shield_+%",
            Stat::MaximumMana(_) => "maximum_mana_+%",
            Stat::MaximumRage(_) => "maximum_rage",
            Stat::MeleeAttackSpeed(_) => "melee_attack_speed_+%",
            Stat::MeleeCriticalStrikeChance(_) => "melee_critical_strike_chance_+%",
            Stat::MeleeDamage(_) => "melee_damage_+%",
            Stat::MeleeHitDamageStunMultiplier(_) => "melee_hit_damage_stun_multiplier_+%",
            Stat::MeleeRange(_) => "melee_range_+",
            Stat::MinionAccuracyRating(_) => "minion_accuracy_rating",
            Stat::MinionAdditionalPhysicalDamageReduction(_) => "minion_additional_physical_damage_reduction_%",
            Stat::MinionAttackAndCastSpeed(_) => "minion_attack_and_cast_speed_+%",
            Stat::MinionChaosResistance(_) => "minion_chaos_resistance_%",
            Stat::MinionColdDamageResistance(_) => "minion_cold_damage_resistance_%",
            Stat::MinionCooldownRecovery(_) => "minion_cooldown_recovery_+%",
            Stat::MinionCriticalStrikeChance(_) => "minion_critical_strike_chance_+%",
            Stat::MinionCriticalStrikeMultiplier(_) => "minion_critical_strike_multiplier_+",
            Stat::MinionDamage(_) => "minion_damage_+%_while_you_have_at_least_two_different_active_offerings",
            Stat::MinionDamageTaken(_) => "minion_damage_taken_%_recouped_as_their_life",
            Stat::MinionElementalResistance(_) => "minion_elemental_resistance_%",
            Stat::MinionEvasionRating(_) => "minion_evasion_rating_+%",
            Stat::MinionFireDamageResistance(_) => "minion_fire_damage_resistance_%",
            Stat::MinionLifeRecoveryRate(_) => "minion_life_recovery_rate_+%",
            Stat::MinionLifeRegenerationRatePerMinute(_) => "minion_life_regeneration_rate_per_minute_%",
            Stat::MinionLightningDamageResistance(_) => "minion_lightning_damage_resistance_%",
            Stat::MinionMaximumAllElementalResistances(_) => "minion_maximum_all_elemental_resistances_%",
            Stat::MinionMaximumLife(_) => "minion_maximum_life_+%",
            Stat::MinionMovementSpeed(_) => "minion_movement_speed_+%",
            Stat::MinionReservation(_) => "minion_reservation_+%",
            Stat::MinionResummonSpeed(_) => "minion_resummon_speed_+%",
            Stat::MinionSkillAreaOfEffect(_) => "minion_skill_area_of_effect_+%",
            Stat::MinionsDeal(_) => "minions_deal_%_of_physical_damage_as_additional_chaos_damage",
            Stat::MinionsGainYourDexterity(_) => "minions_gain_your_dexterity",
            Stat::MinionsGetAmuletStatsInsteadOfYou(_) => "minions_get_amulet_stats_instead_of_you",
            Stat::MinionsHave(_) => "minions_have_%_chance_to_inflict_wither_on_hit",
            Stat::MovementSpeed(_) => "movement_speed_+%_while_using_charm",
            Stat::NonDamagingAilmentEffect(_) => "non_damaging_ailment_effect_+%_with_critical_strikes",
            Stat::NonSkillBaseAllDamage(_) => "non_skill_base_all_damage_%_to_gain_as_lightning",
            Stat::NonSkillBaseLightningDamage(_) => "non_skill_base_lightning_damage_%_to_gain_as_cold",
            Stat::NonSkillBasePhysicalDamage(_) => "non_skill_base_physical_damage_%_to_gain_as_fire",
            Stat::NonSkillColdDamage(_) => "non_skill_cold_damage_%_to_gain_as_fire_vs_frozen_enemies",
            Stat::NotableKnockbackDistance(_) => "notable_knockback_distance_+%_final_for_blocked_hits",
            Stat::NumAdditionalSkillSlots(_) => "num_additional_skill_slots",
            Stat::NumCharmSlots(_) => "num_charm_slots",
            Stat::NumberOfAdditionalMarksAllowed(_) => "number_of_additional_marks_allowed",
            Stat::NumberOfAdditionalPoisonStacks(_) => "number_of_additional_poison_stacks",
            Stat::NumberOfAdditionalProjectiles(_) => "number_of_additional_projectiles",
            Stat::NumberOfInfernalFamiliarsAllowed(_) => "number_of_infernal_familiars_allowed",
            Stat::OfferingAreaOfEffect(_) => "offering_area_of_effect_+%",
            Stat::OfferingDuration(_) => "offering_duration_+%",
            Stat::OfferingLife(_) => "offering_life_+%",
            Stat::OneHandedAttackAilmentChance(_) => "one_handed_attack_ailment_chance_+%",
            Stat::OneHandedAttackSpeed(_) => "one_handed_attack_speed_+%",
            Stat::OneHandedMeleeAccuracyRating(_) => "one_handed_melee_accuracy_rating_+%",
            Stat::OneHandedMeleeAttackSpeed(_) => "one_handed_melee_attack_speed_+%",
            Stat::OneHandedMeleeCriticalStrikeChance(_) => "one_handed_melee_critical_strike_chance_+%",
            Stat::OneHandedMeleeCriticalStrikeMultiplier(_) => "one_handed_melee_critical_strike_multiplier_+",
            Stat::PassiveTreeMaceDamage(_) => "passive_tree_mace_damage_+%_final_vs_heavy_stunned_enemies",
            Stat::PathfinderAscendancyPoisonOnEnemiesYouKillSpreadToEnemiesWithinX(_) => "pathfinder_ascendancy_poison_on_enemies_you_kill_spread_to_enemies_within_x",
            Stat::PathfinderPoisonDuration(_) => "pathfinder_poison_duration_+%_final",
            Stat::PhysicalAttackDamage(_) => "physical_attack_damage_+%",
            Stat::PhysicalDamage(_) => "physical_damage_+%",
            Stat::PhysicalDamageFromHits(_) => "physical_damage_from_hits_%_taken_as_random_element",
            Stat::PhysicalDamagePreventedRecoupedAsLife(_) => "physical_damage_prevented_recouped_as_life_%",
            Stat::PhysicalDamageReductionRating(_) => "physical_damage_reduction_rating_+%",
            Stat::PhysicalDamageTakenRecoupedAsLife(_) => "physical_damage_taken_recouped_as_life_%",
            Stat::PhysicalHitAndDotDamage(_) => "physical_hit_and_dot_damage_%_taken_as_chaos",
            Stat::PlacingTrapsCooldownRecovery(_) => "placing_traps_cooldown_recovery_+%",
            Stat::PoisonDuration(_) => "poison_duration_+%_per_poison_applied_recently",
            Stat::PoisonEffect(_) => "poison_effect_+%_vs_non_poisoned_enemies",
            Stat::PowerChargeDuration(_) => "power_charge_duration_+%",
            Stat::ProjectileAilmentChance(_) => "projectile_ailment_chance_+%",
            Stat::ProjectileDamage(_) => "projectile_damage_+%",
            Stat::ProjectileHitDamageStunMultiplier(_) => "projectile_hit_damage_stun_multiplier_+%",
            Stat::QuarterstaffAccuracyRating(_) => "quarterstaff_accuracy_rating_+%",
            Stat::QuarterstaffAttackSpeed(_) => "quarterstaff_attack_speed_+%",
            Stat::QuarterstaffCriticalStrikeChance(_) => "quarterstaff_critical_strike_chance_+%",
            Stat::QuarterstaffCriticalStrikeMultiplier(_) => "quarterstaff_critical_strike_multiplier_+",
            Stat::QuarterstaffDamage(_) => "quarterstaff_damage_+%",
            Stat::QuarterstaffDazeBuildUp(_) => "quarterstaff_daze_build_up_+%",
            Stat::QuarterstaffHitDamageFreezeMultiplier(_) => "quarterstaff_hit_damage_freeze_multiplier_+%",
            Stat::QuarterstaffHitDamageStunMultiplier(_) => "quarterstaff_hit_damage_stun_multiplier_+%",
            Stat::QuarterstaffSkillsThatConsumePowerChargesCountAsConsumingXAdditionalPowerCharges(_) => "quarterstaff_skills_that_consume_power_charges_count_as_consuming_x_additional_power_charges",
            Stat::QuiverModEffect(_) => "quiver_mod_effect_+%",
            Stat::RageDecaySpeed(_) => "rage_decay_speed_+%",
            Stat::RageLossDelayMs(_) => "rage_loss_delay_ms",
            Stat::ReapplyEnemyShockOnConsumingEnemyShockChance(_) => "reapply_enemy_shock_on_consuming_enemy_shock_chance_%",
            Stat::Recoup(_) => "recoup_%_elemental_damage_as_energy_shield",
            Stat::RecoupSpeed(_) => "recoup_speed_+%",
            Stat::Recover(_) => "recover_%_maximum_mana_on_charm_use",
            Stat::RecoverMaximumLifeOnEnemyKilledChance(_) => "recover_maximum_life_on_enemy_killed_chance_%",
            Stat::RecoverXLifeOnBlock(_) => "recover_X_life_on_block",
            Stat::ReduceEnemyElementalResistance(_) => "reduce_enemy_elemental_resistance_%",
            Stat::RefreshIgniteDurationOnCriticalStrikeChance(_) => "refresh_ignite_duration_on_critical_strike_chance_%",
            Stat::ReloadSpeed(_) => "reload_speed_+%",
            Stat::RemoveCurseOnManaFlaskUse(_) => "remove_curse_on_mana_flask_use",
            Stat::ResoluteTechnique(_) => "resolute_technique",
            Stat::RestoreLifeAndManaOnWarcry(_) => "restore_life_and_mana_on_warcry_%",
            Stat::ShieldArmour(_) => "shield_armour_+%",
            Stat::ShieldEvasionRating(_) => "shield_evasion_rating_+%",
            Stat::ShockChance(_) => "shock_chance_+%",
            Stat::ShockDuration(_) => "shock_duration_+%",
            Stat::ShockEffect(_) => "shock_effect_+%",
            Stat::SkillAreaOfEffect(_) => "skill_area_of_effect_+%_if_enemy_killed_recently",
            Stat::SkillAreaOfEffectWhenUnarmed(_) => "skill_area_of_effect_when_unarmed_+%",
            Stat::SkillCostBaseLifeEqualToBaseMana(_) => "skill_cost_base_life_equal_to_base_mana",
            Stat::SkillEffectDuration(_) => "skill_effect_duration_+%",
            Stat::SkillSpeed(_) => "skill_speed_+%",
            Stat::SlamAftershockChance(_) => "slam_aftershock_chance_%",
            Stat::SlamSkillAreaOfEffect(_) => "slam_skill_area_of_effect_+%",
            Stat::SlowsHaveNoPotencyOnYou(_) => "slows_have_no_potency_on_you",
            Stat::SmallPassivesEffect(_) => "small_passives_effect_+%",
            Stat::SorceryWard(_) => "sorcery_ward_+%_strength",
            Stat::SpawnDefenderWithTotem(_) => "spawn_defender_with_totem",
            Stat::SpearAttackSpeed(_) => "spear_attack_speed_+%",
            Stat::SpearCriticalStrikeChance(_) => "spear_critical_strike_chance_+%",
            Stat::SpearDamage(_) => "spear_damage_+%",
            Stat::SpellAreaDamage(_) => "spell_area_damage_+%",
            Stat::SpellAreaOfEffect(_) => "spell_area_of_effect_+%",
            Stat::SpellCriticalStrikeChance(_) => "spell_critical_strike_chance_+%",
            Stat::SpellCriticalStrikeMultiplier(_) => "spell_critical_strike_multiplier_+_while_wielding_staff",
            Stat::SpellDamage(_) => "spell_damage_+%",
            Stat::SpellSkillGemLevel(_) => "spell_skill_gem_level_+",
            Stat::SpellSkillProjectileSpeed(_) => "spell_skill_projectile_speed_+%",
            Stat::SpellStaffDamage(_) => "spell_staff_damage_+%",
            Stat::Spirit(_) => "spirit_+%",
            Stat::StaffAttackAreaOfEffect(_) => "staff_attack_area_of_effect_+%",
            Stat::StormweaverChillEffect(_) => "stormweaver_chill_effect_+%_final",
            Stat::StormweaverShockDuration(_) => "stormweaver_shock_duration_+%_final",
            Stat::Strength(_) => "strength_+%",
            Stat::StunThreshold(_) => "stun_threshold_+_from_%_base_armour_from_equipment",
            Stat::StunThresholdBasedOn(_) => "stun_threshold_based_on_%_energy_shield_instead_of_life",
            Stat::SummonTotemCastSpeed(_) => "summon_totem_cast_speed_+%",
            Stat::SupportAnticipationChargeGainFrequency(_) => "support_anticipation_charge_gain_frequency_+%",
            Stat::SupportGemLimit(_) => "support_gem_limit_+",
            Stat::SwordAttackSpeed(_) => "sword_attack_speed_+%",
            Stat::SwordDamage(_) => "sword_damage_+%",
            Stat::TabletEffect(_) => "tablet_effect_+%_when_opening_a_map",
            Stat::ThornsDamage(_) => "thorns_damage_+%_if_blocked_recently",
            Stat::TitanDamage(_) => "titan_damage_+%_final_against_heavy_stunned_enemies",
            Stat::TitanExpandedMainInventory(_) => "titan_expanded_main_inventory",
            Stat::TitanMaximumLife(_) => "titan_maximum_life_+%_final",
            Stat::TotemAdditionalPhysicalDamageReduction(_) => "totem_additional_physical_damage_reduction_%",
            Stat::TotemDamage(_) => "totem_damage_+%",
            Stat::TotemDuration(_) => "totem_duration_+%",
            Stat::TotemElementalResistance(_) => "totem_elemental_resistance_%",
            Stat::TotemLife(_) => "totem_life_+%",
            Stat::TotemPlacementRange(_) => "totem_placement_range_+%",
            Stat::TotemSkillAttackSpeed(_) => "totem_skill_attack_speed_+%",
            Stat::TotemSkillCastSpeed(_) => "totem_skill_cast_speed_+%",
            Stat::TotemsAttackSpeed(_) => "totems_attack_speed_+%_per_active_totem",
            Stat::TotemsRegenerate(_) => "totems_regenerate_%_life_per_minute",
            Stat::TotemsSpellsCastSpeed(_) => "totems_spells_cast_speed_+%_per_active_totem",
            Stat::TrapCriticalStrikeChance(_) => "trap_critical_strike_chance_+%",
            Stat::TrapDamage(_) => "trap_damage_+%",
            Stat::TrapThrowingSpeed(_) => "trap_throwing_speed_+%",
            Stat::TriggerElementalStormOnCrit(_) => "trigger_elemental_storm_on_crit",
            Stat::TriggerSkillsRefundHalfEnergySpentChance(_) => "trigger_skills_refund_half_energy_spent_chance_%",
            Stat::TriggerWildStrikeOnAttackCrit(_) => "trigger_wild_strike_on_attack_crit",
            Stat::TriggeredSpellSpellDamage(_) => "triggered_spell_spell_damage_+%",
            Stat::TwoHandedMeleeAccuracyRating(_) => "two_handed_melee_accuracy_rating_+%",
            Stat::UnaffectedByChillDuringDodgeRoll(_) => "unaffected_by_chill_during_dodge_roll",
            Stat::UnaffectedByChillWhileManaLeeching(_) => "unaffected_by_chill_while_mana_leeching",
            Stat::UnarmedAttackSkillMeleeDashRange(_) => "unarmed_attack_skill_melee_dash_range_+%",
            Stat::UnarmedAttackSpeed(_) => "unarmed_attack_speed_+%",
            Stat::WarbringerOverbreakArmour(_) => "warbringer_overbreak_armour",
            Stat::WarcriesBypassCooldown(_) => "warcries_bypass_cooldown",
            Stat::WarcryCooldownSpeed(_) => "warcry_cooldown_speed_+%",
            Stat::WarcryDamage(_) => "warcry_damage_+%",
            Stat::WarcryEmpowersNextXMeleeAttacks(_) => "warcry_empowers_next_x_melee_attacks",
            Stat::WarcrySkillAreaOfEffect(_) => "warcry_skill_area_of_effect_+%",
            Stat::WarcrySpeed(_) => "warcry_speed_+%",
            Stat::WeaponSwapSpeed(_) => "weapon_swap_speed_+%",
            Stat::WhileUsingSwordReduceEnemyBlock(_) => "while_using_sword_reduce_enemy_block_%",
            Stat::WitchPassiveMaximumLightningDamage(_) => "witch_passive_maximum_lightning_damage_+%_final",
            Stat::WitchhunterArmourEvasion(_) => "witchhunter_armour_evasion_+%_final",
            Stat::WitchhunterUpToDamage(_) => "witchhunter_up_to_damage_+%_final_against_targets_with_missing_focus",
            Stat::WitheredEffect(_) => "withered_effect_+%",
            Stat::WorldMapUniqueMapsVisibleXUnitsBeyondLightRadius(_) => "world_map_unique_maps_visible_X_units_beyond_light_radius",
            Stat::X(_) => "x%_faster_start_of_sorcery_ward_recovery",
            Stat::YouAndAlliesInPresenceAllDamageCanIgniteWhileNotOnLowInfernalFlame(_) => "you_and_allies_in_presence_all_damage_can_ignite_while_not_on_low_infernal_flame",
            Stat::YouAndAlliesInPresenceNonSkillBaseAllDamage(_) => "you_and_allies_in_presence_non_skill_base_all_damage_%_to_gain_as_fire_while_on_high_infernal_flame",
            Stat::YouGain(_) => "you_gain_%_life_when_one_of_your_minions_is_revived",
            Stat::Unknown(s, _) => s.as_str(),
        }
    }
}

impl<'de> Deserialize<'de> for Stat {
    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>
    where D: Deserializer<'de>,
    {
        let key_value: HashMap<String, u16> = Deserialize::deserialize(deserializer)?;
        for (k, v) in key_value.into_iter() {
            return Ok(match k.as_str() {
                "accuracy_rating_+%" => Stat::AccuracyRating(Plus(v as f32)),
                "accuracy_rating_vs_bleeding_enemies" => Stat::AccuracyRatingVsBleedingEnemies(Other(v as f32)),
                "accuracy_rating_while_dual_wielding_+%" => Stat::AccuracyRatingWhileDualWielding(Plus(v as f32)),
                "additional_all_attributes" => Stat::AdditionalAllAttributes(Other(v as f32)),
                "additional_critical_strike_chance_permyriad_with_herald_skills" => Stat::AdditionalCriticalStrikeChancePermyriadWithHeraldSkills(Other(v as f32)),
                "additional_maximum_all_elemental_resistances_%" => Stat::AdditionalMaximumAllElementalResistances(Other(v as f32)),
                "additional_physical_damage_reduction_%_per_jade" => Stat::AdditionalPhysicalDamageReduction(Other(v as f32)),
                "additive_armour_modifiers_apply_to_energy_shield_recharge_rate_at_%_value" => Stat::AdditiveArmourModifiersApplyToEnergyShieldRechargeRateAt(Other(v as f32)),
                "aftershock_area_of_effect_+%" => Stat::AftershockAreaOfEffect(Plus(v as f32)),
                "aggravate_bleeding_older_than_ms_on_hit" => Stat::AggravateBleedingOlderThanMsOnHit(Other(v as f32)),
                "aggravate_bleeding_on_attack_crit_chance_%" => Stat::AggravateBleedingOnAttackCritChance(Other(v as f32)),
                "aggravate_bleeding_on_exerted_attack_hit_chance_%" => Stat::AggravateBleedingOnExertedAttackHitChance(Other(v as f32)),
                "aggravate_bleeding_when_inflicted_vs_enemies_on_jagged_ground_chance_%" => Stat::AggravateBleedingWhenInflictedVsEnemiesOnJaggedGroundChance(Other(v as f32)),
                "ailment_chance_+%" => Stat::AilmentChance(Plus(v as f32)),
                "ailment_effect_+%" => Stat::AilmentEffect(Plus(v as f32)),
                "ailment_threshold_+_from_lowest_of_base_boots_evasion_rating_and_armour" => Stat::AilmentThreshold(Plus(v as f32)),
                "all_attributes_+%" => Stat::AllAttributes(Plus(v as f32)),
                "all_damage_can_chill" => Stat::AllDamageCanChill(Other(v as f32)),
                "all_damage_can_shock" => Stat::AllDamageCanShock(Other(v as f32)),
                "all_skill_gem_level_+" => Stat::AllSkillGemLevel(Plus(v as f32)),
                "all_skill_gem_quality_+" => Stat::AllSkillGemQuality(Plus(v as f32)),
                "allies_in_presence_accuracy_rating" => Stat::AlliesInPresenceAccuracyRating(Other(v as f32)),
                "allies_in_presence_attack_speed_+%" => Stat::AlliesInPresenceAttackSpeed(Plus(v as f32)),
                "allies_in_presence_life_regeneration_rate_per_minute_equal_to_your_maximum_life_%" => Stat::AlliesInPresenceLifeRegenerationRatePerMinuteEqualToYourMaximumLife(Other(v as f32)),
                "ancestral_slam_every_other_slam" => Stat::AncestralSlamEveryOtherSlam(Other(v as f32)),
                "arcane_surge_effect_on_self_+%" => Stat::ArcaneSurgeEffectOnSelf(Plus(v as f32)),
                "area_damage_+%" => Stat::AreaDamage(Plus(v as f32)),
                "area_of_effect_+%_if_have_stunned_an_enemy_recently" => Stat::AreaOfEffect(Plus(v as f32)),
                "area_skill_knockback_chance_%" => Stat::AreaSkillKnockbackChance(Other(v as f32)),
                "armour_+%_if_you_havent_been_hit_recently" => Stat::Armour(Plus(v as f32)),
                "armour_and_evasion_on_low_life_+%" => Stat::ArmourAndEvasionOnLowLife(Plus(v as f32)),
                "armour_break_%_of_armour_on_heavy_stunning" => Stat::ArmourBreak(Other(v as f32)),
                "armour_break_amount_+%" => Stat::ArmourBreakAmount(Plus(v as f32)),
                "armour_break_damage_%_dealt_as_armour_break" => Stat::ArmourBreakDamage(Other(v as f32)),
                "armour_break_duration_+%" => Stat::ArmourBreakDuration(Plus(v as f32)),
                "armour_break_equal_to_%_physical_damage_dealt_on_critical_strike_with_spells" => Stat::ArmourBreakEqualTo(Other(v as f32)),
                "armour_evasion_+%_while_leeching" => Stat::ArmourEvasion(Plus(v as f32)),
                "arrow_base_number_of_targets_to_pierce" => Stat::ArrowBaseNumberOfTargetsToPierce(Other(v as f32)),
                "arrow_critical_strike_chance_+%_max_as_distance_travelled_increases" => Stat::ArrowCriticalStrikeChance(Plus(v as f32)),
                "arrow_speed_additive_modifiers_also_apply_to_bow_damage" => Stat::ArrowSpeedAdditiveModifiersAlsoApplyToBowDamage(Other(v as f32)),
                "ascendancy_beidats_gaze_mana_+_per_X_maximum_life" => Stat::AscendancyBeidatsGazeMana(Plus(v as f32)),
                "ascendancy_beidats_hand_energy_shield_+_per_X_maximum_life" => Stat::AscendancyBeidatsHandEnergyShield(Plus(v as f32)),
                "ascendancy_beidats_will_spirit_+_per_X_maximum_life" => Stat::AscendancyBeidatsWillSpirit(Plus(v as f32)),
                "ascendancy_chronomancer_apex_of_the_moment_base_slow_aura_value" => Stat::AscendancyChronomancerApexOfTheMomentBaseSlowAuraValue(Other(v as f32)),
                "ascendancy_energy_generated_+%_final" => Stat::AscendancyEnergyGenerated(Plus(v as f32)),
                "ascendancy_pathfinder_flask_charges_gained_+%_final" => Stat::AscendancyPathfinderFlaskChargesGained(Plus(v as f32)),
                "ascendancy_titan_damage_reduction_rating_from_body_armour_+%_final" => Stat::AscendancyTitanDamageReductionRatingFromBodyArmour(Plus(v as f32)),
                "ascendancy_warbringer_block_chance_+%_final" => Stat::AscendancyWarbringerBlockChance(Plus(v as f32)),
                "atlas_keystone_corruption_roulette" => Stat::AtlasKeystoneCorruptionRoulette(Other(v as f32)),
                "atlas_keystone_extreme_archaeology" => Stat::AtlasKeystoneExtremeArchaeology(Other(v as f32)),
                "atlas_keystone_prefix_or_suffix_mod_effect_+%_final" => Stat::AtlasKeystonePrefixOrSuffixModEffect(Plus(v as f32)),
                "attack_additional_critical_strike_chance_permyriad" => Stat::AttackAdditionalCriticalStrikeChancePermyriad(Other(v as f32)),
                "attack_and_cast_speed_+%_with_elemental_skills" => Stat::AttackAndCastSpeed(Plus(v as f32)),
                "attack_area_damage_+%" => Stat::AttackAreaDamage(Plus(v as f32)),
                "attack_area_of_effect_+%" => Stat::AttackAreaOfEffect(Plus(v as f32)),
                "attack_critical_strike_chance_+%" => Stat::AttackCriticalStrikeChance(Plus(v as f32)),
                "attack_critical_strike_multiplier_+" => Stat::AttackCriticalStrikeMultiplier(Plus(v as f32)),
                "attack_damage_+%" => Stat::AttackDamage(Plus(v as f32)),
                "attack_damage_vs_bleeding_enemies_+%" => Stat::AttackDamageVsBleedingEnemies(Plus(v as f32)),
                "attack_mana_cost_+%" => Stat::AttackManaCost(Plus(v as f32)),
                "attack_skills_additional_totems_allowed" => Stat::AttackSkillsAdditionalTotemsAllowed(Other(v as f32)),
                "attack_skills_damage_+%_while_holding_shield" => Stat::AttackSkillsDamage(Plus(v as f32)),
                "attack_speed_+%" => Stat::AttackSpeed(Plus(v as f32)),
                "attack_speed_while_dual_wielding_+%" => Stat::AttackSpeedWhileDualWielding(Plus(v as f32)),
                "attacks_chance_to_blind_on_hit_%" => Stat::AttacksChanceToBlindOnHit(Other(v as f32)),
                "aura_effect_+%" => Stat::AuraEffect(Plus(v as f32)),
                "axe_attack_speed_+%" => Stat::AxeAttackSpeed(Plus(v as f32)),
                "axe_damage_+%" => Stat::AxeDamage(Plus(v as f32)),
                "base_aggravate_bleeding_on_attack_hit_chance_%" => Stat::BaseAggravateBleedingOnAttackHitChance(Other(v as f32)),
                "base_all_ailment_duration_on_self_+%" => Stat::BaseAllAilmentDurationOnSelf(Plus(v as f32)),
                "base_armour_%_applies_to_fire_damage" => Stat::BaseArmour(Other(v as f32)),
                "base_attack_damage_penetrates_elemental_resist_%" => Stat::BaseAttackDamagePenetratesElementalResist(Other(v as f32)),
                "base_bleed_duration_+%" => Stat::BaseBleedDuration(Plus(v as f32)),
                "base_bleeding_effect_+%" => Stat::BaseBleedingEffect(Plus(v as f32)),
                "base_block_%_damage_taken" => Stat::BaseBlock(Other(v as f32)),
                "base_body_armour_permyriad_to_gain_as_physical_thorns_damage" => Stat::BaseBodyArmourPermyriadToGainAsPhysicalThornsDamage(Other(v as f32)),
                "base_cast_speed_+%" => Stat::BaseCastSpeed(Plus(v as f32)),
                "base_chance_to_inflict_bleeding_%" => Stat::BaseChanceToInflictBleeding(Other(v as f32)),
                "base_chance_to_not_consume_corpse_%" => Stat::BaseChanceToNotConsumeCorpse(Other(v as f32)),
                "base_chance_to_pierce_%" => Stat::BaseChanceToPierce(Other(v as f32)),
                "base_chance_to_poison_on_hit_%" => Stat::BaseChanceToPoisonOnHit(Other(v as f32)),
                "base_chaos_damage_resistance_%" => Stat::BaseChaosDamageResistance(Other(v as f32)),
                "base_cold_damage_resistance_%" => Stat::BaseColdDamageResistance(Other(v as f32)),
                "base_cooldown_speed_+%" => Stat::BaseCooldownSpeed(Plus(v as f32)),
                "base_cost_+%" => Stat::BaseCost(Plus(v as f32)),
                "base_critical_strike_multiplier_+" => Stat::BaseCriticalStrikeMultiplier(Plus(v as f32)),
                "base_curse_duration_+%" => Stat::BaseCurseDuration(Plus(v as f32)),
                "base_damage_removed_from_mana_before_life_%" => Stat::BaseDamageRemovedFromManaBeforeLife(Other(v as f32)),
                "base_damaging_ailment_effect_+%" => Stat::BaseDamagingAilmentEffect(Plus(v as f32)),
                "base_darkness" => Stat::BaseDarkness(Other(v as f32)),
                "base_darkness_refresh_rate_ms" => Stat::BaseDarknessRefreshRateMs(Other(v as f32)),
                "base_debuff_slow_magnitude_+%" => Stat::BaseDebuffSlowMagnitude(Plus(v as f32)),
                "base_dexterity" => Stat::BaseDexterity(Other(v as f32)),
                "base_dexterity_and_intelligence" => Stat::BaseDexterityAndIntelligence(Other(v as f32)),
                "base_elemental_status_ailment_duration_+%" => Stat::BaseElementalStatusAilmentDuration(Plus(v as f32)),
                "base_enemy_critical_strike_chance_+%_against_self" => Stat::BaseEnemyCriticalStrikeChance(Plus(v as f32)),
                "base_evasion_rating" => Stat::BaseEvasionRating(Other(v as f32)),
                "base_fire_damage_resistance_%" => Stat::BaseFireDamageResistance(Other(v as f32)),
                "base_frenzy_charge_duration_+%" => Stat::BaseFrenzyChargeDuration(Plus(v as f32)),
                "base_ignite_effect_+%" => Stat::BaseIgniteEffect(Plus(v as f32)),
                "base_intelligence" => Stat::BaseIntelligence(Other(v as f32)),
                "base_life_gained_on_enemy_death" => Stat::BaseLifeGainedOnEnemyDeath(Other(v as f32)),
                "base_life_leech_amount_+%" => Stat::BaseLifeLeechAmount(Plus(v as f32)),
                "base_life_leech_does_not_stop_at_full_life" => Stat::BaseLifeLeechDoesNotStopAtFullLife(Other(v as f32)),
                "base_life_leech_from_all_spell_damage_permyriad" => Stat::BaseLifeLeechFromAllSpellDamagePermyriad(Other(v as f32)),
                "base_life_leech_rate_+%" => Stat::BaseLifeLeechRate(Plus(v as f32)),
                "base_mana_cost_-%" => Stat::BaseManaCost(Minus(v as f32)),
                "base_mana_leech_amount_+%" => Stat::BaseManaLeechAmount(Plus(v as f32)),
                "base_mana_leech_is_instant" => Stat::BaseManaLeechIsInstant(Other(v as f32)),
                "base_maximum_chaos_damage_resistance_%" => Stat::BaseMaximumChaosDamageResistance(Other(v as f32)),
                "base_maximum_cold_damage_resistance_%" => Stat::BaseMaximumColdDamageResistance(Other(v as f32)),
                "base_maximum_energy_shield" => Stat::BaseMaximumEnergyShield(Other(v as f32)),
                "base_maximum_fire_damage_resistance_%" => Stat::BaseMaximumFireDamageResistance(Other(v as f32)),
                "base_maximum_life" => Stat::BaseMaximumLife(Other(v as f32)),
                "base_maximum_lightning_damage_resistance_%" => Stat::BaseMaximumLightningDamageResistance(Other(v as f32)),
                "base_maximum_mana" => Stat::BaseMaximumMana(Other(v as f32)),
                "base_movement_velocity_+%" => Stat::BaseMovementVelocity(Plus(v as f32)),
                "base_penetrate_elemental_resistances_%" => Stat::BasePenetrateElementalResistances(Other(v as f32)),
                "base_physical_damage_reduction_rating" => Stat::BasePhysicalDamageReductionRating(Other(v as f32)),
                "base_poison_duration_+%" => Stat::BasePoisonDuration(Plus(v as f32)),
                "base_poison_effect_+%" => Stat::BasePoisonEffect(Plus(v as f32)),
                "base_projectile_speed_+%" => Stat::BaseProjectileSpeed(Plus(v as f32)),
                "base_reduce_enemy_cold_resistance_%" => Stat::BaseReduceEnemyColdResistance(Other(v as f32)),
                "base_reduce_enemy_fire_resistance_%" => Stat::BaseReduceEnemyFireResistance(Other(v as f32)),
                "base_reduce_enemy_lightning_resistance_%" => Stat::BaseReduceEnemyLightningResistance(Other(v as f32)),
                "base_resist_all_elements_%" => Stat::BaseResistAllElements(Other(v as f32)),
                "base_self_critical_strike_multiplier_-%" => Stat::BaseSelfCriticalStrikeMultiplier(Minus(v as f32)),
                "base_self_freeze_duration_-%" => Stat::BaseSelfFreezeDuration(Minus(v as f32)),
                "base_self_ignite_duration_-%" => Stat::BaseSelfIgniteDuration(Minus(v as f32)),
                "base_self_shock_duration_-%" => Stat::BaseSelfShockDuration(Minus(v as f32)),
                "base_should_have_arcane_surge_from_stat" => Stat::BaseShouldHaveArcaneSurgeFromStat(Other(v as f32)),
                "base_skill_area_of_effect_+%" => Stat::BaseSkillAreaOfEffect(Plus(v as f32)),
                "base_skill_cost_life_instead_of_mana_%" => Stat::BaseSkillCostLifeInsteadOfMana(Other(v as f32)),
                "base_slow_potency_+%" => Stat::BaseSlowPotency(Plus(v as f32)),
                "base_spell_critical_strike_chance_override_permyriad" => Stat::BaseSpellCriticalStrikeChanceOverridePermyriad(Other(v as f32)),
                "base_spell_critical_strike_multiplier_+" => Stat::BaseSpellCriticalStrikeMultiplier(Plus(v as f32)),
                "base_strength" => Stat::BaseStrength(Other(v as f32)),
                "base_strength_and_dexterity" => Stat::BaseStrengthAndDexterity(Other(v as f32)),
                "base_strength_and_intelligence" => Stat::BaseStrengthAndIntelligence(Other(v as f32)),
                "base_stun_recovery_+%" => Stat::BaseStunRecovery(Plus(v as f32)),
                "base_thorns_critical_strike_chance" => Stat::BaseThornsCriticalStrikeChance(Other(v as f32)),
                "base_thorns_critical_strike_multiplier_+" => Stat::BaseThornsCriticalStrikeMultiplier(Plus(v as f32)),
                "bleed_on_crit_%" => Stat::BleedOnCrit(Other(v as f32)),
                "blind_effect_+%" => Stat::BlindEffect(Plus(v as f32)),
                "blind_enemies_when_they_stun_you" => Stat::BlindEnemiesWhenTheyStunYou(Other(v as f32)),
                "block_chance_+%" => Stat::BlockChance(Plus(v as f32)),
                "block_chance_from_equipped_shield_is_%" => Stat::BlockChanceFromEquippedShieldIs(Other(v as f32)),
                "block_recovery_+%" => Stat::BlockRecovery(Plus(v as f32)),
                "body_armour_+%" => Stat::BodyArmour(Plus(v as f32)),
                "body_armour_evasion_rating_+%" => Stat::BodyArmourEvasionRating(Plus(v as f32)),
                "bow_accuracy_rating_+%" => Stat::BowAccuracyRating(Plus(v as f32)),
                "bow_attack_speed_+%" => Stat::BowAttackSpeed(Plus(v as f32)),
                "bow_critical_strike_multiplier_+" => Stat::BowCriticalStrikeMultiplier(Plus(v as f32)),
                "bow_damage_+%" => Stat::BowDamage(Plus(v as f32)),
                "breach_flame_effects_doubled" => Stat::BreachFlameEffectsDoubled(Other(v as f32)),
                "buff_time_passed_+%_only_buff_category" => Stat::BuffTimePassed(Plus(v as f32)),
                "buildup_jade_every_x_ms" => Stat::BuildupJadeEveryXMs(Other(v as f32)),
                "can_apply_additional_chill" => Stat::CanApplyAdditionalChill(Other(v as f32)),
                "can_apply_additional_shock" => Stat::CanApplyAdditionalShock(Other(v as f32)),
                "can_block_all_hits_while_shield_is_lowered" => Stat::CanBlockAllHitsWhileShieldIsLowered(Other(v as f32)),
                "cannot_be_blinded_while_on_full_life" => Stat::CannotBeBlindedWhileOnFullLife(Other(v as f32)),
                "cannot_gain_spirit_from_equipment" => Stat::CannotGainSpiritFromEquipment(Other(v as f32)),
                "cannot_recharge_energy_shield" => Stat::CannotRechargeEnergyShield(Other(v as f32)),
                "cast_speed_+%_when_on_full_life" => Stat::CastSpeed(Plus(v as f32)),
                "cast_speed_for_cold_skills_+%" => Stat::CastSpeedForColdSkills(Plus(v as f32)),
                "chance_%_to_create_shocking_ground_on_shock" => Stat::Chance(Other(v as f32)),
                "chance_for_skills_to_avoid_cooldown_%" => Stat::ChanceForSkillsToAvoidCooldown(Other(v as f32)),
                "chance_to_double_armour_effect_on_hit_%" => Stat::ChanceToDoubleArmourEffectOnHit(Other(v as f32)),
                "chance_to_fork_extra_projectile_%" => Stat::ChanceToForkExtraProjectile(Other(v as f32)),
                "chance_to_gain_onslaught_on_kill_with_axes_%" => Stat::ChanceToGainOnslaughtOnKillWithAxes(Other(v as f32)),
                "chance_to_poison_on_critical_strike_with_dagger_%" => Stat::ChanceToPoisonOnCriticalStrikeWithDagger(Other(v as f32)),
                "chance_to_summon_two_totems_%" => Stat::ChanceToSummonTwoTotems(Other(v as f32)),
                "chaos_damage_+%" => Stat::ChaosDamage(Plus(v as f32)),
                "chaos_damage_resistance_is_doubled" => Stat::ChaosDamageResistanceIsDoubled(Other(v as f32)),
                "chaos_skill_gem_level_+" => Stat::ChaosSkillGemLevel(Plus(v as f32)),
                "charges_gained_+%" => Stat::ChargesGained(Plus(v as f32)),
                "charm_charges_gained_+%" => Stat::CharmChargesGained(Plus(v as f32)),
                "charm_charges_used_+%" => Stat::CharmChargesUsed(Plus(v as f32)),
                "charm_duration_+%" => Stat::CharmDuration(Plus(v as f32)),
                "charm_effect_+%" => Stat::CharmEffect(Plus(v as f32)),
                "charms_%_chance_on_use_to_use_another_charm_without_consuming_charges" => Stat::Charms(Other(v as f32)),
                "chill_and_freeze_duration_+%" => Stat::ChillAndFreezeDuration(Plus(v as f32)),
                "chill_duration_+%" => Stat::ChillDuration(Plus(v as f32)),
                "chill_effect_+%" => Stat::ChillEffect(Plus(v as f32)),
                "chill_effectiveness_on_self_+%" => Stat::ChillEffectivenessOnSelf(Plus(v as f32)),
                "claw_accuracy_rating_+%" => Stat::ClawAccuracyRating(Plus(v as f32)),
                "claw_attack_speed_+%" => Stat::ClawAttackSpeed(Plus(v as f32)),
                "claw_critical_strike_chance_+%" => Stat::ClawCriticalStrikeChance(Plus(v as f32)),
                "claw_damage_+%" => Stat::ClawDamage(Plus(v as f32)),
                "cold_damage_+%" => Stat::ColdDamage(Plus(v as f32)),
                "cold_exposure_effect_+%" => Stat::ColdExposureEffect(Plus(v as f32)),
                "cold_exposure_you_inflict_lowers_cold_resistance_by_extra_%" => Stat::ColdExposureYouInflictLowersColdResistanceByExtra(Other(v as f32)),
                "cold_hit_and_dot_damage_%_taken_as_fire" => Stat::ColdHitAndDotDamage(Other(v as f32)),
                "cold_skill_gem_level_+" => Stat::ColdSkillGemLevel(Plus(v as f32)),
                "convert_all_life_leech_to_energy_shield_leech" => Stat::ConvertAllLifeLeechToEnergyShieldLeech(Other(v as f32)),
                "corpses_in_your_presence_explode_dealing_%_maximum_life_physical_damage_on_warcry" => Stat::CorpsesInYourPresenceExplodeDealing(Other(v as f32)),
                "create_chilling_ground_on_freeze" => Stat::CreateChillingGroundOnFreeze(Other(v as f32)),
                "critical_hit_bleeding_effect_+%" => Stat::CriticalHitBleedingEffect(Plus(v as f32)),
                "critical_hit_damage_bonus_+%_if_consumed_power_charge_recently" => Stat::CriticalHitDamageBonus(Plus(v as f32)),
                "critical_hit_damaging_ailment_effect_+%" => Stat::CriticalHitDamagingAilmentEffect(Plus(v as f32)),
                "critical_hit_ignite_effect_+%" => Stat::CriticalHitIgniteEffect(Plus(v as f32)),
                "critical_strike_chance_+%" => Stat::CriticalStrikeChance(Plus(v as f32)),
                "critical_strike_chance_against_enemies_on_full_life_+%" => Stat::CriticalStrikeChanceAgainstEnemiesOnFullLife(Plus(v as f32)),
                "critical_strike_chance_while_dual_wielding_+%" => Stat::CriticalStrikeChanceWhileDualWielding(Plus(v as f32)),
                "critical_strike_multiplier_+_if_have_not_dealt_critical_strike_recently" => Stat::CriticalStrikeMultiplier(Plus(v as f32)),
                "critical_strike_multiplier_vs_enemies_on_full_life_+" => Stat::CriticalStrikeMultiplierVsEnemiesOnFullLife(Plus(v as f32)),
                "critical_strike_multiplier_with_dagger_+" => Stat::CriticalStrikeMultiplierWithDagger(Plus(v as f32)),
                "critical_strikes_ignore_positive_elemental_resistances" => Stat::CriticalStrikesIgnorePositiveElementalResistances(Other(v as f32)),
                "crossbow_attack_%_chance_to_not_consume_ammo" => Stat::CrossbowAttack(Other(v as f32)),
                "crossbow_attack_speed_+%" => Stat::CrossbowAttackSpeed(Plus(v as f32)),
                "crossbow_critical_strike_chance_+%" => Stat::CrossbowCriticalStrikeChance(Plus(v as f32)),
                "crossbow_critical_strike_multiplier_+" => Stat::CrossbowCriticalStrikeMultiplier(Plus(v as f32)),
                "crossbow_damage_+%" => Stat::CrossbowDamage(Plus(v as f32)),
                "crushing_blow" => Stat::CrushingBlow(Other(v as f32)),
                "culling_strike_threshold_+%" => Stat::CullingStrikeThreshold(Plus(v as f32)),
                "culling_strike_vs_marked_enemy" => Stat::CullingStrikeVsMarkedEnemy(Other(v as f32)),
                "curse_area_of_effect_+%" => Stat::CurseAreaOfEffect(Plus(v as f32)),
                "curse_delay_+%" => Stat::CurseDelay(Plus(v as f32)),
                "curse_effect_+%" => Stat::CurseEffect(Plus(v as f32)),
                "curse_effect_on_self_+%" => Stat::CurseEffectOnSelf(Plus(v as f32)),
                "curses_never_expire" => Stat::CursesNeverExpire(Other(v as f32)),
                "dagger_attack_speed_+%" => Stat::DaggerAttackSpeed(Plus(v as f32)),
                "dagger_critical_strike_chance_+%" => Stat::DaggerCriticalStrikeChance(Plus(v as f32)),
                "dagger_damage_+%" => Stat::DaggerDamage(Plus(v as f32)),
                "damage_+%_against_enemies_with_fully_broken_armour" => Stat::Damage(Plus(v as f32)),
                "damage_removed_from_your_nearest_totem_before_life_or_es_%" => Stat::DamageRemovedFromYourNearestTotemBeforeLifeOrEs(Other(v as f32)),
                "damage_taken_+%_final_per_tailwind" => Stat::DamageTaken(Plus(v as f32)),
                "damage_taken_goes_to_mana_%" => Stat::DamageTakenGoesToMana(Other(v as f32)),
                "damage_vs_enemies_on_low_life_+%" => Stat::DamageVsEnemiesOnLowLife(Plus(v as f32)),
                "damage_vs_shocked_enemies_+%" => Stat::DamageVsShockedEnemies(Plus(v as f32)),
                "damage_while_dual_wielding_+%" => Stat::DamageWhileDualWielding(Plus(v as f32)),
                "damage_with_hits_is_lucky_vs_enemies_on_low_life" => Stat::DamageWithHitsIsLuckyVsEnemiesOnLowLife(Other(v as f32)),
                "damage_with_hits_is_lucky_vs_heavy_stunned_enemies" => Stat::DamageWithHitsIsLuckyVsHeavyStunnedEnemies(Other(v as f32)),
                "damaging_ailment_duration_+%" => Stat::DamagingAilmentDuration(Plus(v as f32)),
                "damaging_ailments_deal_damage_+%_faster" => Stat::DamagingAilmentsDealDamage(Plus(v as f32)),
                "darkness_per_level" => Stat::DarknessPerLevel(Other(v as f32)),
                "darkness_refresh_rate_+%" => Stat::DarknessRefreshRate(Plus(v as f32)),
                "daze_build_up_+%" => Stat::DazeBuildUp(Plus(v as f32)),
                "daze_duration_+%" => Stat::DazeDuration(Plus(v as f32)),
                "deadeye_accuracy_unaffected_by_range" => Stat::DeadeyeAccuracyUnaffectedByRange(Other(v as f32)),
                "deadeye_movement_speed_penalty_+%_final_while_performing_action" => Stat::DeadeyeMovementSpeedPenalty(Plus(v as f32)),
                "deadeye_projectile_damage_+%_final_max_as_distance_travelled_increases" => Stat::DeadeyeProjectileDamage(Plus(v as f32)),
                "debuff_time_passed_+%" => Stat::DebuffTimePassed(Plus(v as f32)),
                "decimating_strike" => Stat::DecimatingStrike(Other(v as f32)),
                "defences_+%_while_wielding_staff" => Stat::Defences(Plus(v as f32)),
                "defend_with_%_armour_against_ranged_attacks" => Stat::DefendWith(Other(v as f32)),
                "dexterity_+%" => Stat::Dexterity(Plus(v as f32)),
                "display_passive_attribute_text" => Stat::DisplayPassiveAttributeText(Other(v as f32)),
                "distance_scaled_accuracy_rating_penalty_+%" => Stat::DistanceScaledAccuracyRatingPenalty(Plus(v as f32)),
                "double_number_of_poison_you_can_inflict" => Stat::DoubleNumberOfPoisonYouCanInflict(Other(v as f32)),
                "double_tablet_effect_chance_%_when_opening_a_map" => Stat::DoubleTabletEffectChance(Other(v as f32)),
                "drain_focus_%_of_damage_dealt_on_hit" => Stat::DrainFocus(Other(v as f32)),
                "dummy_stat_display_nothing" => Stat::DummyStatDisplayNothing(Other(v as f32)),
                "electrocuted_enemy_damage_taken_+%" => Stat::ElectrocutedEnemyDamageTaken(Plus(v as f32)),
                "elemental_damage_+%" => Stat::ElementalDamage(Plus(v as f32)),
                "elemental_damage_can_inflict_bleeding" => Stat::ElementalDamageCanInflictBleeding(Other(v as f32)),
                "elemental_damage_taken_%_recouped_as_life" => Stat::ElementalDamageTaken(Other(v as f32)),
                "elemental_damage_with_attack_skills_+%" => Stat::ElementalDamageWithAttackSkills(Plus(v as f32)),
                "elemental_storm_cooldown_recovery_speed_+%_final" => Stat::ElementalStormCooldownRecoverySpeed(Plus(v as f32)),
                "elementalist_chill_maximum_magnitude_override" => Stat::ElementalistChillMaximumMagnitudeOverride(Other(v as f32)),
                "empowered_attack_damage_+%" => Stat::EmpoweredAttackDamage(Plus(v as f32)),
                "empowered_attack_hit_damage_stun_multiplier_+%" => Stat::EmpoweredAttackHitDamageStunMultiplier(Plus(v as f32)),
                "endurance_charge_duration_+%" => Stat::EnduranceChargeDuration(Plus(v as f32)),
                "enemies_are_maimed_for_x_seconds_after_becoming_unpinned" => Stat::EnemiesAreMaimedForXSecondsAfterBecomingUnpinned(Other(v as f32)),
                "enemies_chaos_resistance_%_while_cursed" => Stat::EnemiesChaosResistance(Other(v as f32)),
                "enemies_cursed_by_you_have_life_regeneration_rate_+%" => Stat::EnemiesCursedByYouHaveLifeRegenerationRate(Plus(v as f32)),
                "enemies_in_presence_cooldown_recovery_+%" => Stat::EnemiesInPresenceCooldownRecovery(Plus(v as f32)),
                "enemies_near_marked_enemy_are_blinded" => Stat::EnemiesNearMarkedEnemyAreBlinded(Other(v as f32)),
                "enemies_you_curse_cannot_recharge_energy_shield" => Stat::EnemiesYouCurseCannotRechargeEnergyShield(Other(v as f32)),
                "energy_generated_+%" => Stat::EnergyGenerated(Plus(v as f32)),
                "energy_shield_+%_if_consumed_power_charge_recently" => Stat::EnergyShield(Plus(v as f32)),
                "energy_shield_delay_-%" => Stat::EnergyShieldDelay(Minus(v as f32)),
                "energy_shield_from_focus_+%" => Stat::EnergyShieldFromFocus(Plus(v as f32)),
                "energy_shield_from_helmet_+%" => Stat::EnergyShieldFromHelmet(Plus(v as f32)),
                "energy_shield_gained_on_block" => Stat::EnergyShieldGainedOnBlock(Other(v as f32)),
                "energy_shield_recharge_rate_+%" => Stat::EnergyShieldRechargeRate(Plus(v as f32)),
                "energy_shield_recovery_rate_+%_if_not_hit_recently" => Stat::EnergyShieldRecoveryRate(Plus(v as f32)),
                "evasion_+%_if_hit_recently" => Stat::Evasion(Plus(v as f32)),
                "evasion_and_physical_damage_reduction_rating_+%" => Stat::EvasionAndPhysicalDamageReductionRating(Plus(v as f32)),
                "evasion_rating_+%" => Stat::EvasionRating(Plus(v as f32)),
                "evasion_rating_also_reduces_physical_damage" => Stat::EvasionRatingAlsoReducesPhysicalDamage(Other(v as f32)),
                "expedition_monsters_logbook_chance_+%" => Stat::ExpeditionMonstersLogbookChance(Plus(v as f32)),
                "exposure_you_inflict_lowers_affected_resistance_by_extra_%" => Stat::ExposureYouInflictLowersAffectedResistanceByExtra(Other(v as f32)),
                "extra_damage_rolls_with_lightning_damage_on_non_critical_hits" => Stat::ExtraDamageRollsWithLightningDamageOnNonCriticalHits(Other(v as f32)),
                "faster_bleed_%" => Stat::FasterBleed(Other(v as f32)),
                "faster_burn_%" => Stat::FasterBurn(Other(v as f32)),
                "final_repeat_of_spells_area_of_effect_+%" => Stat::FinalRepeatOfSpellsAreaOfEffect(Plus(v as f32)),
                "fire_damage_+%" => Stat::FireDamage(Plus(v as f32)),
                "fire_exposure_effect_+%" => Stat::FireExposureEffect(Plus(v as f32)),
                "fire_exposure_you_inflict_lowers_fire_resistance_by_extra_%" => Stat::FireExposureYouInflictLowersFireResistanceByExtra(Other(v as f32)),
                "flail_attack_speed_+%" => Stat::FlailAttackSpeed(Plus(v as f32)),
                "flail_critical_strike_chance_+%" => Stat::FlailCriticalStrikeChance(Plus(v as f32)),
                "flail_critical_strike_multiplier_+" => Stat::FlailCriticalStrikeMultiplier(Plus(v as f32)),
                "flail_damage_+%" => Stat::FlailDamage(Plus(v as f32)),
                "flask_charges_gained_+%" => Stat::FlaskChargesGained(Plus(v as f32)),
                "flask_charges_used_+%" => Stat::FlaskChargesUsed(Plus(v as f32)),
                "flask_duration_+%" => Stat::FlaskDuration(Plus(v as f32)),
                "flask_effect_+%" => Stat::FlaskEffect(Plus(v as f32)),
                "flask_life_and_mana_recovery_+%_while_using_charm" => Stat::FlaskLifeAndManaRecovery(Plus(v as f32)),
                "flask_life_and_mana_to_recover_+%" => Stat::FlaskLifeAndManaToRecover(Plus(v as f32)),
                "flask_life_recovery_rate_+%" => Stat::FlaskLifeRecoveryRate(Plus(v as f32)),
                "flask_life_to_recover_+%" => Stat::FlaskLifeToRecover(Plus(v as f32)),
                "flask_mana_charges_used_+%" => Stat::FlaskManaChargesUsed(Plus(v as f32)),
                "flask_mana_to_recover_+%" => Stat::FlaskManaToRecover(Plus(v as f32)),
                "flasks_%_chance_to_not_consume_charges" => Stat::Flasks(Other(v as f32)),
                "focus_decay_%_per_minute" => Stat::FocusDecay(Other(v as f32)),
                "focus_decay_delay_ms" => Stat::FocusDecayDelayMs(Other(v as f32)),
                "freeze_duration_+%" => Stat::FreezeDuration(Plus(v as f32)),
                "freeze_threshold_+%" => Stat::FreezeThreshold(Plus(v as f32)),
                "gain_%_damage_as_chaos_from_unreserved_darkness" => Stat::Gain(Other(v as f32)),
                "gain_accuracy_rating_equal_to_intelligence" => Stat::GainAccuracyRatingEqualToIntelligence(Other(v as f32)),
                "gain_accuracy_rating_equal_to_strength" => Stat::GainAccuracyRatingEqualToStrength(Other(v as f32)),
                "gain_arcane_surge_on_crit_%_chance" => Stat::GainArcaneSurgeOnCrit(Other(v as f32)),
                "gain_endurance_charge_on_heavy_stunning_rare_or_unique_enemy" => Stat::GainEnduranceChargeOnHeavyStunningRareOrUniqueEnemy(Other(v as f32)),
                "gain_guard_flask_charge_when_hit_by_enemy_chance_%" => Stat::GainGuardFlaskChargeWhenHitByEnemyChance(Other(v as f32)),
                "gain_max_rage_on_rage_gain_from_hit_%_chance" => Stat::GainMaxRageOnRageGainFromHit(Other(v as f32)),
                "gain_maximum_endurance_charges_on_endurance_charge_gained_%_chance" => Stat::GainMaximumEnduranceChargesOnEnduranceChargeGained(Other(v as f32)),
                "gain_maximum_frenzy_charges_on_frenzy_charge_gained_%_chance" => Stat::GainMaximumFrenzyChargesOnFrenzyChargeGained(Other(v as f32)),
                "gain_maximum_power_charges_on_power_charge_gained_%_chance" => Stat::GainMaximumPowerChargesOnPowerChargeGained(Other(v as f32)),
                "gain_tailwind_stack_on_skill_use" => Stat::GainTailwindStackOnSkillUse(Other(v as f32)),
                "gain_unbound_ailment_stacks" => Stat::GainUnboundAilmentStacks(Other(v as f32)),
                "gain_x_rage_on_hit_with_axes" => Stat::GainXRageOnHitWithAxes(Other(v as f32)),
                "gain_x_rage_on_melee_hit" => Stat::GainXRageOnMeleeHit(Other(v as f32)),
                "gain_x_rage_when_hit" => Stat::GainXRageWhenHit(Other(v as f32)),
                "gem_requirements_can_be_satisfied_by_highest_attribute" => Stat::GemRequirementsCanBeSatisfiedByHighestAttribute(Other(v as f32)),
                "gemling_double_basic_attribute_bonuses" => Stat::GemlingDoubleBasicAttributeBonuses(Other(v as f32)),
                "gemling_skill_cost_+%_final" => Stat::GemlingSkillCost(Plus(v as f32)),
                "generate_x_charges_for_charms_per_minute" => Stat::GenerateXChargesForCharmsPerMinute(Other(v as f32)),
                "generate_x_charges_for_life_flasks_per_minute" => Stat::GenerateXChargesForLifeFlasksPerMinute(Other(v as f32)),
                "generate_x_charges_for_mana_flasks_per_minute" => Stat::GenerateXChargesForManaFlasksPerMinute(Other(v as f32)),
                "global_chance_to_blind_on_hit_%" => Stat::GlobalChanceToBlindOnHit(Other(v as f32)),
                "global_defences_+%" => Stat::GlobalDefences(Plus(v as f32)),
                "global_gem_attribute_requirements_+%_final_from_gemling" => Stat::GlobalGemAttributeRequirements(Plus(v as f32)),
                "global_item_attribute_requirements_+%" => Stat::GlobalItemAttributeRequirements(Plus(v as f32)),
                "grenade_fuse_duration_+%" => Stat::GrenadeFuseDuration(Plus(v as f32)),
                "grenade_skill_%_chance_to_explode_twice" => Stat::GrenadeSkill(Other(v as f32)),
                "grenade_skill_area_of_effect_+%" => Stat::GrenadeSkillAreaOfEffect(Plus(v as f32)),
                "grenade_skill_cooldown_count_+" => Stat::GrenadeSkillCooldownCount(Plus(v as f32)),
                "grenade_skill_cooldown_speed_+%" => Stat::GrenadeSkillCooldownSpeed(Plus(v as f32)),
                "grenade_skill_damage_+%" => Stat::GrenadeSkillDamage(Plus(v as f32)),
                "grenade_skill_number_of_additional_projectiles" => Stat::GrenadeSkillNumberOfAdditionalProjectiles(Other(v as f32)),
                "guard_flask_effect_+%" => Stat::GuardFlaskEffect(Plus(v as f32)),
                "heavy_stun_poise_decay_rate_+%" => Stat::HeavyStunPoiseDecayRate(Plus(v as f32)),
                "heavy_stuns_have_culling_strike" => Stat::HeavyStunsHaveCullingStrike(Other(v as f32)),
                "hellhound_takes_%_damage_before_you" => Stat::HellhoundTakes(Other(v as f32)),
                "herald_skills_mana_reservation_+%" => Stat::HeraldSkillsManaReservation(Plus(v as f32)),
                "hinder_duration_+%" => Stat::HinderDuration(Plus(v as f32)),
                "hit_damage_+%_vs_enemies_affected_by_ailments" => Stat::HitDamage(Plus(v as f32)),
                "hit_damage_electrocute_multiplier_+%" => Stat::HitDamageElectrocuteMultiplier(Plus(v as f32)),
                "hit_damage_freeze_multiplier_+%" => Stat::HitDamageFreezeMultiplier(Plus(v as f32)),
                "hit_damage_pin_multiplier_+%" => Stat::HitDamagePinMultiplier(Plus(v as f32)),
                "hit_damage_stun_multiplier_+%" => Stat::HitDamageStunMultiplier(Plus(v as f32)),
                "hit_for_%_max_life_es_on_max_infernal_flame" => Stat::HitFor(Other(v as f32)),
                "hits_ignore_elemental_resistances_vs_frozen_enemies" => Stat::HitsIgnoreElementalResistancesVsFrozenEnemies(Other(v as f32)),
                "ice_crystal_maximum_life_+%" => Stat::IceCrystalMaximumLife(Plus(v as f32)),
                "ignite_chance_+%" => Stat::IgniteChance(Plus(v as f32)),
                "ignite_duration_+%" => Stat::IgniteDuration(Plus(v as f32)),
                "ignite_effect_on_self_+%" => Stat::IgniteEffectOnSelf(Plus(v as f32)),
                "ignite_shock_chill_duration_+%" => Stat::IgniteShockChillDuration(Plus(v as f32)),
                "ignites_apply_fire_resistance_+" => Stat::IgnitesApplyFireResistance(Plus(v as f32)),
                "infernal_flame_instead_of_mana" => Stat::InfernalFlameInsteadOfMana(Other(v as f32)),
                "infernalist_burn_life_and_es_%_per_second_if_crit_recently" => Stat::InfernalistBurnLifeAndEs(Other(v as f32)),
                "infernalist_critical_strike_multiplier_+%_final" => Stat::InfernalistCriticalStrikeMultiplier(Plus(v as f32)),
                "inflict_fire_exposure_on_hits_that_heavy_stun" => Stat::InflictFireExposureOnHitsThatHeavyStun(Other(v as f32)),
                "inflict_withered_for_x_seconds_on_unwithered_enemies_when_they_enter_your_presence" => Stat::InflictWitheredForXSecondsOnUnwitheredEnemiesWhenTheyEnterYourPresence(Other(v as f32)),
                "intelligence_+%" => Stat::Intelligence(Plus(v as f32)),
                "jagged_ground_duration_+%" => Stat::JaggedGroundDuration(Plus(v as f32)),
                "jagged_ground_effect_+%" => Stat::JaggedGroundEffect(Plus(v as f32)),
                "jagged_ground_enemy_damage_taken_+%" => Stat::JaggedGroundEnemyDamageTaken(Plus(v as f32)),
                "keystone_acrobatics" => Stat::KeystoneAcrobatics(Other(v as f32)),
                "keystone_ancestral_bond" => Stat::KeystoneAncestralBond(Other(v as f32)),
                "keystone_avatar_of_fire" => Stat::KeystoneAvatarOfFire(Other(v as f32)),
                "keystone_blood_magic" => Stat::KeystoneBloodMagic(Other(v as f32)),
                "keystone_bulwark" => Stat::KeystoneBulwark(Other(v as f32)),
                "keystone_chaos_inoculation" => Stat::KeystoneChaosInoculation(Other(v as f32)),
                "keystone_charge_cycle" => Stat::KeystoneChargeCycle(Other(v as f32)),
                "keystone_conduit" => Stat::KeystoneConduit(Other(v as f32)),
                "keystone_dance_with_death" => Stat::KeystoneDanceWithDeath(Other(v as f32)),
                "keystone_eldritch_battery" => Stat::KeystoneEldritchBattery(Other(v as f32)),
                "keystone_elemental_equilibrium" => Stat::KeystoneElementalEquilibrium(Other(v as f32)),
                "keystone_eternal_youth" => Stat::KeystoneEternalYouth(Other(v as f32)),
                "keystone_giants_blood" => Stat::KeystoneGiantsBlood(Other(v as f32)),
                "keystone_glancing_blows" => Stat::KeystoneGlancingBlows(Other(v as f32)),
                "keystone_heartstopper" => Stat::KeystoneHeartstopper(Other(v as f32)),
                "keystone_hex_master" => Stat::KeystoneHexMaster(Other(v as f32)),
                "keystone_iron_reflexes" => Stat::KeystoneIronReflexes(Other(v as f32)),
                "keystone_mana_shield" => Stat::KeystoneManaShield(Other(v as f32)),
                "keystone_oasis" => Stat::KeystoneOasis(Other(v as f32)),
                "keystone_pain_attunement" => Stat::KeystonePainAttunement(Other(v as f32)),
                "keystone_unwavering_stance" => Stat::KeystoneUnwaveringStance(Other(v as f32)),
                "keystone_vaal_pact" => Stat::KeystoneVaalPact(Other(v as f32)),
                "keystone_zealots_oath" => Stat::KeystoneZealotsOath(Other(v as f32)),
                "knockback_chance_%_at_close_range" => Stat::KnockbackChance(Other(v as f32)),
                "knockback_distance_+%" => Stat::KnockbackDistance(Plus(v as f32)),
                "knockback_on_crit_with_quarterstaff" => Stat::KnockbackOnCritWithQuarterstaff(Other(v as f32)),
                "leech_%_is_instant" => Stat::Leech(Other(v as f32)),
                "life_flask_charges_gained_+%" => Stat::LifeFlaskChargesGained(Plus(v as f32)),
                "life_flask_effects_are_not_removed_at_full_life" => Stat::LifeFlaskEffectsAreNotRemovedAtFullLife(Other(v as f32)),
                "life_gained_on_block" => Stat::LifeGainedOnBlock(Other(v as f32)),
                "life_recovery_+%_from_flasks_while_on_low_life" => Stat::LifeRecovery(Plus(v as f32)),
                "life_recovery_rate_+%" => Stat::LifeRecoveryRate(Plus(v as f32)),
                "life_regenerate_rate_per_second_%_while_totem_active" => Stat::LifeRegenerateRatePerSecond(Other(v as f32)),
                "life_regeneration_rate_+%_while_using_life_flask" => Stat::LifeRegenerationRate(Plus(v as f32)),
                "life_regeneration_rate_per_minute_%" => Stat::LifeRegenerationRatePerMinute(Other(v as f32)),
                "life_remnants_gain_per_globe" => Stat::LifeRemnantsGainPerGlobe(Other(v as f32)),
                "life_reserved_by_stat_%" => Stat::LifeReservedByStat(Other(v as f32)),
                "light_radius_+%" => Stat::LightRadius(Plus(v as f32)),
                "lightning_damage_+%_while_affected_by_herald_of_thunder" => Stat::LightningDamage(Plus(v as f32)),
                "lightning_exposure_effect_+%" => Stat::LightningExposureEffect(Plus(v as f32)),
                "lightning_hit_and_dot_damage_%_taken_as_fire" => Stat::LightningHitAndDotDamage(Other(v as f32)),
                "lightning_penetration_%_while_on_low_mana" => Stat::LightningPenetration(Other(v as f32)),
                "lightning_skill_additional_chain_chance_%" => Stat::LightningSkillAdditionalChainChance(Other(v as f32)),
                "link_skill_buff_effect_+%" => Stat::LinkSkillBuffEffect(Plus(v as f32)),
                "link_skill_cast_speed_+%" => Stat::LinkSkillCastSpeed(Plus(v as f32)),
                "link_skill_duration_+%" => Stat::LinkSkillDuration(Plus(v as f32)),
                "link_skills_can_target_minions" => Stat::LinkSkillsCanTargetMinions(Other(v as f32)),
                "link_to_X_additional_random_allies" => Stat::LinkToXAdditionalRandomAllies(Other(v as f32)),
                "lose_%_of_infernal_flame_on_reaching_max" => Stat::Lose(Other(v as f32)),
                "lose_all_tailwind_when_hit" => Stat::LoseAllTailwindWhenHit(Other(v as f32)),
                "mace_damage_+%" => Stat::MaceDamage(Plus(v as f32)),
                "mace_hit_damage_stun_multiplier_+%" => Stat::MaceHitDamageStunMultiplier(Plus(v as f32)),
                "mace_slam_aftershock_chance_%" => Stat::MaceSlamAftershockChance(Other(v as f32)),
                "mace_strike_aftershock_chance_%" => Stat::MaceStrikeAftershockChance(Other(v as f32)),
                "maim_on_hit_%" => Stat::MaimOnHit(Other(v as f32)),
                "mana_cost_+%_while_not_low_mana" => Stat::ManaCost(Plus(v as f32)),
                "mana_flask_charges_gained_+%" => Stat::ManaFlaskChargesGained(Plus(v as f32)),
                "mana_gained_on_block" => Stat::ManaGainedOnBlock(Other(v as f32)),
                "mana_leech_applies_recovery_to_energy_shield_also" => Stat::ManaLeechAppliesRecoveryToEnergyShieldAlso(Other(v as f32)),
                "mana_recovery_rate_+%_while_affected_by_a_mana_flask" => Stat::ManaRecoveryRate(Plus(v as f32)),
                "mana_regeneration_rate_+%" => Stat::ManaRegenerationRate(Plus(v as f32)),
                "map_affliction_encounter_boss_chance_+%" => Stat::MapAfflictionEncounterBossChance(Plus(v as f32)),
                "map_affliction_reward_progress_on_kill_+%" => Stat::MapAfflictionRewardProgressOnKill(Plus(v as f32)),
                "map_affliction_secondary_wave_acceleration_+%" => Stat::MapAfflictionSecondaryWaveAcceleration(Plus(v as f32)),
                "map_basic_currency_drop_chance_+%_in_swamp_and_water_biome" => Stat::MapBasicCurrencyDropChance(Plus(v as f32)),
                "map_boss_area_chance_to_be_corrupted_%" => Stat::MapBossAreaChanceToBeCorrupted(Other(v as f32)),
                "map_boss_damage_+%" => Stat::MapBossDamage(Plus(v as f32)),
                "map_boss_dropped_item_quantity_+%" => Stat::MapBossDroppedItemQuantity(Plus(v as f32)),
                "map_boss_experience_+%_final" => Stat::MapBossExperience(Plus(v as f32)),
                "map_boss_item_rarity_+%" => Stat::MapBossItemRarity(Plus(v as f32)),
                "map_boss_maximum_life_+%" => Stat::MapBossMaximumLife(Plus(v as f32)),
                "map_bossing_difficulty_+" => Stat::MapBossingDifficulty(Plus(v as f32)),
                "map_breach_chance_to_be_guarded_by_magic_pack_%" => Stat::MapBreachChanceToBeGuardedByMagicPack(Other(v as f32)),
                "map_breach_chests_+%_final" => Stat::MapBreachChests(Plus(v as f32)),
                "map_breach_chests_drop_double_splinters_chance_%" => Stat::MapBreachChestsDropDoubleSplintersChance(Other(v as f32)),
                "map_breach_domain_difficulty_+" => Stat::MapBreachDomainDifficulty(Plus(v as f32)),
                "map_breach_hands_inflict_waking_nightmare" => Stat::MapBreachHandsInflictWakingNightmare(Other(v as f32)),
                "map_breach_monster_quantity_+%" => Stat::MapBreachMonsterQuantity(Plus(v as f32)),
                "map_breach_monster_splinter_quantity_+%" => Stat::MapBreachMonsterSplinterQuantity(Plus(v as f32)),
                "map_breach_rares_catalyst_full_stack_chance_%" => Stat::MapBreachRaresCatalystFullStackChance(Other(v as f32)),
                "map_breach_rares_have_soul_eater" => Stat::MapBreachRaresHaveSoulEater(Other(v as f32)),
                "map_breach_time_passed_+%" => Stat::MapBreachTimePassed(Plus(v as f32)),
                "map_delirium_additional_reward_type_chance_%" => Stat::MapDeliriumAdditionalRewardTypeChance(Other(v as f32)),
                "map_delirium_boss_life_+%" => Stat::MapDeliriumBossLife(Plus(v as f32)),
                "map_delirium_boss_splinter_amount_+%" => Stat::MapDeliriumBossSplinterAmount(Plus(v as f32)),
                "map_delirium_daemon_damage_+%" => Stat::MapDeliriumDaemonDamage(Plus(v as f32)),
                "map_delirium_difficulty_scaling_from_mirror_is_double" => Stat::MapDeliriumDifficultyScalingFromMirrorIsDouble(Other(v as f32)),
                "map_delirium_doodads_+%_final" => Stat::MapDeliriumDoodads(Plus(v as f32)),
                "map_dropped_maps_rarity_+%" => Stat::MapDroppedMapsRarity(Plus(v as f32)),
                "map_duplicate_x_rare_monsters" => Stat::MapDuplicateXRareMonsters(Other(v as f32)),
                "map_expedition_artifact_quantity_+%" => Stat::MapExpeditionArtifactQuantity(Plus(v as f32)),
                "map_expedition_chest_marker_count_+" => Stat::MapExpeditionChestMarkerCount(Plus(v as f32)),
                "map_expedition_chests_despawn_after_X_seconds" => Stat::MapExpeditionChestsDespawnAfterXSeconds(Other(v as f32)),
                "map_expedition_elite_marker_count_+%" => Stat::MapExpeditionEliteMarkerCount(Plus(v as f32)),
                "map_expedition_fuse_burn_time_+%" => Stat::MapExpeditionFuseBurnTime(Plus(v as f32)),
                "map_expedition_rare_monsters_+%" => Stat::MapExpeditionRareMonsters(Plus(v as f32)),
                "map_expedition_relic_mod_effect_+%" => Stat::MapExpeditionRelicModEffect(Plus(v as f32)),
                "map_expedition_vendor_reroll_currency_quantity_+%" => Stat::MapExpeditionVendorRerollCurrencyQuantity(Plus(v as f32)),
                "map_expedition_x_extra_relic_prefixes" => Stat::MapExpeditionXExtraRelicPrefixes(Other(v as f32)),
                "map_expedition_x_extra_relic_suffixes" => Stat::MapExpeditionXExtraRelicSuffixes(Other(v as f32)),
                "map_final_boss_map_key_of_at_least_same_tier_as_current_map_drop_chance_%" => Stat::MapFinalBossMapKeyOfAtLeastSameTierAsCurrentMapDropChance(Other(v as f32)),
                "map_gold_drop_chance_+%_in_mountain_biome" => Stat::MapGoldDropChance(Plus(v as f32)),
                "map_item_drop_quantity_+%" => Stat::MapItemDropQuantity(Plus(v as f32)),
                "map_item_drop_rarity_+%" => Stat::MapItemDropRarity(Plus(v as f32)),
                "map_jewel_drop_chance_+%_in_forest_biome" => Stat::MapJewelDropChance(Plus(v as f32)),
                "map_killing_rare_monsters_pauses_delirium_mirror_timer_for_x_seconds" => Stat::MapKillingRareMonstersPausesDeliriumMirrorTimerForXSeconds(Other(v as f32)),
                "map_logbook_difficulty_+" => Stat::MapLogbookDifficulty(Plus(v as f32)),
                "map_magic_chest_amount_+%" => Stat::MapMagicChestAmount(Plus(v as f32)),
                "map_magic_pack_size_+%" => Stat::MapMagicPackSize(Plus(v as f32)),
                "map_map_item_drop_chance_+%" => Stat::MapMapItemDropChance(Plus(v as f32)),
                "map_maps_drop_with_distilled_emotions_applied_chance_%" => Stat::MapMapsDropWithDistilledEmotionsAppliedChance(Other(v as f32)),
                "map_mod_effect_+%_per_mod" => Stat::MapModEffect(Plus(v as f32)),
                "map_monolith_chance_%" => Stat::MapMonolithChance(Other(v as f32)),
                "map_monster_tre_+%" => Stat::MapMonsterTre(Plus(v as f32)),
                "map_non_unique_delirium_monsters_splinter_amount_+%" => Stat::MapNonUniqueDeliriumMonstersSplinterAmount(Plus(v as f32)),
                "map_number_of_magic_packs_+%" => Stat::MapNumberOfMagicPacks(Plus(v as f32)),
                "map_number_of_rare_packs_+%" => Stat::MapNumberOfRarePacks(Plus(v as f32)),
                "map_pack_size_+%" => Stat::MapPackSize(Plus(v as f32)),
                "map_pinnacle_boss_additional_unique_drop_chance_%" => Stat::MapPinnacleBossAdditionalUniqueDropChance(Other(v as f32)),
                "map_pinnacle_boss_difficulty_+" => Stat::MapPinnacleBossDifficulty(Plus(v as f32)),
                "map_pinnacle_boss_drops_X_corrupted_rare_tablets" => Stat::MapPinnacleBossDropsXCorruptedRareTablets(Other(v as f32)),
                "map_pinnacle_boss_drops_X_waystones" => Stat::MapPinnacleBossDropsXWaystones(Other(v as f32)),
                "map_pinnacle_boss_item_dropped_rarity_+%_final" => Stat::MapPinnacleBossItemDroppedRarity(Plus(v as f32)),
                "map_pinnacle_boss_rare_socket_currency_chance_%" => Stat::MapPinnacleBossRareSocketCurrencyChance(Other(v as f32)),
                "map_pinnacle_boss_special_gem_drop_chance_%" => Stat::MapPinnacleBossSpecialGemDropChance(Other(v as f32)),
                "map_player_damage_taken_+%_vs_breach_monsters" => Stat::MapPlayerDamageTaken(Plus(v as f32)),
                "map_player_shrine_buff_effect_on_self_+%" => Stat::MapPlayerShrineBuffEffectOnSelf(Plus(v as f32)),
                "map_player_shrine_effect_duration_+%" => Stat::MapPlayerShrineEffectDuration(Plus(v as f32)),
                "map_rare_chest_amount_+%" => Stat::MapRareChestAmount(Plus(v as f32)),
                "map_ritual_additional_daemon" => Stat::MapRitualAdditionalDaemon(Other(v as f32)),
                "map_ritual_additional_reward_rerolls" => Stat::MapRitualAdditionalRewardRerolls(Other(v as f32)),
                "map_ritual_additional_wildwood_packs" => Stat::MapRitualAdditionalWildwoodPacks(Other(v as f32)),
                "map_ritual_contains_wildwood_wisp" => Stat::MapRitualContainsWildwoodWisp(Other(v as f32)),
                "map_ritual_daemon_damage_+%" => Stat::MapRitualDaemonDamage(Plus(v as f32)),
                "map_ritual_defer_reward_tribute_cost_+%" => Stat::MapRitualDeferRewardTributeCost(Plus(v as f32)),
                "map_ritual_deferred_rewards_are_offered_again_+%_sooner" => Stat::MapRitualDeferredRewardsAreOfferedAgain(Plus(v as f32)),
                "map_ritual_encounter_count_is_four" => Stat::MapRitualEncounterCountIsFour(Other(v as f32)),
                "map_ritual_magic_monsters_+%" => Stat::MapRitualMagicMonsters(Plus(v as f32)),
                "map_ritual_monster_damage_+%_for_each_time_revived" => Stat::MapRitualMonsterDamage(Plus(v as f32)),
                "map_ritual_monster_spawning_speed_+%" => Stat::MapRitualMonsterSpawningSpeed(Plus(v as f32)),
                "map_ritual_monster_tankiness_+%_for_each_time_revived" => Stat::MapRitualMonsterTankiness(Plus(v as f32)),
                "map_ritual_no_revive_penalty" => Stat::MapRitualNoRevivePenalty(Other(v as f32)),
                "map_ritual_omen_chance_+%" => Stat::MapRitualOmenChance(Plus(v as f32)),
                "map_ritual_rare_monsters_+%" => Stat::MapRitualRareMonsters(Plus(v as f32)),
                "map_ritual_rewards_reroll_cost_+%_final" => Stat::MapRitualRewardsRerollCost(Plus(v as f32)),
                "map_ritual_voodoo_king_key_chance_+%" => Stat::MapRitualVoodooKingKeyChance(Plus(v as f32)),
                "map_sanctum_and_ultimatum_key_drop_chance_+%_in_desert_biome" => Stat::MapSanctumAndUltimatumKeyDropChance(Plus(v as f32)),
                "map_shrine_chance_%" => Stat::MapShrineChance(Other(v as f32)),
                "map_simulacrum_difficulty_+" => Stat::MapSimulacrumDifficulty(Plus(v as f32)),
                "map_socket_currency_drop_chance_+%_in_grass_biome" => Stat::MapSocketCurrencyDropChance(Plus(v as f32)),
                "map_strongbox_chance_%" => Stat::MapStrongboxChance(Other(v as f32)),
                "map_strongbox_mod_effect_+%" => Stat::MapStrongboxModEffect(Plus(v as f32)),
                "map_tier_bonus_permillage" => Stat::MapTierBonusPermillage(Other(v as f32)),
                "map_tower_augment_quantity_+%" => Stat::MapTowerAugmentQuantity(Plus(v as f32)),
                "map_voodoo_king_difficulty_+" => Stat::MapVoodooKingDifficulty(Plus(v as f32)),
                "maps_boss_drop_additional_bonus_map_chance_%" => Stat::MapsBossDropAdditionalBonusMapChance(Other(v as f32)),
                "maps_with_bosses_additional_essence_+" => Stat::MapsWithBossesAdditionalEssence(Plus(v as f32)),
                "maps_with_bosses_additional_shrine_+" => Stat::MapsWithBossesAdditionalShrine(Plus(v as f32)),
                "maps_with_bosses_additional_strongbox_+" => Stat::MapsWithBossesAdditionalStrongbox(Plus(v as f32)),
                "maps_with_bosses_are_irradiated" => Stat::MapsWithBossesAreIrradiated(Other(v as f32)),
                "mark_effect_+%" => Stat::MarkEffect(Plus(v as f32)),
                "mark_skill_cast_speed_+%" => Stat::MarkSkillCastSpeed(Plus(v as f32)),
                "mark_skill_duration_+%" => Stat::MarkSkillDuration(Plus(v as f32)),
                "mark_skill_mana_cost_+%" => Stat::MarkSkillManaCost(Plus(v as f32)),
                "marked_enemies_cannot_deal_critical_strikes" => Stat::MarkedEnemiesCannotDealCriticalStrikes(Other(v as f32)),
                "marked_enemy_accuracy_rating_+%" => Stat::MarkedEnemyAccuracyRating(Plus(v as f32)),
                "marked_enemy_damage_taken_+%" => Stat::MarkedEnemyDamageTaken(Plus(v as f32)),
                "master_of_elements_evasion_rating_+%_final" => Stat::MasterOfElementsEvasionRating(Plus(v as f32)),
                "mastery_chance_to_evade_melee_attacks_+%_final" => Stat::MasteryChanceToEvadeMeleeAttacks(Plus(v as f32)),
                "max_demon_form_stacks" => Stat::MaxDemonFormStacks(Other(v as f32)),
                "max_endurance_charges" => Stat::MaxEnduranceCharges(Other(v as f32)),
                "max_frenzy_charges" => Stat::MaxFrenzyCharges(Other(v as f32)),
                "max_jade_stacks" => Stat::MaxJadeStacks(Other(v as f32)),
                "max_power_charges" => Stat::MaxPowerCharges(Other(v as f32)),
                "maximum_darkness_+%" => Stat::MaximumDarkness(Plus(v as f32)),
                "maximum_energy_shield_+%" => Stat::MaximumEnergyShield(Plus(v as f32)),
                "maximum_energy_shield_from_body_armour_+%" => Stat::MaximumEnergyShieldFromBodyArmour(Plus(v as f32)),
                "maximum_life_+%" => Stat::MaximumLife(Plus(v as f32)),
                "maximum_life_mana_and_energy_shield_+%" => Stat::MaximumLifeManaAndEnergyShield(Plus(v as f32)),
                "maximum_mana_+%" => Stat::MaximumMana(Plus(v as f32)),
                "maximum_rage" => Stat::MaximumRage(Other(v as f32)),
                "melee_attack_speed_+%" => Stat::MeleeAttackSpeed(Plus(v as f32)),
                "melee_critical_strike_chance_+%" => Stat::MeleeCriticalStrikeChance(Plus(v as f32)),
                "melee_damage_+%" => Stat::MeleeDamage(Plus(v as f32)),
                "melee_hit_damage_stun_multiplier_+%" => Stat::MeleeHitDamageStunMultiplier(Plus(v as f32)),
                "melee_range_+" => Stat::MeleeRange(Plus(v as f32)),
                "minion_accuracy_rating" => Stat::MinionAccuracyRating(Other(v as f32)),
                "minion_additional_physical_damage_reduction_%" => Stat::MinionAdditionalPhysicalDamageReduction(Other(v as f32)),
                "minion_attack_and_cast_speed_+%" => Stat::MinionAttackAndCastSpeed(Plus(v as f32)),
                "minion_chaos_resistance_%" => Stat::MinionChaosResistance(Other(v as f32)),
                "minion_cold_damage_resistance_%" => Stat::MinionColdDamageResistance(Other(v as f32)),
                "minion_cooldown_recovery_+%" => Stat::MinionCooldownRecovery(Plus(v as f32)),
                "minion_critical_strike_chance_+%" => Stat::MinionCriticalStrikeChance(Plus(v as f32)),
                "minion_critical_strike_multiplier_+" => Stat::MinionCriticalStrikeMultiplier(Plus(v as f32)),
                "minion_damage_+%_while_you_have_at_least_two_different_active_offerings" => Stat::MinionDamage(Plus(v as f32)),
                "minion_damage_taken_%_recouped_as_their_life" => Stat::MinionDamageTaken(Other(v as f32)),
                "minion_elemental_resistance_%" => Stat::MinionElementalResistance(Other(v as f32)),
                "minion_evasion_rating_+%" => Stat::MinionEvasionRating(Plus(v as f32)),
                "minion_fire_damage_resistance_%" => Stat::MinionFireDamageResistance(Other(v as f32)),
                "minion_life_recovery_rate_+%" => Stat::MinionLifeRecoveryRate(Plus(v as f32)),
                "minion_life_regeneration_rate_per_minute_%" => Stat::MinionLifeRegenerationRatePerMinute(Other(v as f32)),
                "minion_lightning_damage_resistance_%" => Stat::MinionLightningDamageResistance(Other(v as f32)),
                "minion_maximum_all_elemental_resistances_%" => Stat::MinionMaximumAllElementalResistances(Other(v as f32)),
                "minion_maximum_life_+%" => Stat::MinionMaximumLife(Plus(v as f32)),
                "minion_movement_speed_+%" => Stat::MinionMovementSpeed(Plus(v as f32)),
                "minion_reservation_+%" => Stat::MinionReservation(Plus(v as f32)),
                "minion_resummon_speed_+%" => Stat::MinionResummonSpeed(Plus(v as f32)),
                "minion_skill_area_of_effect_+%" => Stat::MinionSkillAreaOfEffect(Plus(v as f32)),
                "minions_deal_%_of_physical_damage_as_additional_chaos_damage" => Stat::MinionsDeal(Other(v as f32)),
                "minions_gain_your_dexterity" => Stat::MinionsGainYourDexterity(Other(v as f32)),
                "minions_get_amulet_stats_instead_of_you" => Stat::MinionsGetAmuletStatsInsteadOfYou(Other(v as f32)),
                "minions_have_%_chance_to_inflict_wither_on_hit" => Stat::MinionsHave(Other(v as f32)),
                "movement_speed_+%_while_using_charm" => Stat::MovementSpeed(Plus(v as f32)),
                "non_damaging_ailment_effect_+%_with_critical_strikes" => Stat::NonDamagingAilmentEffect(Plus(v as f32)),
                "non_skill_base_all_damage_%_to_gain_as_lightning" => Stat::NonSkillBaseAllDamage(Other(v as f32)),
                "non_skill_base_lightning_damage_%_to_gain_as_cold" => Stat::NonSkillBaseLightningDamage(Other(v as f32)),
                "non_skill_base_physical_damage_%_to_gain_as_fire" => Stat::NonSkillBasePhysicalDamage(Other(v as f32)),
                "non_skill_cold_damage_%_to_gain_as_fire_vs_frozen_enemies" => Stat::NonSkillColdDamage(Other(v as f32)),
                "notable_knockback_distance_+%_final_for_blocked_hits" => Stat::NotableKnockbackDistance(Plus(v as f32)),
                "num_additional_skill_slots" => Stat::NumAdditionalSkillSlots(Other(v as f32)),
                "num_charm_slots" => Stat::NumCharmSlots(Other(v as f32)),
                "number_of_additional_marks_allowed" => Stat::NumberOfAdditionalMarksAllowed(Other(v as f32)),
                "number_of_additional_poison_stacks" => Stat::NumberOfAdditionalPoisonStacks(Other(v as f32)),
                "number_of_additional_projectiles" => Stat::NumberOfAdditionalProjectiles(Other(v as f32)),
                "number_of_infernal_familiars_allowed" => Stat::NumberOfInfernalFamiliarsAllowed(Other(v as f32)),
                "offering_area_of_effect_+%" => Stat::OfferingAreaOfEffect(Plus(v as f32)),
                "offering_duration_+%" => Stat::OfferingDuration(Plus(v as f32)),
                "offering_life_+%" => Stat::OfferingLife(Plus(v as f32)),
                "one_handed_attack_ailment_chance_+%" => Stat::OneHandedAttackAilmentChance(Plus(v as f32)),
                "one_handed_attack_speed_+%" => Stat::OneHandedAttackSpeed(Plus(v as f32)),
                "one_handed_melee_accuracy_rating_+%" => Stat::OneHandedMeleeAccuracyRating(Plus(v as f32)),
                "one_handed_melee_attack_speed_+%" => Stat::OneHandedMeleeAttackSpeed(Plus(v as f32)),
                "one_handed_melee_critical_strike_chance_+%" => Stat::OneHandedMeleeCriticalStrikeChance(Plus(v as f32)),
                "one_handed_melee_critical_strike_multiplier_+" => Stat::OneHandedMeleeCriticalStrikeMultiplier(Plus(v as f32)),
                "passive_tree_mace_damage_+%_final_vs_heavy_stunned_enemies" => Stat::PassiveTreeMaceDamage(Plus(v as f32)),
                "pathfinder_ascendancy_poison_on_enemies_you_kill_spread_to_enemies_within_x" => Stat::PathfinderAscendancyPoisonOnEnemiesYouKillSpreadToEnemiesWithinX(Other(v as f32)),
                "pathfinder_poison_duration_+%_final" => Stat::PathfinderPoisonDuration(Plus(v as f32)),
                "physical_attack_damage_+%" => Stat::PhysicalAttackDamage(Plus(v as f32)),
                "physical_damage_+%" => Stat::PhysicalDamage(Plus(v as f32)),
                "physical_damage_from_hits_%_taken_as_random_element" => Stat::PhysicalDamageFromHits(Other(v as f32)),
                "physical_damage_prevented_recouped_as_life_%" => Stat::PhysicalDamagePreventedRecoupedAsLife(Other(v as f32)),
                "physical_damage_reduction_rating_+%" => Stat::PhysicalDamageReductionRating(Plus(v as f32)),
                "physical_damage_taken_recouped_as_life_%" => Stat::PhysicalDamageTakenRecoupedAsLife(Other(v as f32)),
                "physical_hit_and_dot_damage_%_taken_as_chaos" => Stat::PhysicalHitAndDotDamage(Other(v as f32)),
                "placing_traps_cooldown_recovery_+%" => Stat::PlacingTrapsCooldownRecovery(Plus(v as f32)),
                "poison_duration_+%_per_poison_applied_recently" => Stat::PoisonDuration(Plus(v as f32)),
                "poison_effect_+%_vs_non_poisoned_enemies" => Stat::PoisonEffect(Plus(v as f32)),
                "power_charge_duration_+%" => Stat::PowerChargeDuration(Plus(v as f32)),
                "projectile_ailment_chance_+%" => Stat::ProjectileAilmentChance(Plus(v as f32)),
                "projectile_damage_+%" => Stat::ProjectileDamage(Plus(v as f32)),
                "projectile_hit_damage_stun_multiplier_+%" => Stat::ProjectileHitDamageStunMultiplier(Plus(v as f32)),
                "quarterstaff_accuracy_rating_+%" => Stat::QuarterstaffAccuracyRating(Plus(v as f32)),
                "quarterstaff_attack_speed_+%" => Stat::QuarterstaffAttackSpeed(Plus(v as f32)),
                "quarterstaff_critical_strike_chance_+%" => Stat::QuarterstaffCriticalStrikeChance(Plus(v as f32)),
                "quarterstaff_critical_strike_multiplier_+" => Stat::QuarterstaffCriticalStrikeMultiplier(Plus(v as f32)),
                "quarterstaff_damage_+%" => Stat::QuarterstaffDamage(Plus(v as f32)),
                "quarterstaff_daze_build_up_+%" => Stat::QuarterstaffDazeBuildUp(Plus(v as f32)),
                "quarterstaff_hit_damage_freeze_multiplier_+%" => Stat::QuarterstaffHitDamageFreezeMultiplier(Plus(v as f32)),
                "quarterstaff_hit_damage_stun_multiplier_+%" => Stat::QuarterstaffHitDamageStunMultiplier(Plus(v as f32)),
                "quarterstaff_skills_that_consume_power_charges_count_as_consuming_x_additional_power_charges" => Stat::QuarterstaffSkillsThatConsumePowerChargesCountAsConsumingXAdditionalPowerCharges(Other(v as f32)),
                "quiver_mod_effect_+%" => Stat::QuiverModEffect(Plus(v as f32)),
                "rage_decay_speed_+%" => Stat::RageDecaySpeed(Plus(v as f32)),
                "rage_loss_delay_ms" => Stat::RageLossDelayMs(Other(v as f32)),
                "reapply_enemy_shock_on_consuming_enemy_shock_chance_%" => Stat::ReapplyEnemyShockOnConsumingEnemyShockChance(Other(v as f32)),
                "recoup_%_elemental_damage_as_energy_shield" => Stat::Recoup(Other(v as f32)),
                "recoup_speed_+%" => Stat::RecoupSpeed(Plus(v as f32)),
                "recover_%_maximum_mana_on_charm_use" => Stat::Recover(Other(v as f32)),
                "recover_maximum_life_on_enemy_killed_chance_%" => Stat::RecoverMaximumLifeOnEnemyKilledChance(Other(v as f32)),
                "recover_X_life_on_block" => Stat::RecoverXLifeOnBlock(Other(v as f32)),
                "reduce_enemy_elemental_resistance_%" => Stat::ReduceEnemyElementalResistance(Other(v as f32)),
                "refresh_ignite_duration_on_critical_strike_chance_%" => Stat::RefreshIgniteDurationOnCriticalStrikeChance(Other(v as f32)),
                "reload_speed_+%" => Stat::ReloadSpeed(Plus(v as f32)),
                "remove_curse_on_mana_flask_use" => Stat::RemoveCurseOnManaFlaskUse(Other(v as f32)),
                "resolute_technique" => Stat::ResoluteTechnique(Other(v as f32)),
                "restore_life_and_mana_on_warcry_%" => Stat::RestoreLifeAndManaOnWarcry(Other(v as f32)),
                "shield_armour_+%" => Stat::ShieldArmour(Plus(v as f32)),
                "shield_evasion_rating_+%" => Stat::ShieldEvasionRating(Plus(v as f32)),
                "shock_chance_+%" => Stat::ShockChance(Plus(v as f32)),
                "shock_duration_+%" => Stat::ShockDuration(Plus(v as f32)),
                "shock_effect_+%" => Stat::ShockEffect(Plus(v as f32)),
                "skill_area_of_effect_+%_if_enemy_killed_recently" => Stat::SkillAreaOfEffect(Plus(v as f32)),
                "skill_area_of_effect_when_unarmed_+%" => Stat::SkillAreaOfEffectWhenUnarmed(Plus(v as f32)),
                "skill_cost_base_life_equal_to_base_mana" => Stat::SkillCostBaseLifeEqualToBaseMana(Other(v as f32)),
                "skill_effect_duration_+%" => Stat::SkillEffectDuration(Plus(v as f32)),
                "skill_speed_+%" => Stat::SkillSpeed(Plus(v as f32)),
                "slam_aftershock_chance_%" => Stat::SlamAftershockChance(Other(v as f32)),
                "slam_skill_area_of_effect_+%" => Stat::SlamSkillAreaOfEffect(Plus(v as f32)),
                "slows_have_no_potency_on_you" => Stat::SlowsHaveNoPotencyOnYou(Other(v as f32)),
                "small_passives_effect_+%" => Stat::SmallPassivesEffect(Plus(v as f32)),
                "sorcery_ward_+%_strength" => Stat::SorceryWard(Plus(v as f32)),
                "spawn_defender_with_totem" => Stat::SpawnDefenderWithTotem(Other(v as f32)),
                "spear_attack_speed_+%" => Stat::SpearAttackSpeed(Plus(v as f32)),
                "spear_critical_strike_chance_+%" => Stat::SpearCriticalStrikeChance(Plus(v as f32)),
                "spear_damage_+%" => Stat::SpearDamage(Plus(v as f32)),
                "spell_area_damage_+%" => Stat::SpellAreaDamage(Plus(v as f32)),
                "spell_area_of_effect_+%" => Stat::SpellAreaOfEffect(Plus(v as f32)),
                "spell_critical_strike_chance_+%" => Stat::SpellCriticalStrikeChance(Plus(v as f32)),
                "spell_critical_strike_multiplier_+_while_wielding_staff" => Stat::SpellCriticalStrikeMultiplier(Plus(v as f32)),
                "spell_damage_+%" => Stat::SpellDamage(Plus(v as f32)),
                "spell_skill_gem_level_+" => Stat::SpellSkillGemLevel(Plus(v as f32)),
                "spell_skill_projectile_speed_+%" => Stat::SpellSkillProjectileSpeed(Plus(v as f32)),
                "spell_staff_damage_+%" => Stat::SpellStaffDamage(Plus(v as f32)),
                "spirit_+%" => Stat::Spirit(Plus(v as f32)),
                "staff_attack_area_of_effect_+%" => Stat::StaffAttackAreaOfEffect(Plus(v as f32)),
                "stormweaver_chill_effect_+%_final" => Stat::StormweaverChillEffect(Plus(v as f32)),
                "stormweaver_shock_duration_+%_final" => Stat::StormweaverShockDuration(Plus(v as f32)),
                "strength_+%" => Stat::Strength(Plus(v as f32)),
                "stun_threshold_+_from_%_base_armour_from_equipment" => Stat::StunThreshold(Plus(v as f32)),
                "stun_threshold_based_on_%_energy_shield_instead_of_life" => Stat::StunThresholdBasedOn(Other(v as f32)),
                "summon_totem_cast_speed_+%" => Stat::SummonTotemCastSpeed(Plus(v as f32)),
                "support_anticipation_charge_gain_frequency_+%" => Stat::SupportAnticipationChargeGainFrequency(Plus(v as f32)),
                "support_gem_limit_+" => Stat::SupportGemLimit(Plus(v as f32)),
                "sword_attack_speed_+%" => Stat::SwordAttackSpeed(Plus(v as f32)),
                "sword_damage_+%" => Stat::SwordDamage(Plus(v as f32)),
                "tablet_effect_+%_when_opening_a_map" => Stat::TabletEffect(Plus(v as f32)),
                "thorns_damage_+%_if_blocked_recently" => Stat::ThornsDamage(Plus(v as f32)),
                "titan_damage_+%_final_against_heavy_stunned_enemies" => Stat::TitanDamage(Plus(v as f32)),
                "titan_expanded_main_inventory" => Stat::TitanExpandedMainInventory(Other(v as f32)),
                "titan_maximum_life_+%_final" => Stat::TitanMaximumLife(Plus(v as f32)),
                "totem_additional_physical_damage_reduction_%" => Stat::TotemAdditionalPhysicalDamageReduction(Other(v as f32)),
                "totem_damage_+%" => Stat::TotemDamage(Plus(v as f32)),
                "totem_duration_+%" => Stat::TotemDuration(Plus(v as f32)),
                "totem_elemental_resistance_%" => Stat::TotemElementalResistance(Other(v as f32)),
                "totem_life_+%" => Stat::TotemLife(Plus(v as f32)),
                "totem_placement_range_+%" => Stat::TotemPlacementRange(Plus(v as f32)),
                "totem_skill_attack_speed_+%" => Stat::TotemSkillAttackSpeed(Plus(v as f32)),
                "totem_skill_cast_speed_+%" => Stat::TotemSkillCastSpeed(Plus(v as f32)),
                "totems_attack_speed_+%_per_active_totem" => Stat::TotemsAttackSpeed(Plus(v as f32)),
                "totems_regenerate_%_life_per_minute" => Stat::TotemsRegenerate(Other(v as f32)),
                "totems_spells_cast_speed_+%_per_active_totem" => Stat::TotemsSpellsCastSpeed(Plus(v as f32)),
                "trap_critical_strike_chance_+%" => Stat::TrapCriticalStrikeChance(Plus(v as f32)),
                "trap_damage_+%" => Stat::TrapDamage(Plus(v as f32)),
                "trap_throwing_speed_+%" => Stat::TrapThrowingSpeed(Plus(v as f32)),
                "trigger_elemental_storm_on_crit" => Stat::TriggerElementalStormOnCrit(Other(v as f32)),
                "trigger_skills_refund_half_energy_spent_chance_%" => Stat::TriggerSkillsRefundHalfEnergySpentChance(Other(v as f32)),
                "trigger_wild_strike_on_attack_crit" => Stat::TriggerWildStrikeOnAttackCrit(Other(v as f32)),
                "triggered_spell_spell_damage_+%" => Stat::TriggeredSpellSpellDamage(Plus(v as f32)),
                "two_handed_melee_accuracy_rating_+%" => Stat::TwoHandedMeleeAccuracyRating(Plus(v as f32)),
                "unaffected_by_chill_during_dodge_roll" => Stat::UnaffectedByChillDuringDodgeRoll(Other(v as f32)),
                "unaffected_by_chill_while_mana_leeching" => Stat::UnaffectedByChillWhileManaLeeching(Other(v as f32)),
                "unarmed_attack_skill_melee_dash_range_+%" => Stat::UnarmedAttackSkillMeleeDashRange(Plus(v as f32)),
                "unarmed_attack_speed_+%" => Stat::UnarmedAttackSpeed(Plus(v as f32)),
                "warbringer_overbreak_armour" => Stat::WarbringerOverbreakArmour(Other(v as f32)),
                "warcries_bypass_cooldown" => Stat::WarcriesBypassCooldown(Other(v as f32)),
                "warcry_cooldown_speed_+%" => Stat::WarcryCooldownSpeed(Plus(v as f32)),
                "warcry_damage_+%" => Stat::WarcryDamage(Plus(v as f32)),
                "warcry_empowers_next_x_melee_attacks" => Stat::WarcryEmpowersNextXMeleeAttacks(Other(v as f32)),
                "warcry_skill_area_of_effect_+%" => Stat::WarcrySkillAreaOfEffect(Plus(v as f32)),
                "warcry_speed_+%" => Stat::WarcrySpeed(Plus(v as f32)),
                "weapon_swap_speed_+%" => Stat::WeaponSwapSpeed(Plus(v as f32)),
                "while_using_sword_reduce_enemy_block_%" => Stat::WhileUsingSwordReduceEnemyBlock(Other(v as f32)),
                "witch_passive_maximum_lightning_damage_+%_final" => Stat::WitchPassiveMaximumLightningDamage(Plus(v as f32)),
                "witchhunter_armour_evasion_+%_final" => Stat::WitchhunterArmourEvasion(Plus(v as f32)),
                "witchhunter_up_to_damage_+%_final_against_targets_with_missing_focus" => Stat::WitchhunterUpToDamage(Plus(v as f32)),
                "withered_effect_+%" => Stat::WitheredEffect(Plus(v as f32)),
                "world_map_unique_maps_visible_X_units_beyond_light_radius" => Stat::WorldMapUniqueMapsVisibleXUnitsBeyondLightRadius(Other(v as f32)),
                "x%_faster_start_of_sorcery_ward_recovery" => Stat::X(Other(v as f32)),
                "you_and_allies_in_presence_all_damage_can_ignite_while_not_on_low_infernal_flame" => Stat::YouAndAlliesInPresenceAllDamageCanIgniteWhileNotOnLowInfernalFlame(Other(v as f32)),
                "you_and_allies_in_presence_non_skill_base_all_damage_%_to_gain_as_fire_while_on_high_infernal_flame" => Stat::YouAndAlliesInPresenceNonSkillBaseAllDamage(Other(v as f32)),
                "you_gain_%_life_when_one_of_your_minions_is_revived" => Stat::YouGain(Other(v as f32)),
                _ => Stat::Unknown(k, v as f32),
            });
        }
        Err(Error::custom("Expected at least one stat"))
    }
}
